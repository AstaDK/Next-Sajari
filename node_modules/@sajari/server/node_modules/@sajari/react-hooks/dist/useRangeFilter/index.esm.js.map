{"version":3,"file":"index.esm.js","sources":["../../src/useRangeFilter/index.ts"],"sourcesContent":["import { isNullOrUndefined } from '@sajari/react-sdk-utils';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\nimport { RangeFilterBuilder, useContext } from '../ContextProvider';\nimport { Range } from '../ContextProvider/controllers/filters/types';\nimport { EVENT_RANGE_UPDATED } from '../ContextProvider/events';\n\nfunction useRangeFilter(name: string) {\n  const {\n    search: { filters = [], response, query },\n  } = useContext();\n\n  const prevQuery = useRef<string | null>(null);\n  const selectionUpdated = useRef<boolean>(false);\n  const filter = useMemo(\n    () => filters.filter((f) => f instanceof RangeFilterBuilder && f.getName() === name)[0] as RangeFilterBuilder,\n    [],\n  );\n  const isAggregate = filter.isAggregate();\n  const limit = filter.getMinMax();\n\n  if (!filter) {\n    throw new Error(`Filter \"${name}\" doesn't exist.`);\n  }\n\n  const [range, setInternalRange] = useState(filter.get());\n  const [min, setMin] = useState<number>(limit[0]);\n  const [max, setMax] = useState<number>(limit[1]);\n\n  useEffect(() => {\n    // Ignore the componentDidMount trigger, only call after the query was changed\n    if (isAggregate && prevQuery.current !== null) {\n      filter.reset(false);\n    }\n  }, [query]);\n\n  useEffect(() => {\n    const removeListener = filter.listen(EVENT_RANGE_UPDATED, () => {\n      setInternalRange(filter.get());\n    });\n\n    return () => {\n      removeListener();\n    };\n  }, []);\n\n  const setRange = useCallback((value: Range) => {\n    filter.set(value);\n  }, []);\n\n  const showReset = useMemo(() => {\n    if (!range) {\n      return false;\n    }\n    if (isAggregate) {\n      return range[0] !== min || range[1] !== max;\n    }\n\n    return filter.hasChanged();\n  }, [range, min, max]);\n\n  const reset = () => {\n    if (isAggregate) {\n      filter.set([...filter.getMinMax()] as Range);\n    } else {\n      filter.reset();\n    }\n  };\n\n  useEffect(() => {\n    if (!isAggregate || prevQuery.current === query) {\n      prevQuery.current = query;\n      return;\n    }\n\n    if (!response || response?.isEmpty()) {\n      setMin(range ? range[0] : limit[0]);\n      setMax(range ? range[1] : limit[1]);\n      selectionUpdated.current = false;\n      return;\n    }\n\n    const field = filter.getField();\n    const aggregates = response.getAggregates();\n    const aggregateFilters = response.getAggregateFilters();\n    let newMin = 0;\n    let newMax = 0;\n    const aggregate = (aggregates || {})[field] || {};\n    const aggregateFilter = (aggregateFilters || {})[field] || {};\n\n    if (!isNullOrUndefined(aggregateFilter.min)) {\n      newMin = aggregateFilter.min as number;\n    } else if (!isNullOrUndefined(aggregate.min)) {\n      newMin = aggregate.min as number;\n    }\n\n    if (!isNullOrUndefined(aggregateFilter.max)) {\n      newMax = aggregateFilter.max as number;\n    } else if (!isNullOrUndefined(aggregate.max)) {\n      newMax = aggregate.max as number;\n    }\n\n    [newMin, newMax] = filter.format([newMin, newMax]);\n\n    setMin(newMin);\n    setMax(newMax);\n\n    // Set the filter\n    filter.setMin(newMin);\n    filter.setMax(newMax);\n\n    filter.set([newMin, newMax], false);\n    setInternalRange([newMin, newMax]);\n\n    prevQuery.current = query;\n  }, [JSON.stringify(response?.getResults())]);\n\n  return {\n    min,\n    max,\n    step: filter.getStep(),\n    setRange,\n    range,\n    reset,\n    showReset,\n  };\n}\n\nexport default useRangeFilter;\n"],"names":["useRangeFilter","name","useContext","search","filters","response","query","prevQuery","useRef","selectionUpdated","filter","useMemo","f","RangeFilterBuilder","getName","isAggregate","limit","getMinMax","Error","useState","get","range","setInternalRange","min","setMin","max","setMax","useEffect","current","reset","removeListener","listen","EVENT_RANGE_UPDATED","setRange","useCallback","value","set","showReset","hasChanged","isEmpty","field","getField","aggregates","getAggregates","aggregateFilters","getAggregateFilters","newMin","newMax","aggregate","aggregateFilter","isNullOrUndefined","format","JSON","stringify","getResults","step","getStep"],"mappings":"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"}