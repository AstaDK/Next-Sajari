{"version":3,"file":"GoogleAnalytics.esm.js","sources":["../../../../src/ContextProvider/controllers/analytics/GoogleAnalytics.ts"],"sourcesContent":["/* eslint-disable no-restricted-syntax */\nimport { isFunction, isSSR } from '@sajari/react-sdk-utils';\n\nimport { EVENT_ANALYTICS_BODY_RESET, EVENT_ANALYTICS_PAGE_CLOSED, EVENT_ANALYTICS_RESULT_CLICKED } from '../../events';\nimport { UnlistenFn } from '../Listener';\nimport { Analytics } from './Analytics';\n\nenum GoogleAnalyticsObjects {\n  UniversalAnalytics = '_ua',\n  AnalyticsJS = 'ga',\n  GTag = 'gtag',\n}\n\nconst url = {\n  /**\n   * Convert a query string in to an object\n   */\n  decodeUriArgs(queryStr: string) {\n    const args = {} as { [k: string]: string };\n    const a = queryStr.split('&');\n    for (const i in a) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (a.hasOwnProperty(i)) {\n        const b = a[i].split('=');\n        args[decodeURIComponent(b[0])] = decodeURIComponent(b[1]);\n      }\n    }\n    return args;\n  },\n\n  /**\n   * Convert an arguments object in to a query string\n   */\n  encodeUriArgs(args: { [k: string]: string }) {\n    const queryParts: string[] = [];\n    Object.keys(args).forEach((key) => queryParts.push(`${encodeURIComponent(key)}=${encodeURIComponent(args[key])}`));\n    return queryParts.join('&');\n  },\n\n  /**\n   * Merges query strings or objects into a single query string. Accepts a variable number of query string/objects\n   * to merge. The latter overrides the former.\n   */\n  mergeQueryStr(first: string | { [k: string]: string }, ...rest: Array<string | { [k: string]: string }>) {\n    const args = typeof first === 'string' ? this.decodeUriArgs(first) : first;\n    rest.forEach((arg) => {\n      const next = typeof arg === 'string' ? this.decodeUriArgs(arg) : arg;\n      Object.keys(next).forEach((prop) => {\n        args[prop] = next[prop];\n      });\n    });\n    return this.encodeUriArgs(args);\n  },\n\n  /**\n   * Takes an existing URL and merges additional data into the query string\n   */\n  augmentUri(uri: string, args: { [k: string]: string }) {\n    const m = /^([^?]+)\\?(.+)+$/.exec(uri);\n    if (m) {\n      return `${m[1]}?${this.mergeQueryStr(m[2], args)}`;\n    }\n    return `${uri}?${this.encodeUriArgs(args)}`;\n  },\n\n  /**\n   * Get a parameter from the URL\n   */\n  getURLParameter(name: string) {\n    const value = new RegExp(`[?|&]${name}=([^&;]+?)(&|#|;|$)`).exec(window.location.search) || [undefined, ''];\n\n    return decodeURIComponent((value[1] as string).replace(/\\+/g, '%20')) || null;\n  },\n};\n\nexport class GoogleAnalytics {\n  private id: string | null;\n\n  private param: string;\n\n  private unregisterFunctions: UnlistenFn[] = [];\n\n  /**\n   * Constructs a GoogleAnalytics object.\n   * @param {Analytics} analytics The analytics object to attach to.\n   * @param {string} [id=undefined] The name of the ga global object. Defaults to \"ga\" or \"_ua\" if one isn't supplied.\n   * @param {string} [param=\"q\"] The URL parameter to use to indicate a search. Default to \"q\".\n   */\n  constructor(analytics: Analytics, id?: string, param = 'q') {\n    this.unregisterFunctions.push(analytics.listen(EVENT_ANALYTICS_PAGE_CLOSED, this.onPageClose));\n    this.unregisterFunctions.push(analytics.listen(EVENT_ANALYTICS_BODY_RESET, this.onBodyReset));\n    this.unregisterFunctions.push(analytics.listen(EVENT_ANALYTICS_RESULT_CLICKED, this.onResultClicked));\n\n    if (!isSSR()) {\n      if (id !== undefined) {\n        this.id = id;\n      } else if (isFunction(window[GoogleAnalyticsObjects.AnalyticsJS])) {\n        this.id = GoogleAnalyticsObjects.AnalyticsJS;\n      } else if (isFunction(window[GoogleAnalyticsObjects.UniversalAnalytics])) {\n        this.id = GoogleAnalyticsObjects.UniversalAnalytics;\n      } else if (isFunction(window[GoogleAnalyticsObjects.GTag])) {\n        this.id = GoogleAnalyticsObjects.GTag;\n      } else {\n        this.id = null;\n      }\n    } else {\n      this.id = null;\n    }\n    this.param = param;\n  }\n\n  /**\n   * Stops this object listening for events.\n   */\n  public detatch = () => this.unregisterFunctions.forEach((fn) => fn());\n\n  /**\n   * Sends a page view event if ga is found on the page and we're not in dev mode.\n   */\n  public sendGAPageView(body: string) {\n    if (this.id && !isSSR() && isFunction(window[this.id])) {\n      // Merge the body in with the existing query params in the url\n      const pageAddress = url.augmentUri(\n        // Take only the portion of the url following the domain\n        window.location.href.substring(window.location.origin.length),\n        { [this.param]: body },\n      );\n\n      if (this.id === GoogleAnalyticsObjects.GTag) {\n        window[this.id]('event', 'page_view', {\n          page_location: pageAddress,\n        });\n      } else {\n        window[this.id]('send', 'pageview', pageAddress);\n      }\n    }\n  }\n\n  /**\n   * Callback for when the body has been reset. Calls sendGAPageView.\n   */\n  public onBodyReset = (body: string) => this.sendGAPageView(body);\n\n  /**\n   * Callback for when a result has been clicked. Calls sendGAPageView.\n   */\n  public onResultClicked = (body: string) => this.sendGAPageView(body);\n\n  /**\n   * Callback for when the page has been closed. Calls sendGAPageView.\n   */\n  public onPageClose = (body: string) => this.sendGAPageView(body);\n}\n"],"names":["GoogleAnalyticsObjects","url","decodeUriArgs","queryStr","args","a","split","i","hasOwnProperty","b","decodeURIComponent","encodeUriArgs","queryParts","Object","keys","forEach","key","push","encodeURIComponent","join","mergeQueryStr","first","rest","arg","next","prop","augmentUri","uri","m","exec","getURLParameter","name","value","RegExp","window","location","search","undefined","replace","GoogleAnalytics","analytics","id","param","unregisterFunctions","fn","body","sendGAPageView","listen","EVENT_ANALYTICS_PAGE_CLOSED","onPageClose","EVENT_ANALYTICS_BODY_RESET","onBodyReset","EVENT_ANALYTICS_RESULT_CLICKED","onResultClicked","isSSR","isFunction","AnalyticsJS","UniversalAnalytics","GTag","pageAddress","href","substring","origin","length","page_location"],"mappings":"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"}