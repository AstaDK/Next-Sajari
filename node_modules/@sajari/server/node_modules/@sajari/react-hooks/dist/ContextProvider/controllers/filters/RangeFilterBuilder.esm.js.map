{"version":3,"file":"RangeFilterBuilder.esm.js","sources":["../../../../src/ContextProvider/controllers/filters/RangeFilterBuilder.ts"],"sourcesContent":["import { isArray, round, roundToStep } from '@sajari/react-sdk-utils';\n\nimport { EVENT_RANGE_UPDATED } from '../../events';\nimport { Listener } from '../Listener';\nimport { Range, RangeFilterOptions } from './types';\n\nconst events = [EVENT_RANGE_UPDATED];\n\nexport default class RangeFilterBuilder {\n  private initial: Range | null;\n\n  private range: Range | null;\n\n  private name: string;\n\n  private group: string | undefined;\n\n  private field: string;\n\n  private min: number;\n\n  private max: number;\n\n  private step: number;\n\n  private aggregate: boolean;\n\n  private listeners: { [k: string]: Listener };\n\n  private formatter: Required<RangeFilterOptions>['formatter'];\n\n  constructor({\n    field,\n    name,\n    group,\n    aggregate = true,\n    initial,\n    min = 0,\n    max = aggregate ? 0 : 100,\n    step = 1,\n    formatter = (value: Range) => value.map((v) => roundToStep(v, step)) as Range,\n  }: RangeFilterOptions) {\n    if (typeof initial === 'undefined') {\n      this.initial = aggregate ? null : [min, max];\n    } else {\n      this.initial = initial;\n    }\n\n    this.range = this.initial;\n    this.name = name;\n    this.group = group;\n    this.field = field;\n    this.formatter = formatter;\n    this.min = min;\n    this.max = max;\n    this.step = step;\n    this.aggregate = aggregate;\n    this.listeners = {\n      [EVENT_RANGE_UPDATED]: new Listener(),\n    };\n  }\n\n  /**\n   * Register a listener for a specific event.\n   */\n  public listen(event: string, callback: (filter: RangeFilterBuilder) => void): () => void {\n    if (!events.includes(event)) {\n      throw new Error(`Unknown event type \"${event}\"`);\n    }\n\n    return this.listeners[event].listen(callback);\n  }\n\n  public get() {\n    return this.range;\n  }\n\n  public set(range: Range | null, emitEvent = true) {\n    this.range = range ? this.formatter(range) : range;\n\n    if (emitEvent) {\n      this.emitRangeUpdated();\n    }\n  }\n\n  public getName() {\n    return this.name;\n  }\n\n  public getGroup() {\n    return this.group;\n  }\n\n  public getField() {\n    return this.field;\n  }\n\n  public setMin(value: number) {\n    this.min = value;\n  }\n\n  public setMax(value: number) {\n    this.max = value;\n  }\n\n  public getMinMax() {\n    return [this.min, this.max];\n  }\n\n  public getStep() {\n    return this.step;\n  }\n\n  /**\n   * Builds up the filter string from the current state.\n   */\n  public filter() {\n    if (!this.range) {\n      return '';\n    }\n\n    return `${this.field} >= ${this.range[0]} AND ${this.field} <= ${this.range[1]}`;\n  }\n\n  public isAggregate() {\n    return this.aggregate;\n  }\n\n  /**\n   * Check if the current range is different to the initial value\n   */\n  public hasChanged() {\n    if (!this.range || !this.initial) {\n      return this.range === this.initial;\n    }\n\n    return this.range[0] !== this.initial[0] || this.range[1] !== this.initial[1];\n  }\n\n  /**\n   * Reset the current state to the initial value\n   */\n  public reset(emitEvent = true) {\n    this.range = isArray(this.initial) ? [...this.initial] : this.initial;\n\n    if (emitEvent) {\n      this.emitRangeUpdated();\n    }\n  }\n\n  public format(value: Range) {\n    return this.formatter(value);\n  }\n\n  /**\n   * Emits a range updated event to the selection updated listener.\n   * @private\n   */\n  protected emitRangeUpdated() {\n    this.listeners[EVENT_RANGE_UPDATED].notify((listener) => {\n      listener(this);\n    });\n  }\n}\n"],"names":["events","EVENT_RANGE_UPDATED","RangeFilterBuilder","field","name","group","aggregate","initial","min","max","step","formatter","value","map","v","roundToStep","range","listeners","Listener","listen","event","callback","includes","Error","get","set","emitEvent","emitRangeUpdated","getName","getGroup","getField","setMin","setMax","getMinMax","getStep","filter","isAggregate","hasChanged","reset","isArray","format","notify","listener"],"mappings":"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"}