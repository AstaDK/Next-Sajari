export declare type VariableFn = () => string;
export declare type VariablesMap = Map<string, string | string[] | number | boolean | VariableFn>;
export interface VariablesObject {
    [k: string]: string | string[] | number | boolean | VariableFn | undefined;
}
export declare type CallbackFn = (variables: VariablesObject, set: (variables: VariablesObject) => void) => void;
export declare class Variables {
    private variables;
    private listeners;
    constructor(variables?: {
        [k: string]: string | string[] | number | boolean | VariableFn;
    });
    listen(event: string, callback: CallbackFn): import("./Listener").UnlistenFn;
    set(variables: VariablesObject): void;
    get(): {
        [k: string]: string;
    };
    private _emitUpdated;
    private _set;
}
