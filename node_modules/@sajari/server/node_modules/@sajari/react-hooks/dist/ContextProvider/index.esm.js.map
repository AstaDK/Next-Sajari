{"version":3,"file":"index.esm.js","sources":["../../src/ContextProvider/index.tsx"],"sourcesContent":["/* eslint-disable import/named */\n/* eslint-disable @typescript-eslint/no-shadow */\nimport { createContext, isEmpty, isString } from '@sajari/react-sdk-utils';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\n\nimport { Config, defaultConfig } from './Config';\nimport {\n  ClickTracking,\n  FilterBuilder,\n  FilterOptions,\n  Pipeline,\n  PosNegTracking,\n  Range,\n  RangeFilterBuilder,\n  RangeFilterOptions,\n  Response,\n  Variables,\n} from './controllers';\nimport combineFilters from './controllers/filters/combineFilters';\nimport { UnlistenFn } from './controllers/Listener';\nimport { EVENT_RANGE_UPDATED, EVENT_RESPONSE_UPDATED, EVENT_SELECTION_UPDATED, EVENT_VALUES_UPDATED } from './events';\nimport {\n  Context,\n  FieldDictionary,\n  PipelineProviderState,\n  ProviderPipelineConfig,\n  ProviderPipelineState,\n  SearchProviderValues,\n} from './types';\n\nconst updateState = (query: string, responseValues: Map<string, string> | undefined, config: Config) => {\n  const completion = query && responseValues ? responseValues.get(config.qParam) || '' : '';\n  let suggestions: string[] = [];\n  if (responseValues) {\n    suggestions = (responseValues.get(config.qSuggestionsParam) || '')\n      .split(',')\n      .filter((s) => s.length > 0)\n      .slice(0, config.maxSuggestions);\n  }\n\n  return {\n    completion,\n    query,\n    suggestions,\n  };\n};\n\nconst responseUpdatedListener = (variables: Variables, config: Config, response: Response) => {\n  const query = variables.get()[config.qParam] || '';\n  const responseValues = response.getValues();\n\n  return updateState(query, responseValues, config);\n};\n\nconst valuesUpdatedListener = (variables: Variables, pipeline: Pipeline, config: Config) => {\n  const query = variables.get()[config.qParam] || '';\n  const responseValues = pipeline.getResponse().getValues();\n\n  return updateState(query, responseValues, config);\n};\n\nconst [Provider, useContext] = createContext<Context>({\n  strict: true,\n  name: 'PipelineContext',\n});\n\nconst defaultState: ProviderPipelineState = {\n  response: null,\n  query: '',\n  completion: '',\n  suggestions: [],\n  config: defaultConfig,\n};\n\n// Map a serialized Response object back into a Response\nconst parseResponse = (initialResponse?: string) => {\n  if (!isString(initialResponse) || isEmpty(initialResponse)) {\n    return null;\n  }\n\n  const { queryValues = {}, response = {}, values = {} } = JSON.parse(initialResponse);\n\n  return new Response(\n    null,\n    new Map(Object.entries(queryValues)),\n    new Map(Object.entries(response)),\n    new Map(Object.entries(values)),\n  );\n};\n\nconst ContextProvider: React.FC<SearchProviderValues> = ({\n  children,\n  search,\n  autocomplete: autocompleteProp,\n  defaultFilter,\n  searchOnLoad,\n  initialResponse: initialResponseProp,\n}) => {\n  const initialResponse = parseResponse(initialResponseProp);\n  const [searching, setSearching] = useState(false);\n  const [autocompleteSearching, setAutocompleteSearching] = useState(false);\n  const [searchState, setSearchState] = useState({ ...defaultState, response: initialResponse });\n  const [autocompleteState, setAutocompleteState] = useState(defaultState);\n  const [configDone, setConfigDone] = useState(false);\n  const searchTimer = useRef<ReturnType<typeof setTimeout>>();\n  const searchAutocompleteTimer = useRef<ReturnType<typeof setTimeout>>();\n  const autocomplete = useRef(autocompleteProp);\n  const variables = useRef(search.variables ?? new Variables());\n  const autocompleteVariables = useRef(autocompleteProp?.variables ?? new Variables());\n  // Map the initial response\n  let response = search.pipeline.getResponse();\n  if (response.isEmpty() && initialResponse !== null) {\n    response = initialResponse;\n  }\n\n  if (!search.variables && !configDone) {\n    // For destructing down below (searchFn, clear, handlePaginate)\n    Object.assign(search, { variables: variables.current });\n  }\n  if (autocompleteProp && !autocompleteProp.variables && !configDone) {\n    // For destructing down below (searchFn, clear, handlePaginate)\n    Object.assign(autocompleteProp, { variables: autocompleteVariables.current });\n  }\n\n  if (!configDone) {\n    const filter = combineFilters(search.filters ?? []);\n    const variablesFilterString = variables.current.get().filter ?? '';\n    const defaultFilterString = defaultFilter?.toString() ?? '';\n\n    variables.current.set({\n      filter: () => {\n        const expression = filter.filter();\n        return [defaultFilterString, variablesFilterString, isEmpty(expression) ? '_id != \"\"' : expression]\n          .filter(Boolean)\n          .join(' AND ');\n      },\n      countFilters: () => filter.countFilters(),\n      buckets: () => filter.buckets(),\n      count: () => filter.count(),\n      min: () => filter.min(),\n      max: () => filter.max(),\n    });\n  }\n\n  const searchFn = useCallback(\n    (key: 'search' | 'autocomplete') => (inputQuery?: string, override = false) => {\n      const func = key === 'autocomplete' ? autocomplete.current : search;\n      const state = key === 'autocomplete' ? autocompleteState : searchState;\n      const setSearchingState = key === 'autocomplete' ? setAutocompleteSearching : setSearching;\n      const timer = key === 'autocomplete' ? searchAutocompleteTimer : searchTimer;\n      setSearchingState(true);\n      setSearchState((state) => ({ ...state, query: inputQuery ?? state.query }));\n      const { pipeline, variables } = func as Required<ProviderPipelineConfig>;\n      const { config } = state;\n\n      const text = {\n        [config.qParam]: inputQuery ?? variables.get()[config.qParam],\n        [config.qOverrideParam]: undefined,\n        [config.pageParam]: undefined,\n      };\n\n      // TODO(tuand): ask the backend the use of this property\n      if (override) {\n        text[config.qOverrideParam] = 'true';\n      }\n\n      variables.set(text);\n\n      if (timer.current) {\n        clearTimeout(timer.current);\n      }\n\n      timer.current = setTimeout(() => {\n        pipeline.search(variables.get());\n      }, 50);\n    },\n    [],\n  );\n\n  useEffect(() => {\n    const mergedConfig = { ...defaultConfig, ...search.config };\n\n    setSearchState((state) => ({\n      ...state,\n      response,\n      query: variables.current.get()[mergedConfig.qParam] || '',\n      config: mergedConfig,\n    }));\n\n    setAutocompleteState((state) => ({\n      ...state,\n      config: { ...defaultConfig, ...search.config },\n    }));\n\n    const unregisterFunctions: UnlistenFn[] = [];\n\n    if (search.filters) {\n      const filter = combineFilters(search.filters);\n\n      unregisterFunctions.push(\n        filter.listen(EVENT_SELECTION_UPDATED, () => searchFn('search')()),\n        filter.listen(EVENT_RANGE_UPDATED, () => searchFn('search')()),\n        filter.removeChildFilterListeners,\n      );\n    }\n\n    let searchRenderTimer: ReturnType<typeof setTimeout>;\n\n    unregisterFunctions.push(\n      search.pipeline.listen(EVENT_RESPONSE_UPDATED, (response: Response) => {\n        clearTimeout(searchRenderTimer);\n\n        searchRenderTimer = setTimeout(\n          () => {\n            setSearching(false);\n            setSearchState((prevState) => ({\n              ...prevState,\n              response,\n              ...responseUpdatedListener(variables.current, prevState.config, response),\n            }));\n          },\n          // Delay slightly longer if no results so if someone is typing they don't get a flash of no results\n          response.getResults()?.length === 0 ? 500 : 20,\n        );\n      }),\n    );\n\n    unregisterFunctions.push(\n      variables.current.listen(EVENT_VALUES_UPDATED, () =>\n        setSearchState((prevState) => ({\n          ...prevState,\n          ...valuesUpdatedListener(variables.current, search.pipeline, prevState.config),\n        })),\n      ),\n    );\n\n    if (!autocomplete.current) {\n      const { account, collection, endpoint } = search.pipeline.config;\n      autocomplete.current = {\n        pipeline: new Pipeline({ account, collection, endpoint }, 'autocomplete'),\n        variables: autocompleteVariables.current,\n      };\n    }\n\n    unregisterFunctions.push(\n      autocomplete.current.pipeline.listen(EVENT_RESPONSE_UPDATED, (response: Response) => {\n        setAutocompleteSearching(false);\n        setAutocompleteState((prevState) => ({\n          ...prevState,\n          response,\n          ...responseUpdatedListener(autocompleteVariables.current, prevState.config, response),\n        }));\n      }),\n    );\n\n    unregisterFunctions.push(\n      autocompleteVariables.current.listen(EVENT_VALUES_UPDATED, () =>\n        setAutocompleteState((prevState) => ({\n          ...prevState,\n          ...valuesUpdatedListener(\n            autocompleteVariables.current,\n            (autocomplete.current as ProviderPipelineConfig).pipeline,\n            prevState.config,\n          ),\n        })),\n      ),\n    );\n\n    if (searchOnLoad) {\n      search.pipeline.search(variables.current.get());\n    }\n\n    setConfigDone(true);\n\n    return () => {\n      unregisterFunctions.forEach((fn) => fn());\n    };\n  }, []);\n\n  const clear = useCallback(\n    (key: 'search' | 'autocomplete') => (vals?: { [k: string]: string | undefined }) => {\n      const func = key === 'autocomplete' ? autocomplete.current : search;\n      const { pipeline, variables } = func as Required<ProviderPipelineConfig>;\n\n      if (vals !== undefined) {\n        variables.set(vals);\n      }\n      pipeline.clearResponse(variables.get());\n    },\n    [],\n  );\n\n  const handlePaginate = useCallback(\n    (page: number) => {\n      const { pipeline, variables } = search as Required<ProviderPipelineConfig>;\n      const { config } = searchState;\n\n      variables.set({ [config.pageParam]: String(page) });\n      pipeline.search(variables.get());\n    },\n    [search.pipeline, search.variables, searchState.config],\n  );\n\n  const handleResultClicked = useCallback((url: string) => search.pipeline.emitResultClicked(url), []);\n\n  const getContext = (state: PipelineProviderState) =>\n    ({\n      ...state,\n      search: {\n        ...state.search,\n        variables: variables.current,\n        filters: search.filters,\n        pipeline: search.pipeline,\n        search: searchFn('search'),\n        clear: clear('search'),\n        fields: search.fields,\n        searching,\n      },\n      autocomplete: {\n        ...state.autocomplete,\n        variables: autocompleteVariables.current,\n        filters: search.filters,\n        pipeline: autocomplete.current?.pipeline,\n        search: searchFn('autocomplete'),\n        clear: clear('autocomplete'),\n        fields: autocomplete.current?.fields,\n        searching: autocompleteSearching,\n      },\n      resultClicked: handleResultClicked,\n      paginate: handlePaginate,\n    } as Context);\n\n  return <Provider value={getContext({ autocomplete: autocompleteState, search: searchState })}>{children}</Provider>;\n};\n\nexport default ContextProvider;\nexport {\n  ClickTracking,\n  combineFilters,\n  Config,\n  FieldDictionary,\n  FilterBuilder,\n  FilterOptions,\n  Pipeline,\n  PosNegTracking,\n  Range,\n  RangeFilterBuilder,\n  RangeFilterOptions,\n  Response,\n  useContext,\n  Variables,\n};\nexport type { SearchProviderValues };\n"],"names":["updateState","query","responseValues","config","completion","get","qParam","suggestions","qSuggestionsParam","split","filter","s","length","slice","maxSuggestions","responseUpdatedListener","variables","response","getValues","valuesUpdatedListener","pipeline","getResponse","createContext","strict","name","Provider","useContext","defaultState","defaultConfig","parseResponse","initialResponse","isString","isEmpty","JSON","parse","queryValues","values","Response","Map","Object","entries","ContextProvider","children","search","autocompleteProp","autocomplete","defaultFilter","searchOnLoad","initialResponseProp","useState","searching","setSearching","autocompleteSearching","setAutocompleteSearching","searchState","setSearchState","autocompleteState","setAutocompleteState","configDone","setConfigDone","searchTimer","useRef","searchAutocompleteTimer","Variables","autocompleteVariables","assign","current","combineFilters","filters","variablesFilterString","defaultFilterString","toString","set","expression","Boolean","join","countFilters","buckets","count","min","max","searchFn","useCallback","key","inputQuery","override","func","state","setSearchingState","timer","text","qOverrideParam","undefined","pageParam","clearTimeout","setTimeout","useEffect","mergedConfig","unregisterFunctions","push","listen","EVENT_SELECTION_UPDATED","EVENT_RANGE_UPDATED","removeChildFilterListeners","searchRenderTimer","EVENT_RESPONSE_UPDATED","prevState","getResults","EVENT_VALUES_UPDATED","account","collection","endpoint","Pipeline","forEach","fn","clear","vals","clearResponse","handlePaginate","page","String","handleResultClicked","url","emitResultClicked","getContext","fields","resultClicked","paginate","React","value"],"mappings":"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"}