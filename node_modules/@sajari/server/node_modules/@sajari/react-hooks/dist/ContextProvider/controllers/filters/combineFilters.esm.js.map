{"version":3,"file":"combineFilters.esm.js","sources":["../../../../src/ContextProvider/controllers/filters/combineFilters.ts"],"sourcesContent":["import { EVENT_OPTIONS_UPDATED, EVENT_RANGE_UPDATED, EVENT_SELECTION_UPDATED } from '../../events';\nimport { Listener } from '../Listener';\nimport FilterBuilder from './FilterBuilder';\nimport RangeFilterBuilder from './RangeFilterBuilder';\nimport { JoinOperator } from './types';\nimport { groupFilters } from './utils';\n\nconst events = [EVENT_SELECTION_UPDATED, EVENT_OPTIONS_UPDATED, EVENT_RANGE_UPDATED];\n\n/**\n * CombineFilters is a helper for combining multiple Filter instances\n * into one.\n *\n * Whenever any of the combined filters are updated, the events are\n * propagated up to the returned \"root\" filter.\n *\n * @param filters Array of filters to combine.\n * @param  [joinOperator=\"AND\"] Operator to apply between them (\"AND\" | \"OR\").\n * @return The resulting Filter.\n */\nexport default function combineFilters(\n  filters: (FilterBuilder | RangeFilterBuilder)[],\n  joinOperator: JoinOperator = 'AND',\n) {\n  const listeners = {\n    [EVENT_SELECTION_UPDATED]: new Listener(),\n    [EVENT_OPTIONS_UPDATED]: new Listener(),\n    [EVENT_RANGE_UPDATED]: new Listener(),\n  };\n  const removeListenerFuncs: (() => void)[] = [];\n\n  function listen(event: string, callback: (filter: FilterBuilder) => void): () => void {\n    if (events.indexOf(event) === -1) {\n      throw new Error(`Unknown event type \"${event}\"`);\n    }\n    return listeners[event].listen(callback);\n  }\n\n  filters.forEach((f) => {\n    if (f instanceof FilterBuilder) {\n      removeListenerFuncs.push(\n        f.listen(EVENT_SELECTION_UPDATED, () => {\n          listeners[EVENT_SELECTION_UPDATED].notify((listener) => {\n            listener(f);\n          });\n        }),\n        f.listen(EVENT_OPTIONS_UPDATED, () => {\n          listeners[EVENT_OPTIONS_UPDATED].notify((listener) => {\n            listener(f);\n          });\n        }),\n      );\n    }\n    if (f instanceof RangeFilterBuilder) {\n      removeListenerFuncs.push(\n        f.listen(EVENT_RANGE_UPDATED, () => {\n          listeners[EVENT_RANGE_UPDATED].notify((listener) => {\n            listener(f);\n          });\n        }),\n      );\n    }\n  });\n\n  function removeChildFilterListeners() {\n    removeListenerFuncs.forEach((fn) => fn());\n  }\n\n  // Generate filter field from non aggregate count Filter(s) for Variables object\n  const filter = () => groupFilters(filters, 'filter', ` ${joinOperator} `);\n\n  // Generate buckets field from non aggregate count Filter(s) for Variables object\n  const buckets = () =>\n    filters\n      .filter((f) => f instanceof FilterBuilder && !f.getCount())\n      .map((f) => f instanceof FilterBuilder && f.getBuckets())\n      .filter(Boolean)\n      .join(',');\n\n  // Generate countFilters field from aggregate count Filter(s) for Variables object\n  const countFilters = () => groupFilters(filters, 'countFilters', ',');\n\n  // Generate count field from aggregate count Filter(s) for Variables object\n  const count = () =>\n    filters\n      .filter((f) => f instanceof FilterBuilder && f.getCount())\n      .map((f) => f instanceof FilterBuilder && f.getField())\n      .filter(Boolean)\n      .join(',');\n\n  // Generate min field from range Filter(s) for Variables object\n  const min = () =>\n    filters\n      .filter((f) => f instanceof RangeFilterBuilder && f.isAggregate())\n      .map((f) => f.getField())\n      .join(',');\n\n  // Generate max field from range Filter(s) for Variables object\n  const max = () =>\n    filters\n      .filter((f) => f instanceof RangeFilterBuilder && f.isAggregate())\n      .map((f) => f.getField())\n      .join(',');\n\n  return { filter, listen, buckets, countFilters, count, removeChildFilterListeners, max, min };\n}\n"],"names":["events","EVENT_SELECTION_UPDATED","EVENT_OPTIONS_UPDATED","EVENT_RANGE_UPDATED","combineFilters","filters","joinOperator","listeners","Listener","removeListenerFuncs","listen","event","callback","indexOf","Error","forEach","f","FilterBuilder","push","notify","listener","RangeFilterBuilder","removeChildFilterListeners","fn","filter","groupFilters","buckets","getCount","map","getBuckets","Boolean","join","countFilters","count","getField","min","isAggregate","max"],"mappings":"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"}