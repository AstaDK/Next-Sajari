{"version":3,"file":"index.esm.js","sources":["../../src/Pagination/index.tsx"],"sourcesContent":["import { clamp, getStylesObject, isFunction, isSSR, isString } from '@sajari/react-sdk-utils';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport smoothscroll from 'smoothscroll-polyfill';\n\nimport { IconChevronLeft, IconChevronRight } from '../assets/icons';\nimport Box from '../Box';\nimport Button from '../Button';\nimport ButtonGroup from '../ButtonGroup';\nimport { useFirstRender, useResizeObserver } from '../hooks';\nimport usePaginationStyles from './styles';\nimport { PaginationProps } from './types';\n\nconst defaultI18n = {\n  label: 'Pagination',\n  previous: 'Previous',\n  next: 'Next',\n  page: 'Page {{page}}',\n  current: 'Page {{page}}, current page',\n};\n\nconst Pagination = React.memo((props: PaginationProps) => {\n  const { ref, width } = useResizeObserver<HTMLDivElement>();\n  const {\n    language,\n    totalResults,\n    resultsPerPage,\n    page,\n    pageCount,\n    onChange,\n    i18n: i18nProp,\n    buttonClassName,\n    activeClassName = '',\n    nextClassName,\n    prevClassName,\n    spacerEllipsisClassName,\n    statusClassName,\n    styles: stylesProp,\n    disableDefaultStyles = false,\n    scrollTarget,\n    scrollToTop = false,\n    compact = width && width < 480,\n    ...rest\n  } = props;\n  const firstRender = useFirstRender();\n  const styles = getStylesObject(usePaginationStyles(props), disableDefaultStyles);\n  const i18n = { ...defaultI18n, ...i18nProp };\n\n  // Polyfill\n  React.useEffect(() => {\n    if (!isSSR()) {\n      smoothscroll.polyfill();\n    }\n  }, []);\n\n  // Handle scroll on paginate\n  React.useEffect(() => {\n    if (firstRender || isSSR()) {\n      return;\n    }\n\n    const scrollOptions: ScrollToOptions = { behavior: 'smooth' };\n    let target: Element | null = null;\n\n    if (isString(scrollTarget)) {\n      target = document.querySelector(scrollTarget);\n    } else if (scrollTarget) {\n      target = scrollTarget;\n    }\n\n    // Scroll an element (or document.body) into view\n    if (scrollToTop) {\n      (target ?? document.body).scrollIntoView(scrollOptions);\n    }\n\n    // Scroll within the element if specified\n    if (target) {\n      target.scrollTo({ ...scrollOptions, top: 0 });\n    }\n  }, [page]);\n\n  // Calculate the page count\n  const count = React.useMemo(() => {\n    if (!totalResults || !resultsPerPage) {\n      return undefined;\n    }\n\n    if (!pageCount) {\n      return Math.ceil(totalResults / resultsPerPage);\n    }\n\n    return pageCount;\n  }, [pageCount, totalResults, resultsPerPage]);\n\n  const changeHandler = React.useCallback(\n    (exitEarly: boolean, target: number) => () => {\n      if (target === page || exitEarly) {\n        return;\n      }\n\n      onChange(clamp(target, 1, count));\n    },\n    [onChange, page, count],\n  );\n\n  const renderButtons = () => {\n    const limit = 5;\n    const middle = Math.ceil(limit / 2);\n    let offset = 0;\n\n    if (!count) {\n      return null;\n    }\n\n    if (count > limit) {\n      if (page < limit) {\n        offset = 0;\n      } else {\n        const max = count - limit;\n        offset = clamp(page > max ? max : page - middle, 0, max);\n      }\n    }\n\n    const items: Array<number | null> = Array.from(Array(clamp(count, 0, limit))).map(\n      (_, index) => Number(index) + offset,\n    );\n\n    if (count > limit) {\n      // Add the 1 ...\n      if (offset > 1) {\n        items.unshift(0, null);\n      }\n\n      // Add the ... last\n      const lastIndex = count - 1;\n\n      if (!items.includes(lastIndex) && count > limit + 2) {\n        items.push(null, lastIndex);\n      }\n    }\n\n    return items.map((item, index) => {\n      if (item === null) {\n        return (\n          <Box\n            as=\"span\"\n            key={`spacer-ellipsis-${index}`} // eslint-disable-line\n            css={styles.spacerEllipsis}\n            className={spacerEllipsisClassName}\n          >\n            &hellip;\n          </Box>\n        );\n      }\n\n      const number = item + 1;\n      const active = number === page;\n      const template = active ? i18n.current : i18n.page;\n      const ariaLabel = isFunction(template) ? template({ page: number }) : template;\n\n      return (\n        <Button\n          key={item}\n          appearance={active ? 'primary' : undefined}\n          aria-current={active ? 'page' : undefined}\n          aria-label={ariaLabel}\n          onClick={changeHandler(false, number)}\n          className={classnames(buttonClassName, { [activeClassName]: active })}\n        >\n          {number.toLocaleString(language)}\n        </Button>\n      );\n    });\n  };\n\n  if (!count || count <= 1) {\n    return null;\n  }\n\n  const hasPrevious = page > 1;\n  const hasNext = page < count;\n\n  return (\n    <ButtonGroup as=\"nav\" ref={ref} aria-label={i18n.label} attached css={[styles.container, stylesProp]} {...rest}>\n      <Button\n        spacing=\"compact\"\n        disabled={!hasPrevious}\n        onClick={changeHandler(!hasPrevious, page - 1)}\n        aria-label={i18n.previous}\n        className={classnames(prevClassName, buttonClassName)}\n        rel=\"prev\"\n        key=\"prev\"\n      >\n        &#8203;\n        <IconChevronLeft />\n      </Button>\n\n      {compact ? (\n        <Box as=\"span\" css={styles.compactStatus} className={statusClassName} key=\"status\">\n          {page.toLocaleString(language)}\n          <Box as=\"span\" css={styles.compactStatusCount}>{` / ${count.toLocaleString(language)}`}</Box>\n        </Box>\n      ) : (\n        renderButtons()\n      )}\n\n      <Button\n        spacing=\"compact\"\n        disabled={!hasNext}\n        onClick={changeHandler(!hasNext, page + 1)}\n        aria-label={i18n.next}\n        className={classnames(nextClassName, buttonClassName)}\n        rel=\"next\"\n        key=\"next\"\n      >\n        &#8203;\n        <IconChevronRight />\n      </Button>\n    </ButtonGroup>\n  );\n});\n\nexport default Pagination;\nexport type { PaginationProps };\n"],"names":["defaultI18n","label","previous","next","page","current","Pagination","React","props","useResizeObserver","ref","width","language","totalResults","resultsPerPage","pageCount","onChange","i18nProp","i18n","buttonClassName","activeClassName","nextClassName","prevClassName","spacerEllipsisClassName","statusClassName","stylesProp","styles","disableDefaultStyles","scrollTarget","scrollToTop","compact","rest","firstRender","useFirstRender","getStylesObject","usePaginationStyles","isSSR","smoothscroll","polyfill","scrollOptions","behavior","target","isString","document","querySelector","body","scrollIntoView","scrollTo","top","count","undefined","Math","ceil","changeHandler","exitEarly","clamp","renderButtons","limit","middle","offset","max","items","Array","from","map","_","index","Number","unshift","lastIndex","includes","push","item","_jsx","spacerEllipsis","number","active","template","ariaLabel","isFunction","classnames","toLocaleString","hasPrevious","hasNext","_jsxs","container","compactStatus","compactStatusCount"],"mappings":"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"}