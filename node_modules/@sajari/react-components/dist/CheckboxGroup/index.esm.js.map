{"version":3,"file":"index.esm.js","sources":["../../src/CheckboxGroup/index.tsx"],"sourcesContent":["import { useId } from '@react-aria/utils';\nimport { cleanChildren, getStylesObject } from '@sajari/react-sdk-utils';\nimport React, { cloneElement, useRef, useState } from 'react';\nimport tw from 'twin.macro';\n\nimport Box from '../Box';\nimport Text from '../Text';\nimport { useCheckboxGroupStyles } from './styles';\nimport { CheckboxGroupProps } from './types';\n\ntype Values = string | number | readonly string[] | undefined;\n\nconst CheckboxGroup = (props: CheckboxGroupProps) => {\n  const {\n    onChange,\n    name,\n    label = name,\n    defaultValue,\n    value: valueProp,\n    children,\n    styles: stylesProp,\n    disableDefaultStyles = false,\n    'aria-labelledby': ariaLabelledBy,\n    ...rest\n  } = props;\n\n  const [values, setValues] = useState(defaultValue || []);\n  const { current: controlled } = useRef(typeof valueProp !== 'undefined');\n  const internalValues = (controlled ? valueProp : values) || [];\n  const styles = getStylesObject(useCheckboxGroupStyles(props), disableDefaultStyles);\n\n  const internalChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { checked, value } = event.target;\n    let newValues: Array<Values>;\n\n    if (checked) {\n      newValues = [...internalValues, value];\n    } else {\n      newValues = internalValues.filter((v) => v !== value);\n    }\n    if (!controlled) {\n      setValues(newValues);\n    }\n    if (onChange) {\n      onChange(newValues);\n    }\n  };\n\n  // If no name is passed, we'll generate a random, unique name\n  const fallbackName = `checkbox-${useId()}`;\n  const internalName = name || fallbackName;\n  const validChildren = cleanChildren(children);\n\n  const clones = validChildren.map((child, index) => {\n    const checked = internalValues.includes(child.props.value);\n\n    // TODO: Handle if the child isn't a Checkbox since this assumes it will be\n    return cloneElement(child, {\n      key: `${internalName}-${index}`,\n      name: `${internalName}-${index}`,\n      onChange: internalChange,\n      checked,\n      disableDefaultStyles,\n    });\n  });\n\n  const labelId = `group-label-${useId()}`;\n\n  return (\n    <Box {...rest} role=\"group\" aria-labelledby={ariaLabelledBy ?? labelId} css={[styles.container, stylesProp]}>\n      {label && !ariaLabelledBy && (\n        <Text id={labelId} css={tw`sr-only`}>\n          {label}\n        </Text>\n      )}\n\n      {clones}\n    </Box>\n  );\n};\n\nexport default CheckboxGroup;\nexport type { CheckboxGroupProps };\n"],"names":["CheckboxGroup","props","onChange","name","label","defaultValue","valueProp","value","children","stylesProp","styles","disableDefaultStyles","ariaLabelledBy","rest","useState","values","setValues","useRef","controlled","current","internalValues","getStylesObject","useCheckboxGroupStyles","internalChange","event","target","checked","newValues","filter","v","fallbackName","useId","internalName","validChildren","cleanChildren","clones","map","child","index","includes","cloneElement","key","labelId","_jsxs","container","_jsx"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAYA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD;MAElBC,WAUED,MAVFC;MACAC,OASEF,MATFE;qBASEF,MARFG;MAAAA,kCAAQD;MACRE,eAOEJ,MAPFI;MACOC,YAMLL,MANFM;MACAC,WAKEP,MALFO;MACQC,aAINR,MAJFS;8BAIET,MAHFU;MAAAA,0DAAuB;MACJC,iBAEjBX,MAFF;MACGY,qCACDZ;;kBAEwBa,QAAQ,CAACT,YAAY,IAAI,EAAjB;MAA7BU;MAAQC;;gBACiBC,MAAM,CAAC,OAAOX,SAAP,KAAqB,WAAtB;MAArBY,qBAATC;;AACR,MAAMC,cAAc,GAAG,CAACF,UAAU,GAAGZ,SAAH,GAAeS,MAA1B,KAAqC,EAA5D;AACA,MAAML,MAAM,GAAGW,eAAe,CAACC,sBAAsB,CAACrB,KAAD,CAAvB,EAAgCU,oBAAhC,CAA9B;;AAEA,MAAMY,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD;wBACMA,KAAK,CAACC;QAAzBC,wBAAAA;QAASnB,sBAAAA;AACjB,QAAIoB,SAAJ;;AAEA,QAAID,OAAJ,EAAa;AACXC,MAAAA,SAAS,aAAOP,cAAP,GAAuBb,KAAvB,EAAT;AACD,KAFD,MAEO;AACLoB,MAAAA,SAAS,GAAGP,cAAc,CAACQ,MAAf,CAAsB,UAACC,CAAD;AAAA,eAAOA,CAAC,KAAKtB,KAAb;AAAA,OAAtB,CAAZ;AACD;;AACD,QAAI,CAACW,UAAL,EAAiB;AACfF,MAAAA,SAAS,CAACW,SAAD,CAAT;AACD;;AACD,QAAIzB,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACyB,SAAD,CAAR;AACD;AACF,GAfD;;AAkBA,MAAMG,YAAY,iBAAeC,KAAK,EAAtC;AACA,MAAMC,YAAY,GAAG7B,IAAI,IAAI2B,YAA7B;AACA,MAAMG,aAAa,GAAGC,aAAa,CAAC1B,QAAD,CAAnC;AAEA,MAAM2B,MAAM,GAAGF,aAAa,CAACG,GAAd,CAAkB,UAACC,KAAD,EAAQC,KAAR;AAC/B,QAAMZ,OAAO,GAAGN,cAAc,CAACmB,QAAf,CAAwBF,KAAK,CAACpC,KAAN,CAAYM,KAApC,CAAhB;AAGA,wBAAOiC,YAAY,CAACH,KAAD,EAAQ;AACzBI,MAAAA,GAAG,EAAKT,YAAL,SAAqBM,KADC;AAEzBnC,MAAAA,IAAI,EAAK6B,YAAL,SAAqBM,KAFA;AAGzBpC,MAAAA,QAAQ,EAAEqB,cAHe;AAIzBG,MAAAA,OAAO,EAAPA,OAJyB;AAKzBf,MAAAA,oBAAoB,EAApBA;AALyB,KAAR,CAAnB;AAOD,GAXc,CAAf;AAaA,MAAM+B,OAAO,oBAAkBX,KAAK,EAApC;AAEA,SACEY,KAAC,GAAD,eAAS9B,IAAT;AAAe,IAAA,IAAI,EAAC,OAApB;AAA4B,uBAAiBD,cAAjB,WAAiBA,cAAjB,GAAmC8B,OAA/D;AAAwE,IAAA,GAAG,oBAAE,CAAChC,MAAM,CAACkC,SAAR,EAAmBnC,UAAnB,CAAF,iyGAA3E;AAAA,eACGL,KAAK,IAAI,CAACQ,cAAV,IACCiC,IAAC,IAAD;AAAM,MAAA,EAAE,EAAEH,OAAV;AAAmB,MAAA,GAAG,MAAtB;AAAA,gBACGtC;AADH,MAFJ,EAOG+B,MAPH;AAAA,KADF;AAWD,CAnED;;;;"}