import { mapStyles } from '@sajari/react-sdk-utils';
import '../hooks/useBorderRadius.esm.js';
import '../hooks/useDropdownItemStyles.esm.js';
import '../hooks/useDropdownStyles.esm.js';
import '../hooks/useFirstRender.esm.js';
import '../hooks/useRingStyles.esm.js';
import '../hooks/useFocusRingStyles.esm.js';
import useFontSize from '../hooks/useFontSize.esm.js';
import '../hooks/useInputStyles.esm.js';
import '../hooks/useJustifyContent.esm.js';
import '../hooks/useSpacing.esm.js';
import '../hooks/useVoiceInput.esm.js';
import 'use-resize-observer/polyfilled';
import { mapTruncateValue } from '../utils/styles.esm.js';

function useTextStyles(_ref) {
  var as = _ref.as,
      truncate = _ref.truncate,
      size = _ref.size;
  var sizeStyles = useFontSize({
    size: size
  });
  var styles = {
    container: [{
      "padding": "0",
      "margin": "0"
    }, mapTruncateValue(truncate), sizeStyles]
  };

  switch (as) {
    case 'small':
      styles.container.push({
        "fontSize": "0.875rem"
      });
      break;

    case 'pre':
    case 'code':
      styles.container.push({
        "fontFamily": "Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace",
        "fontWeight": "400",
        "fontSize": "0.9375em"
      });
      break;

    case 'mark':
      styles.container.push({
        "paddingLeft": "0.25rem",
        "paddingRight": "0.25rem",
        "--text-opacity": "1",
        "color": "rgba(37, 47, 63, var(--text-opacity))",
        "--bg-opacity": "1",
        "backgroundColor": "rgba(253, 246, 178, var(--bg-opacity))"
      });
      break;
  }

  if (as === 'code') {
    styles.container.push({
      "--text-opacity": "1",
      "color": "rgba(240, 82, 82, var(--text-opacity))"
    });
  }

  return mapStyles(styles);
}

export default useTextStyles;
//# sourceMappingURL=styles.esm.js.map
