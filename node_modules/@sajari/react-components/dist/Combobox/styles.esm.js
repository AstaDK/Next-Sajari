import { mapStyles, inferStylesObjectKeys } from '@sajari/react-sdk-utils';
import '../hooks/useBorderRadius.esm.js';
import '../hooks/useDropdownItemStyles.esm.js';
import '../hooks/useDropdownStyles.esm.js';
import '../hooks/useFirstRender.esm.js';
import '../hooks/useRingStyles.esm.js';
import useFocusRingStyles from '../hooks/useFocusRingStyles.esm.js';
import '../hooks/useFontSize.esm.js';
import '../hooks/useInputStyles.esm.js';
import '../hooks/useJustifyContent.esm.js';
import '../hooks/useSpacing.esm.js';
import '../hooks/useVoiceInput.esm.js';
import 'use-resize-observer/polyfilled';

function useComboboxStyles(props) {
  var size = props.size,
      voiceEnabled = props.voiceEnabled,
      loading = props.loading;

  var _useFocusRingStyles = useFocusRingStyles(),
      focusProps = _useFocusRingStyles.focusProps,
      focusRingStyles = _useFocusRingStyles.focusRingStyles;

  var containerStyles = [];
  var iconContainerStyles = [{
    "position": "absolute",
    "top": "0",
    "bottom": "0",
    "display": "flex",
    "alignItems": "center",
    "> :not(template) ~ :not(template)": {
      "--space-x-reverse": 0,
      "marginRight": "calc(0.5rem * var(--space-x-reverse))",
      "marginLeft": "calc(0.5rem * calc(1 - var(--space-x-reverse)))"
    },
    "--text-opacity": "1",
    "color": "rgba(159, 166, 178, var(--text-opacity))"
  }];

  switch (size) {
    case 'sm':
      containerStyles.push({
        "paddingTop": "0.25rem",
        "paddingBottom": "0.25rem",
        "fontSize": "0.875rem",
        "paddingLeft": "1.75rem"
      });

      if (loading && voiceEnabled) {
        containerStyles.push({
          "paddingRight": "3.25rem"
        });
      } else if (loading || voiceEnabled) {
        containerStyles.push({
          "paddingRight": "1.75rem"
        });
      }

      iconContainerStyles.push({
        "paddingLeft": "0.5rem",
        "paddingRight": "0.5rem"
      });
      break;

    case 'lg':
      containerStyles.push({
        "paddingTop": "0.75rem",
        "paddingBottom": "0.75rem",
        "fontSize": "1.125rem",
        "paddingLeft": "2.75rem"
      });

      if (loading && voiceEnabled) {
        containerStyles.push({
          "paddingRight": "3.75rem"
        });
      } else if (loading || voiceEnabled) {
        containerStyles.push({
          "paddingRight": "2.75rem"
        });
      }

      iconContainerStyles.push({
        "paddingLeft": "1rem",
        "paddingRight": "1rem"
      });
      break;

    case 'md':
    default:
      containerStyles.push({
        "paddingLeft": "2.25rem"
      });

      if (loading && voiceEnabled) {
        containerStyles.push({
          "paddingRight": "3.5rem"
        });
      } else if (loading || voiceEnabled) {
        containerStyles.push({
          "paddingRight": "2.25rem"
        });
      }

      iconContainerStyles.push({
        "paddingLeft": "0.75rem",
        "paddingRight": "0.75rem"
      });
      break;
  }

  var styles = inferStylesObjectKeys({
    container: [{
      "position": "relative"
    }],
    inputContainer: [{
      "appearance": "none",
      "backgroundColor": "#ffffff",
      "borderColor": "#d2d6dc",
      "borderWidth": "1px",
      "borderRadius": "0.375rem",
      "paddingTop": "0.5rem",
      "paddingRight": "0.75rem",
      "paddingBottom": "0.5rem",
      "paddingLeft": "0.75rem",
      "fontSize": "1rem",
      "lineHeight": "1.5",
      "::placeholder": {
        "color": "#9fa6b2",
        "opacity": "1"
      },
      ":focus": {
        "outline": "none",
        "boxShadow": "0 0 0 3px rgba(164, 202, 254, 0.45)",
        "borderColor": "#a4cafe"
      }
    }, {
      "position": "relative",
      "fontSize": "1rem",
      "transitionProperty": "all",
      "transitionDuration": "150ms",
      "--bg-opacity": "1",
      "backgroundColor": "rgba(255, 255, 255, var(--bg-opacity))",
      "borderWidth": "1px",
      "--border-opacity": "1",
      "borderColor": "rgba(229, 231, 235, var(--border-opacity))",
      "borderStyle": "solid"
    }].concat(focusRingStyles, containerStyles),
    iconContainerLeft: [].concat(iconContainerStyles, [{
      "left": "0"
    }]),
    iconContainerRight: [].concat(iconContainerStyles, [{
      "right": "0"
    }]),
    input: [{
      "appearance": "none",
      "backgroundColor": "#ffffff",
      "borderColor": "#d2d6dc",
      "borderWidth": "1px",
      "borderRadius": "0.375rem",
      "paddingTop": "0.5rem",
      "paddingRight": "0.75rem",
      "paddingBottom": "0.5rem",
      "paddingLeft": "0.75rem",
      "fontSize": "1rem",
      "lineHeight": "1.5",
      "::placeholder": {
        "color": "#9fa6b2",
        "opacity": "1"
      },
      ":focus": {
        "outline": "none",
        "boxShadow": "0 0 0 3px rgba(164, 202, 254, 0.45)",
        "borderColor": "#a4cafe"
      }
    }, {
      "position": "absolute",
      "top": "0",
      "right": "0",
      "bottom": "0",
      "left": "0",
      "width": "100%",
      "backgroundColor": "transparent",
      "borderWidth": "0",
      ":focus": {
        "boxShadow": "none"
      },
      "fontFamily": "inherit"
    }].concat(containerStyles, [" &::-ms-clear,\n        &::-ms-reveal {\n          display: none;\n          width: 0;\n          height: 0;\n        }\n        &::-webkit-search-decoration,\n        &::-webkit-search-cancel-button,\n        &::-webkit-search-results-button,\n        &::-webkit-search-results-decoration {\n          -webkit-appearance:none;\n        }"]),
    iconSpinner: []
  });

  if (size === 'sm') {
    styles.iconSpinner.push({
      "width": "0.75rem",
      "height": "0.75rem"
    });
  }

  return {
    styles: mapStyles(styles),
    focusProps: focusProps
  };
}

export { useComboboxStyles };
//# sourceMappingURL=styles.esm.js.map
