import { PropGetters } from 'downshift';
import { ComboboxCustomClassNames, ComboboxMode, ComboboxProps } from './types';
interface ComboboxContextProps<T = any> {
    mode: ComboboxMode;
    inputValue: string;
    open: boolean;
    items: ComboboxProps<T>['items'];
    completion: string;
    getItemProps: PropGetters<T>['getItemProps'];
    getMenuProps: PropGetters<T>['getMenuProps'];
    highlightedIndex: number;
    selectedItem: T;
    showDropdownTips: boolean;
    showPoweredBy: boolean;
    typedInputValue: string;
    renderItem?: ComboboxProps<T>['renderItem'];
    itemToString: Required<ComboboxProps<T>>['itemToString'];
    itemToUrl: Required<ComboboxProps<T>>['itemToUrl'];
    onSelect: ComboboxProps<T>['onSelect'];
    disableDefaultStyles: ComboboxProps<T>['disableDefaultStyles'];
    customClassNames: ComboboxCustomClassNames;
}
declare const ComboboxContextProvider: import("react").Provider<ComboboxContextProps<any>>, useComboboxContext: () => ComboboxContextProps<any>;
export default ComboboxContextProvider;
export { useComboboxContext };
