import _css from '@emotion/css';
import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose, extends as _extends } from '../_virtual/_rollupPluginBabelHelpers.js';
import { getStylesObject, isFunction, __DEV__, isSSR } from '@sajari/react-sdk-utils';
import React__default, { useState, useEffect } from 'react';
import { jsx, jsxs } from '@emotion/core/jsx-runtime';
import Box from '../Box/index.esm.js';
import { useId, mergeProps } from '@react-aria/utils';
import '../hooks/useBorderRadius.esm.js';
import '../hooks/useDropdownItemStyles.esm.js';
import '../hooks/useDropdownStyles.esm.js';
import '../hooks/useFirstRender.esm.js';
import '../hooks/useRingStyles.esm.js';
import '../hooks/useFocusRingStyles.esm.js';
import '../hooks/useFontSize.esm.js';
import '../hooks/useInputStyles.esm.js';
import '../hooks/useJustifyContent.esm.js';
import '../hooks/useSpacing.esm.js';
import useVoiceInput from '../hooks/useVoiceInput.esm.js';
import 'use-resize-observer/polyfilled';
import { useCombobox } from 'downshift';
import ReactDOM from 'react-dom';
import '../assets/icons/check.esm.js';
import '../assets/icons/chevron-left.esm.js';
import '../assets/icons/chevron-right.esm.js';
import '../assets/icons/down-key.esm.js';
import '../assets/icons/empty-mic.esm.js';
import '../assets/icons/enter-key.esm.js';
import '../assets/icons/mic.esm.js';
import IconSearch from '../assets/icons/search.esm.js';
import '../assets/icons/small-check.esm.js';
import IconSmallSearch from '../assets/icons/small-search.esm.js';
import '../assets/icons/small-star.esm.js';
import IconSpinner from '../assets/icons/spinner.esm.js';
import '../assets/icons/up-key.esm.js';
import '../assets/icons/close.esm.js';
import ComboboxContextProvider from './context.esm.js';
import Dropdown from './components/Dropdown/index.esm.js';
import Typeahead from './components/Typeahead/index.esm.js';
import Voice from './components/Voice/index.esm.js';
import { useComboboxStyles } from './styles.esm.js';

function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }

var _ref2 = process.env.NODE_ENV === "production" ? {
  name: "krlno2-Combobox",
  styles: "position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0;;label:Combobox;"
} : {
  name: "krlno2-Combobox",
  styles: "position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0;;label:Combobox;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};

var Combobox = /*#__PURE__*/React__default.forwardRef(function ComboboxInner(props, ref) {
  var _props$mode = props.mode,
      mode = _props$mode === void 0 ? 'standard' : _props$mode,
      label = props.label,
      _props$placeholder = props.placeholder,
      placeholder = _props$placeholder === void 0 ? 'Search' : _props$placeholder,
      _props$enterKeyHint = props.enterKeyHint,
      enterKeyHint = _props$enterKeyHint === void 0 ? 'search' : _props$enterKeyHint,
      _props$id = props.id,
      id = _props$id === void 0 ? "combobox-" + useId() : _props$id,
      invalid = props.invalid,
      _props$onChange = props.onChange,
      onChange = _props$onChange === void 0 ? function () {} : _props$onChange,
      _props$onKeyDown = props.onKeyDown,
      _onKeyDown = _props$onKeyDown === void 0 ? function () {} : _props$onKeyDown,
      _props$onVoiceInput = props.onVoiceInput,
      onVoiceInput = _props$onVoiceInput === void 0 ? function () {} : _props$onVoiceInput,
      _props$enableVoice = props.enableVoice,
      enableVoice = _props$enableVoice === void 0 ? false : _props$enableVoice,
      _props$captureVoiceIn = props.captureVoiceInput,
      captureVoiceInput = _props$captureVoiceIn === void 0 ? true : _props$captureVoiceIn,
      _props$loading = props.loading,
      loading = _props$loading === void 0 ? false : _props$loading,
      _props$value = props.value,
      valueProp = _props$value === void 0 ? '' : _props$value,
      _props$items = props.items,
      items = _props$items === void 0 ? [] : _props$items,
      _props$completion = props.completion,
      completion = _props$completion === void 0 ? '' : _props$completion,
      _props$size = props.size,
      size = _props$size === void 0 ? 'md' : _props$size,
      _props$showDropdownTi = props.showDropdownTips,
      showDropdownTips = _props$showDropdownTi === void 0 ? false : _props$showDropdownTi,
      _props$showPoweredBy = props.showPoweredBy,
      showPoweredBy = _props$showPoweredBy === void 0 ? true : _props$showPoweredBy,
      _props$itemToString = props.itemToString,
      itemToString = _props$itemToString === void 0 ? mode === 'results' ? function (item) {
    return item.title;
  } : function (item) {
    return item;
  } : _props$itemToString,
      _props$itemToUrl = props.itemToUrl,
      itemToUrl = _props$itemToUrl === void 0 ? function (item) {
    return item.url;
  } : _props$itemToUrl,
      renderItem = props.renderItem,
      onSelect = props.onSelect,
      _props$disableDefault = props.disableDefaultStyles,
      disableDefaultStyles = _props$disableDefault === void 0 ? false : _props$disableDefault,
      className = props.className,
      stylesProp = props.styles,
      inputClassName = props.inputClassName,
      inputContainerClassName = props.inputContainerClassName,
      inputElement = props.inputElement,
      rest = _objectWithoutPropertiesLoose(props, ["mode", "label", "placeholder", "enterKeyHint", "id", "invalid", "onChange", "onKeyDown", "onVoiceInput", "enableVoice", "captureVoiceInput", "loading", "value", "items", "completion", "size", "showDropdownTips", "showPoweredBy", "itemToString", "itemToUrl", "renderItem", "onSelect", "disableDefaultStyles", "className", "styles", "inputClassName", "inputContainerClassName", "inputElement"]);

  var _useState = useState(valueProp.toString()),
      typedInputValue = _useState[0],
      setTypedInputValue = _useState[1];

  var _useVoiceInput = useVoiceInput(),
      voiceSupported = _useVoiceInput.supported;

  var _useState2 = useState(valueProp.toString()),
      value = _useState2[0],
      setValue = _useState2[1];

  var _useState3 = useState(),
      container = _useState3[0],
      setContainer = _useState3[1];

  useEffect(function () {
    setValue(valueProp.toString());
  }, [valueProp]);

  var _useCombobox = useCombobox({
    items: items,
    itemToString: itemToString,
    inputValue: value,
    onInputValueChange: function onInputValueChange(changes) {
      var _changes$inputValue;

      setValue((_changes$inputValue = changes.inputValue) != null ? _changes$inputValue : '');
    },
    stateReducer: function stateReducer(state, _ref) {
      var changes = _ref.changes,
          type = _ref.type;

      if (mode === 'suggestions') {
        switch (type) {
          case useCombobox.stateChangeTypes.InputKeyDownArrowDown:
            if (state.highlightedIndex === (items || []).length - 1) {
              return _extends({}, changes, {
                inputValue: typedInputValue,
                highlightedIndex: undefined
              });
            }

            if (changes.highlightedIndex !== undefined) {
              var item = (items || [])[changes.highlightedIndex];
              var stringItem = itemToString(item);

              if (typeof stringItem !== 'string') {
                return changes;
              }

              return _extends({}, changes, {
                inputValue: stringItem,
                selectedItem: item
              });
            }

            return changes;

          case useCombobox.stateChangeTypes.InputKeyDownArrowUp:
            if (state.highlightedIndex === 0) {
              return _extends({}, changes, {
                inputValue: typedInputValue,
                highlightedIndex: undefined
              });
            }

            if (changes.highlightedIndex !== undefined) {
              var _item = (items || [])[changes.highlightedIndex];

              var _stringItem = itemToString(_item);

              if (typeof _stringItem !== 'string') {
                return changes;
              }

              return _extends({}, changes, {
                inputValue: _stringItem,
                selectedItem: _item
              });
            }

            return changes;

          case useCombobox.stateChangeTypes.ItemMouseMove:
            if (changes.highlightedIndex !== undefined) {
              var _item2 = (items || [])[changes.highlightedIndex];

              var _stringItem2 = itemToString(_item2);

              if (typeof _stringItem2 !== 'string') {
                return changes;
              }

              return _extends({}, changes, {
                inputValue: _stringItem2,
                selectedItem: _item2
              });
            }

            return changes;

          case useCombobox.stateChangeTypes.InputKeyDownEscape:
            if (state.isOpen) {
              return _extends({}, changes, {
                isOpen: true,
                inputValue: typedInputValue
              });
            }

            return changes;

          case useCombobox.stateChangeTypes.InputKeyDownEnter:
            return _extends({}, changes, {
              isOpen: false
            });

          default:
            return changes;
        }
      }

      if (mode === 'results') {
        switch (type) {
          case useCombobox.stateChangeTypes.InputKeyDownEnter:
            return _extends({}, changes, {
              inputValue: ''
            });

          case useCombobox.stateChangeTypes.ItemClick:
            return _extends({}, changes, {
              inputValue: ''
            });

          case useCombobox.stateChangeTypes.InputChange:
            if (changes.inputValue === '') {
              return _extends({}, changes, {
                isOpen: false
              });
            }

            return changes;

          default:
            return changes;
        }
      }

      return changes;
    }
  }),
      open = _useCombobox.isOpen,
      getLabelProps = _useCombobox.getLabelProps,
      getMenuProps = _useCombobox.getMenuProps,
      getItemProps = _useCombobox.getItemProps,
      getInputProps = _useCombobox.getInputProps,
      getComboboxProps = _useCombobox.getComboboxProps,
      selectedItem = _useCombobox.selectedItem,
      highlightedIndex = _useCombobox.highlightedIndex,
      inputValue = _useCombobox.inputValue,
      setInputValue = _useCombobox.setInputValue,
      closeMenu = _useCombobox.closeMenu;

  var context = {
    mode: mode,
    inputValue: inputValue,
    open: open,
    items: items,
    completion: completion,
    selectedItem: selectedItem,
    highlightedIndex: highlightedIndex,
    getMenuProps: getMenuProps,
    getItemProps: getItemProps,
    showDropdownTips: showDropdownTips,
    showPoweredBy: showPoweredBy,
    typedInputValue: typedInputValue,
    renderItem: renderItem,
    onSelect: onSelect,
    itemToString: itemToString,
    itemToUrl: itemToUrl,
    disableDefaultStyles: disableDefaultStyles,
    customClassNames: rest
  };

  var handleVoiceInput = function handleVoiceInput(input) {
    if (captureVoiceInput) {
      setInputValue(input);
      setTypedInputValue(input);
    }

    onVoiceInput(input);
  };

  var _useComboboxStyles = useComboboxStyles({
    size: size,
    voiceEnabled: enableVoice && voiceSupported,
    loading: loading
  }),
      comboboxStyles = _useComboboxStyles.styles,
      focusProps = _useComboboxStyles.focusProps;

  var styles = getStylesObject(comboboxStyles, disableDefaultStyles);
  var inputProps = getInputProps({
    id: id,
    className: inputClassName,
    type: 'search',
    dir: 'auto',
    placeholder: placeholder,
    'aria-invalid': invalid,
    autoCapitalize: 'off',
    autoComplete: 'off',
    autoCorrect: 'off',
    spellCheck: 'false',
    inputMode: 'search',
    onKeyDown: function onKeyDown(e) {
      if (e.key === 'Enter' && highlightedIndex === -1) {
        e.nativeEvent.preventDownshiftDefault = true;

        if (mode === 'suggestions') {
          closeMenu();
        }
      }

      if (mode !== 'results' && e.key === 'Enter' && highlightedIndex > -1) {
        setTypedInputValue(itemToString(items[highlightedIndex]));
      }

      if (mode === 'typeahead' && e.key === 'ArrowRight') {
        if (e.target.selectionStart === inputValue.length) {
          if (completion.startsWith(inputValue)) {
            setInputValue(completion);
            setTypedInputValue(completion);
          }
        }
      }

      if (e.key === 'Enter' && highlightedIndex > -1) {
        var item = (items || [])[highlightedIndex];

        if (mode === 'results' && itemToUrl && !renderItem) {
          var url = itemToUrl(item);

          if (url) {
            window.location.href = url;
          }

          var result = item;

          if (isFunction(result.onClick)) {
            result.onClick();
          }
        }

        if (onSelect) {
          onSelect(item);
        }
      }

      _onKeyDown(e);
    },
    onInput: function onInput(e) {
      onChange(e.target.value);
      setTypedInputValue(e.target.value);
    },
    onChange: function onChange(e) {
      setValue(e.target.value);
    }
  });

  var renderInAttachMode = function renderInAttachMode(input) {
    if (isSSR()) {
      return null;
    }

    if (container && input) {
      var InputComponent = /*#__PURE__*/React__default.createElement('input', _extends({}, inputProps, Array.from(input.attributes).reduce(function (acc, attr) {
        var _extends2;

        return _extends({}, acc, (_extends2 = {}, _extends2[attr.nodeName] = attr.nodeValue, _extends2));
      }, {})));
      var ContainerComponent = /*#__PURE__*/React__default.createElement('div', _extends({}, getComboboxProps(), {
        style: {
          position: 'relative'
        }
      }), [InputComponent, jsx(Dropdown, {})]);
      input.remove();
      return /*#__PURE__*/ReactDOM.createPortal(ContainerComponent, container);
    }

    return null;
  };

  useEffect(function () {
    if (inputElement == null ? void 0 : inputElement.current) {
      setContainer(inputElement.current.parentElement);
    }
  }, [inputElement]);
  return jsx(ComboboxContextProvider, {
    value: context,
    children: (inputElement == null ? void 0 : inputElement.current) ? renderInAttachMode(inputElement.current) : jsxs(Box, {
      css: /*#__PURE__*/_css([styles.container, stylesProp], ";label:Combobox;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */")),
      className: className,
      children: [jsxs(Box, _extends({
        css: styles.inputContainer
      }, getComboboxProps(), {
        children: [jsx(Box, _extends({
          as: "label",
          css: _ref2
        }, getLabelProps({
          htmlFor: id
        }), {
          children: label != null ? label : placeholder
        })), jsx(Box, {
          css: styles.iconContainerLeft,
          className: inputContainerClassName,
          children: size === 'sm' ? jsx(IconSmallSearch, {}) : jsx(IconSearch, {})
        }), jsx(Typeahead, {}), jsx(Box, _extends({
          ref: ref,
          as: "input",
          css: styles.input
        }, mergeProps(inputProps, focusProps), {
          enterKeyHint: enterKeyHint
        }, rest)), enableVoice || loading ? jsxs(Box, {
          css: styles.iconContainerRight,
          children: [loading && jsx(IconSpinner, {
            css: styles.iconSpinner
          }), enableVoice && jsx(Voice, {
            onVoiceInput: handleVoiceInput
          })]
        }) : null]
      })), jsx(Dropdown, {})]
    })
  });
});

if (__DEV__) {
  Combobox.displayName = 'Combobox';
}

export default Combobox;
//# sourceMappingURL=index.esm.js.map
