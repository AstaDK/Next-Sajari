import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose, extends as _extends } from '../../../_virtual/_rollupPluginBabelHelpers.js';
import { getStylesObject } from '@sajari/react-sdk-utils';
import 'react';
import { jsx, jsxs } from '@emotion/core/jsx-runtime';
import Box from '../../../Box/index.esm.js';
import classnames from 'classnames';
import Text from '../../../Text/index.esm.js';
import { useComboboxContext } from '../../context.esm.js';
import Heading from '../../../Heading/index.esm.js';
import Image from '../../../Image/index.esm.js';
import { useDropdownItemStyles } from './styles.esm.js';

var DropdownResult = function DropdownResult(props) {
  var _classnames;

  var value = props.value,
      index = props.index,
      selected = props.selected,
      rest = _objectWithoutPropertiesLoose(props, ["value", "index", "selected"]);

  var _useComboboxContext = useComboboxContext(),
      getItemProps = _useComboboxContext.getItemProps,
      _useComboboxContext$d = _useComboboxContext.disableDefaultStyles,
      disableDefaultStyles = _useComboboxContext$d === void 0 ? false : _useComboboxContext$d,
      _useComboboxContext$c = _useComboboxContext.customClassNames,
      _useComboboxContext$c2 = _useComboboxContext$c.resultImageContainerClassName,
      resultImageContainerClassName = _useComboboxContext$c2 === void 0 ? '' : _useComboboxContext$c2,
      _useComboboxContext$c3 = _useComboboxContext$c.resultTextContainerClassName,
      resultTextContainerClassName = _useComboboxContext$c3 === void 0 ? '' : _useComboboxContext$c3,
      _useComboboxContext$c4 = _useComboboxContext$c.resultClassName,
      resultClassName = _useComboboxContext$c4 === void 0 ? '' : _useComboboxContext$c4,
      _useComboboxContext$c5 = _useComboboxContext$c.selectedResultClassName,
      selectedResultClassName = _useComboboxContext$c5 === void 0 ? '' : _useComboboxContext$c5;

  var styles = getStylesObject(useDropdownItemStyles(props), disableDefaultStyles);
  return jsx(Box, _extends({
    as: "li"
  }, getItemProps({
    index: index,
    item: value
  }), {
    className: classnames(resultClassName, (_classnames = {}, _classnames[selectedResultClassName] = selected, _classnames))
  }, rest, {
    children: jsxs(Box, {
      as: "a",
      href: value.url,
      onClick: value.onClick,
      onContextMenu: value.onClick,
      css: styles.item,
      children: [jsx(Box, {
        css: styles.imageContainer,
        className: resultImageContainerClassName,
        children: jsx(Image, {
          src: value.image,
          aspectRatio: 1,
          objectFit: "contain"
        })
      }), jsxs(Box, {
        css: styles.textContainer,
        className: resultTextContainerClassName,
        children: [jsx(Heading, {
          as: "h1",
          size: "sm",
          children: value.title
        }), jsx(Text, {
          truncate: true,
          children: value.description
        })]
      })]
    })
  }));
};

export default DropdownResult;
//# sourceMappingURL=index.esm.js.map
