import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose, extends as _extends } from '../../../_virtual/_rollupPluginBabelHelpers.js';
import { getStylesObject } from '@sajari/react-sdk-utils';
import 'react';
import { jsx } from '@emotion/core/jsx-runtime';
import Box from '../../../Box/index.esm.js';
import '../../../hooks/useBorderRadius.esm.js';
import '../../../hooks/useDropdownItemStyles.esm.js';
import '../../../hooks/useDropdownStyles.esm.js';
import '../../../hooks/useFirstRender.esm.js';
import '../../../hooks/useRingStyles.esm.js';
import '../../../hooks/useFocusRingStyles.esm.js';
import '../../../hooks/useFontSize.esm.js';
import '../../../hooks/useInputStyles.esm.js';
import '../../../hooks/useJustifyContent.esm.js';
import '../../../hooks/useSpacing.esm.js';
import useVoiceInput from '../../../hooks/useVoiceInput.esm.js';
import 'use-resize-observer/polyfilled';
import '../../../assets/icons/check.esm.js';
import '../../../assets/icons/chevron-left.esm.js';
import '../../../assets/icons/chevron-right.esm.js';
import '../../../assets/icons/down-key.esm.js';
import IconEmptyMic from '../../../assets/icons/empty-mic.esm.js';
import '../../../assets/icons/enter-key.esm.js';
import IconMic from '../../../assets/icons/mic.esm.js';
import '../../../assets/icons/search.esm.js';
import '../../../assets/icons/small-check.esm.js';
import '../../../assets/icons/small-search.esm.js';
import '../../../assets/icons/small-star.esm.js';
import '../../../assets/icons/spinner.esm.js';
import '../../../assets/icons/up-key.esm.js';
import '../../../assets/icons/close.esm.js';
import { useComboboxContext } from '../../context.esm.js';
import useVoiceStyles from './styles.esm.js';

var Voice = function Voice(_ref) {
  var children = _ref.children,
      onVoiceInput = _ref.onVoiceInput,
      rest = _objectWithoutPropertiesLoose(_ref, ["children", "onVoiceInput"]);

  var _useVoiceInput = useVoiceInput(onVoiceInput),
      active = _useVoiceInput.active,
      start = _useVoiceInput.start,
      supported = _useVoiceInput.supported;

  var _useComboboxContext = useComboboxContext(),
      _useComboboxContext$d = _useComboboxContext.disableDefaultStyles,
      disableDefaultStyles = _useComboboxContext$d === void 0 ? false : _useComboboxContext$d;

  if (!supported) {
    return null;
  }

  if (children && typeof children === 'function') {
    return children({
      onClick: start,
      active: active
    });
  }

  var styles = getStylesObject(useVoiceStyles({
    active: active
  }), disableDefaultStyles);
  return jsx(Box, _extends({
    as: "button",
    type: "button",
    css: styles.container,
    onClick: start,
    "aria-label": "Search by voice"
  }, rest, {
    children: active ? jsx(IconMic, {}) : jsx(IconEmptyMic, {})
  }));
};

export default Voice;
//# sourceMappingURL=index.esm.js.map
