import { getStylesObject } from '@sajari/react-sdk-utils';
import 'react';
import { jsxs, jsx } from '@emotion/core/jsx-runtime';
import Box from '../../../Box/index.esm.js';
import { useComboboxContext } from '../../context.esm.js';
import { useTypeaheadStyles } from './styles.esm.js';

function trimPrefix(str, prefix) {
  if (str === undefined || prefix === '') {
    return '';
  }

  if (str.startsWith(prefix)) {
    return str.slice(prefix.length);
  }

  return '';
}

var Typeahead = function Typeahead() {
  var _useComboboxContext = useComboboxContext(),
      mode = _useComboboxContext.mode,
      completion = _useComboboxContext.completion,
      inputValue = _useComboboxContext.inputValue,
      _useComboboxContext$d = _useComboboxContext.disableDefaultStyles,
      disableDefaultStyles = _useComboboxContext$d === void 0 ? false : _useComboboxContext$d,
      _useComboboxContext$c = _useComboboxContext.customClassNames.typeaheadClassName,
      typeaheadClassName = _useComboboxContext$c === void 0 ? '' : _useComboboxContext$c;

  var styles = getStylesObject(useTypeaheadStyles(), disableDefaultStyles);
  var typeaheadValue = '';
  var hiddenText = '&#8203;';

  if (mode === 'typeahead' && completion) {
    typeaheadValue = trimPrefix(completion, inputValue);
    hiddenText = completion.substring(0, completion.length - typeaheadValue.length);
  }

  return jsxs(Box, {
    css: styles.container,
    className: typeaheadClassName,
    children: [jsx(Box, {
      as: "span",
      css: styles.hidden,
      children: hiddenText
    }), typeaheadValue]
  });
};

export default Typeahead;
export { trimPrefix };
//# sourceMappingURL=index.esm.js.map
