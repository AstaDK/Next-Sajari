{"version":3,"file":"AriaHidden.esm.js","sources":["../../src/Modal/AriaHidden.tsx"],"sourcesContent":["import { hideOthers, Undo } from 'aria-hidden';\nimport React from 'react';\n\n/**\n * Modal component to polyfill `aria-modal`.\n *\n * It applies `aria-hidden` to elements behind the modal\n * to indicate that they're `inert`.\n *\n * @param refModal React ref of the node\n * @param shouldHide whether `aria-hidden` should be applied\n */\nexport function AriaHidden({ refModal, shouldHide }: { refModal: React.RefObject<HTMLElement>; shouldHide: boolean }) {\n  React.useEffect(() => {\n    if (!refModal.current) return;\n\n    let undo: Undo | null = null;\n\n    if (shouldHide && refModal.current) {\n      undo = hideOthers(refModal.current);\n    }\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      if (shouldHide) {\n        undo?.();\n      }\n    };\n  }, [shouldHide, refModal]);\n\n  return null;\n}\n"],"names":["AriaHidden","refModal","shouldHide","React","useEffect","current","undo","hideOthers"],"mappings":";;;SAYgBA;MAAaC,gBAAAA;MAAUC,kBAAAA;AACrCC,EAAAA,cAAK,CAACC,SAAN,CAAgB;AACd,QAAI,CAACH,QAAQ,CAACI,OAAd,EAAuB;AAEvB,QAAIC,IAAI,GAAgB,IAAxB;;AAEA,QAAIJ,UAAU,IAAID,QAAQ,CAACI,OAA3B,EAAoC;AAClCC,MAAAA,IAAI,GAAGC,UAAU,CAACN,QAAQ,CAACI,OAAV,CAAjB;AACD;;AAGD,WAAO;AACL,UAAIH,UAAJ,EAAgB;AACdI,QAAAA,IAAI,QAAJ,YAAAA,IAAI;AACL;AACF,KAJD;AAKD,GAfD,EAeG,CAACJ,UAAD,EAAaD,QAAb,CAfH;AAiBA,SAAO,IAAP;AACD;;;;"}