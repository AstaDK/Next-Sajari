import { BoxProps } from '../Box';
export declare type ModalSize = 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl' | '5xl' | '6xl' | '7xl' | 'screen-sm' | 'screen-md' | 'screen-lg' | 'screen-xl' | 'screen-2xl' | 'full';
export interface ModalProps extends BoxProps {
    open: boolean;
    closeOnEsc?: boolean;
    closeOnOverlayClick?: boolean;
    blockScroll?: boolean;
    trapFocus?: boolean;
    center?: boolean;
    autoFocus?: boolean;
    initialFocusRef?: React.RefObject<HTMLElement>;
    finalFocusRef?: React.RefObject<HTMLElement>;
    returnFocusOnClose?: boolean;
    container?: Element | null;
    role?: string;
    ariaLabelledby?: string;
    ariaDescribedby?: string;
    size?: ModalSize;
    modalId?: string;
    useInert?: boolean;
    onClose: () => void;
    onEscKeyDown?: (event: KeyboardEvent) => void;
    onOverlayClick?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;
    onAnimationEnd?: () => void;
    rootClassName?: string;
    overlayClassName?: string;
    overlayOpenClassName?: string;
    modalContainerClassName?: string;
    modalClassName?: string;
    modalOpenClassName?: string;
    animationDuration?: number;
    overlayAnimationIn?: string;
    overlayAnimationOut?: string;
    modalAnimationIn?: string;
    modalAnimationOut?: string;
}
