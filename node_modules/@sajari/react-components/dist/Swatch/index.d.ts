import { SwatchProps } from './types';
declare const Swatch: {
    ({ children, checkedColors, onChange, styles: stylesProp, disableDefaultStyles, colorCheckedClassName, colorClassName, ...rest }: SwatchProps): JSX.Element;
    displayName: string;
    Color: {
        (props: import("./types").ColorProps): JSX.Element;
        displayName: string;
        White(overridingProps?: Partial<import("./types").ColorProps>): any;
        Silver(overridingProps?: Partial<import("./types").ColorProps>): any;
        Black(overridingProps?: Partial<import("./types").ColorProps>): any;
        Pink(overridingProps?: Partial<import("./types").ColorProps>): any;
        Magenta(overridingProps?: Partial<import("./types").ColorProps>): any;
        Red(overridingProps?: Partial<import("./types").ColorProps>): any;
        Beige(overridingProps?: Partial<import("./types").ColorProps>): any;
        Orange(overridingProps?: Partial<import("./types").ColorProps>): any;
        Brown(overridingProps?: Partial<import("./types").ColorProps>): any;
        Yellow(overridingProps?: Partial<import("./types").ColorProps>): any;
        Green(overridingProps?: Partial<import("./types").ColorProps>): any;
        Azure(overridingProps?: Partial<import("./types").ColorProps>): any;
        Aqua(overridingProps?: Partial<import("./types").ColorProps>): any;
        Teal(overridingProps?: Partial<import("./types").ColorProps>): any;
        Turquoise(overridingProps?: Partial<import("./types").ColorProps>): any;
        Blue(overridingProps?: Partial<import("./types").ColorProps>): any;
        ElectricBlue(overridingProps?: Partial<import("./types").ColorProps>): any;
        Lilac(overridingProps?: Partial<import("./types").ColorProps>): any;
        Purple(overridingProps?: Partial<import("./types").ColorProps>): any;
        Violet(overridingProps?: Partial<import("./types").ColorProps>): any;
    };
    colorKeys: string[];
};
export default Swatch;
export type { SwatchProps };
