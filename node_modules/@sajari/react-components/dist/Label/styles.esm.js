import { inferStylesObjectKeys, mapStyles } from '@sajari/react-sdk-utils';
import '../hooks/useBorderRadius.esm.js';
import '../hooks/useDropdownItemStyles.esm.js';
import '../hooks/useDropdownStyles.esm.js';
import '../hooks/useFirstRender.esm.js';
import '../hooks/useRingStyles.esm.js';
import '../hooks/useFocusRingStyles.esm.js';
import useFontSize from '../hooks/useFontSize.esm.js';
import '../hooks/useInputStyles.esm.js';
import '../hooks/useJustifyContent.esm.js';
import '../hooks/useSpacing.esm.js';
import '../hooks/useVoiceInput.esm.js';
import 'use-resize-observer/polyfilled';

function useLabelStyles(_ref) {
  var visuallyHidden = _ref.visuallyHidden,
      size = _ref.size;
  var styles = inferStylesObjectKeys({
    container: []
  });

  if (visuallyHidden) {
    styles.container.push({
      "position": "absolute",
      "width": "1px",
      "height": "1px",
      "padding": "0",
      "margin": "-1px",
      "overflow": "hidden",
      "clip": "rect(0, 0, 0, 0)",
      "whiteSpace": "nowrap",
      "borderWidth": "0"
    });
  } else {
    var sizeStyles = useFontSize({
      size: size
    });
    styles.container.push({
      "display": "inline-flex",
      "alignItems": "center",
      "margin": "0",
      "cursor": "pointer"
    }, sizeStyles);
  }

  return mapStyles(styles);
}

export default useLabelStyles;
//# sourceMappingURL=styles.esm.js.map
