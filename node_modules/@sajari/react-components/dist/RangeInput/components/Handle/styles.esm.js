import { mapStyles } from '@sajari/react-sdk-utils';
import '../../../hooks/useBorderRadius.esm.js';
import '../../../hooks/useDropdownItemStyles.esm.js';
import '../../../hooks/useDropdownStyles.esm.js';
import '../../../hooks/useFirstRender.esm.js';
import ColorClass from 'color';
import '../../../hooks/useRingStyles.esm.js';
import useFocusRingStyles from '../../../hooks/useFocusRingStyles.esm.js';
import '../../../hooks/useFontSize.esm.js';
import '../../../hooks/useInputStyles.esm.js';
import '../../../hooks/useJustifyContent.esm.js';
import '../../../hooks/useSpacing.esm.js';
import '../../../hooks/useVoiceInput.esm.js';
import 'use-resize-observer/polyfilled';

function useHandleStyles(props) {
  var active = props.active;

  var _useFocusRingStyles = useFocusRingStyles({
    rounded: 'full'
  }),
      focusRingStyles = _useFocusRingStyles.focusRingStyles,
      focusProps = _useFocusRingStyles.focusProps;

  var colorShadow = new ColorClass("#161e2e");
  var styles = {
    container: [{
      "width": "1rem",
      "height": "1rem",
      "transitionProperty": "background-color, border-color, color, fill, stroke, opacity, box-shadow, transform",
      "transitionDuration": "200ms",
      "--bg-opacity": "1",
      "backgroundColor": "rgba(255, 255, 255, var(--bg-opacity))",
      "borderStyle": "none",
      "borderRadius": "9999px",
      "outline": "2px solid transparent",
      "outlineOffset": "2px",
      "appearance": "none",
      "cursor": "pointer",
      "fontFamily": "inherit",
      "lineHeight": "inherit",
      ":before": {
        "position": "absolute",
        "--transform-translate-x": "-50%",
        "--transform-translate-y": "0",
        "--transform-rotate": "0",
        "--transform-skew-x": "0",
        "--transform-skew-y": "0",
        "--transform-scale-x": "1",
        "--transform-scale-y": "1",
        "transform": "translateX(var(--transform-translate-x)) translateY(var(--transform-translate-y)) rotate(var(--transform-rotate)) skewX(var(--transform-skew-x)) skewY(var(--transform-skew-y)) scaleX(var(--transform-scale-x)) scaleY(var(--transform-scale-y))",
        "fontSize": "0.75rem",
        "paddingLeft": "0.25rem",
        "paddingRight": "0.25rem",
        "borderRadius": "0.25rem",
        "marginBottom": "0.25rem",
        "--bg-opacity": "0.75",
        "backgroundColor": "rgba(22, 30, 46, var(--bg-opacity))",
        "--text-opacity": "1",
        "color": "rgba(255, 255, 255, var(--text-opacity))",
        "textAlign": "center",
        "transitionProperty": "opacity",
        "transitionDuration": "200ms"
      }
    }, {
      boxShadow: "inset 0 0 0 1px " + colorShadow.alpha(0.15).hsl() + ",\n            inset 0 -1px 0 " + colorShadow.alpha(0.15).hsl() + ",\n            0 1px 1px " + colorShadow.alpha(0.1).hsl()
    }, "&::before {\n        content: attr(data-value);\n        bottom: 100%;\n        left: 50%;\n        opacity: " + (active ? 1 : 0) + ";\n      }\n      &:hover::before,\n      &:focus::before {\n        opacity: 1;\n      }", {
      touchAction: 'pan-x'
    }, focusRingStyles]
  };
  return {
    styles: mapStyles(styles),
    focusProps: focusProps
  };
}

export default useHandleStyles;
//# sourceMappingURL=styles.esm.js.map
