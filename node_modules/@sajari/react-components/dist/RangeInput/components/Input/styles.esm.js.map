{"version":3,"file":"styles.esm.js","sources":["../../../../src/RangeInput/components/Input/styles.ts"],"sourcesContent":["import { mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nimport { UseInputStyleProps, useInputStyles } from '../../../hooks';\nimport { RangeInputInputProps } from './types';\n\ntype UseRangeInputStylesParams<T> = RangeInputInputProps<T>;\n\nexport default function useRangeInputStyles<T>(props: UseRangeInputStylesParams<T>) {\n  const { max, step } = props;\n  const { styles: inputStyles, focusRingStyles, focusProps } = useInputStyles({\n    type: 'text',\n    size: 'sm',\n    ...props,\n  } as UseInputStyleProps);\n\n  const charLength = (max + step).toString().length;\n\n  const styles = {\n    container: [tw`relative`, focusRingStyles],\n    // TODO: Replace the magic numbers with calculated ones\n    input: [tw`form-input`, inputStyles, `width: calc(${charLength * 9}px + 2.5rem)`],\n  };\n\n  return { styles: mapStyles(styles), focusProps };\n}\n"],"names":["useRangeInputStyles","props","max","step","useInputStyles","type","size","inputStyles","styles","focusRingStyles","focusProps","charLength","toString","length","container","input","mapStyles"],"mappings":";;;;;;;;;;;;;;;SAQwBA,oBAAuBC;MACrCC,MAAcD,MAAdC;MAAKC,OAASF,MAATE;;wBACgDC,cAAc;AACzEC,IAAAA,IAAI,EAAE,MADmE;AAEzEC,IAAAA,IAAI,EAAE;AAFmE,KAGtEL,KAHsE;MAA3DM,8BAARC;MAAqBC,kCAAAA;MAAiBC,6BAAAA;;AAM9C,MAAMC,UAAU,GAAG,CAACT,GAAG,GAAGC,IAAP,EAAaS,QAAb,GAAwBC,MAA3C;AAEA,MAAML,MAAM,GAAG;AACbM,IAAAA,SAAS,EAAE;AAAA;AAAA,OAAeL,eAAf,CADE;AAGbM,IAAAA,KAAK,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBR,WAAjB,mBAA6CI,UAAU,GAAG,CAA1D;AAHM,GAAf;AAMA,SAAO;AAAEH,IAAAA,MAAM,EAAEQ,SAAS,CAACR,MAAD,CAAnB;AAA6BE,IAAAA,UAAU,EAAVA;AAA7B,GAAP;AACD;;;;"}