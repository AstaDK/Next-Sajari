import { isSSR } from '@sajari/react-sdk-utils';
import { useRef, useState, useEffect } from 'react';

function useHasImageLoaded(props) {
  var src = props.src,
      onLoad = props.onLoad,
      onError = props.onError;
  var ref = useRef(true);

  var _useState = useState(false),
      hasLoaded = _useState[0],
      setHasLoaded = _useState[1];

  useEffect(function () {
    if (!src || isSSR()) {
      return;
    }

    var image = new window.Image();
    image.addEventListener('load', function (event) {
      if (ref.current) {
        setHasLoaded(true);

        if (onLoad) {
          onLoad.call(image, event);
        }
      }
    });
    image.addEventListener('error', function (event) {
      if (ref.current) {
        setHasLoaded(false);

        if (onError) {
          onError.call(image, event);
        }
      }
    });
    image.src = src;
  }, [src, onLoad, onError]);
  useEffect(function () {
    return function () {
      ref.current = false;
    };
  }, []);
  return hasLoaded;
}

export { useHasImageLoaded };
//# sourceMappingURL=useHasImageLoaded.esm.js.map
