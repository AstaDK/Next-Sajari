{"version":3,"file":"useVoiceInput.esm.js","sources":["../../src/hooks/useVoiceInput.ts"],"sourcesContent":["/* eslint-disable new-cap, no-prototype-builtins */\nimport { isSSR } from '@sajari/react-sdk-utils';\nimport { useCallback, useEffect, useRef, useState } from 'react';\n\ntype SpeechRecognitionSupport = 'native' | 'webkit' | false;\n\nexport default function useVoiceInput(onResult?: (r: string) => void) {\n  const [supported, setSupported] = useState<SpeechRecognitionSupport>(false);\n  const [active, setActive] = useState(false);\n  const [result, setResult] = useState('');\n  const recognitionRef = useRef<SpeechRecognition>();\n\n  useEffect(() => {\n    if (isSSR()) {\n      return;\n    }\n\n    if (window.hasOwnProperty('SpeechRecognition')) {\n      setSupported('native');\n    } else if (window.hasOwnProperty('webkitSpeechRecognition')) {\n      setSupported('webkit');\n    }\n  }, []);\n\n  useEffect(() => {\n    if (supported) {\n      if (supported === 'native') {\n        recognitionRef.current = new window.SpeechRecognition();\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        recognitionRef.current = new (window as any).webkitSpeechRecognition() as SpeechRecognition;\n      }\n    }\n  }, [supported]);\n\n  const start = useCallback(() => {\n    if (!supported || !recognitionRef.current) {\n      return;\n    }\n\n    const recognition = recognitionRef.current;\n\n    if (active) {\n      setActive(false);\n      recognition.stop();\n      return;\n    }\n\n    recognition.continuous = false;\n    recognition.interimResults = false;\n    recognition.start();\n\n    recognition.onresult = (event) => {\n      setActive(false);\n      recognition.stop();\n      const r = event.results[0][0].transcript;\n      setResult(r);\n      onResult?.(r);\n    };\n\n    recognition.onerror = () => {\n      setActive(false);\n      recognition.stop();\n    };\n\n    setActive(true);\n  }, [active, supported, onResult]);\n\n  return {\n    supported: supported !== false,\n    result,\n    active,\n    start,\n  };\n}\n"],"names":["useVoiceInput","onResult","useState","supported","setSupported","active","setActive","result","setResult","recognitionRef","useRef","useEffect","isSSR","window","hasOwnProperty","current","SpeechRecognition","webkitSpeechRecognition","start","useCallback","recognition","stop","continuous","interimResults","onresult","event","r","results","transcript","onerror"],"mappings":";;;SAMwBA,cAAcC;kBACFC,QAAQ,CAA2B,KAA3B;MAAnCC;MAAWC;;mBACUF,QAAQ,CAAC,KAAD;MAA7BG;MAAQC;;mBACaJ,QAAQ,CAAC,EAAD;MAA7BK;MAAQC;;AACf,MAAMC,cAAc,GAAGC,MAAM,EAA7B;AAEAC,EAAAA,SAAS,CAAC;AACR,QAAIC,KAAK,EAAT,EAAa;AACX;AACD;;AAED,QAAIC,MAAM,CAACC,cAAP,CAAsB,mBAAtB,CAAJ,EAAgD;AAC9CV,MAAAA,YAAY,CAAC,QAAD,CAAZ;AACD,KAFD,MAEO,IAAIS,MAAM,CAACC,cAAP,CAAsB,yBAAtB,CAAJ,EAAsD;AAC3DV,MAAAA,YAAY,CAAC,QAAD,CAAZ;AACD;AACF,GAVQ,EAUN,EAVM,CAAT;AAYAO,EAAAA,SAAS,CAAC;AACR,QAAIR,SAAJ,EAAe;AACb,UAAIA,SAAS,KAAK,QAAlB,EAA4B;AAC1BM,QAAAA,cAAc,CAACM,OAAf,GAAyB,IAAIF,MAAM,CAACG,iBAAX,EAAzB;AACD,OAFD,MAEO;AAELP,QAAAA,cAAc,CAACM,OAAf,GAAyB,IAAKF,MAAc,CAACI,uBAApB,EAAzB;AACD;AACF;AACF,GATQ,EASN,CAACd,SAAD,CATM,CAAT;AAWA,MAAMe,KAAK,GAAGC,WAAW,CAAC;AACxB,QAAI,CAAChB,SAAD,IAAc,CAACM,cAAc,CAACM,OAAlC,EAA2C;AACzC;AACD;;AAED,QAAMK,WAAW,GAAGX,cAAc,CAACM,OAAnC;;AAEA,QAAIV,MAAJ,EAAY;AACVC,MAAAA,SAAS,CAAC,KAAD,CAAT;AACAc,MAAAA,WAAW,CAACC,IAAZ;AACA;AACD;;AAEDD,IAAAA,WAAW,CAACE,UAAZ,GAAyB,KAAzB;AACAF,IAAAA,WAAW,CAACG,cAAZ,GAA6B,KAA7B;AACAH,IAAAA,WAAW,CAACF,KAAZ;;AAEAE,IAAAA,WAAW,CAACI,QAAZ,GAAuB,UAACC,KAAD;AACrBnB,MAAAA,SAAS,CAAC,KAAD,CAAT;AACAc,MAAAA,WAAW,CAACC,IAAZ;AACA,UAAMK,CAAC,GAAGD,KAAK,CAACE,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoBC,UAA9B;AACApB,MAAAA,SAAS,CAACkB,CAAD,CAAT;AACAzB,MAAAA,QAAQ,QAAR,YAAAA,QAAQ,CAAGyB,CAAH,CAAR;AACD,KAND;;AAQAN,IAAAA,WAAW,CAACS,OAAZ,GAAsB;AACpBvB,MAAAA,SAAS,CAAC,KAAD,CAAT;AACAc,MAAAA,WAAW,CAACC,IAAZ;AACD,KAHD;;AAKAf,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GA/BwB,EA+BtB,CAACD,MAAD,EAASF,SAAT,EAAoBF,QAApB,CA/BsB,CAAzB;AAiCA,SAAO;AACLE,IAAAA,SAAS,EAAEA,SAAS,KAAK,KADpB;AAELI,IAAAA,MAAM,EAANA,MAFK;AAGLF,IAAAA,MAAM,EAANA,MAHK;AAILa,IAAAA,KAAK,EAALA;AAJK,GAAP;AAMD;;;;"}