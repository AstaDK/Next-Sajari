{"version":3,"file":"react-components.cjs.production.min.js","sources":["../src/Box/index.tsx","../src/AspectRatio/styles.ts","../src/AspectRatio/index.tsx","../src/hooks/useDropdownItemStyles.ts","../src/hooks/useDropdownStyles.ts","../src/hooks/useRingStyles.ts","../src/hooks/useFocusRingStyles.ts","../src/hooks/useFontSize.ts","../src/hooks/useInputStyles.ts","../src/hooks/useSpacing.ts","../src/hooks/useVoiceInput.ts","../src/Button/styles.ts","../src/Button/index.tsx","../src/ButtonGroup/styles.ts","../src/ButtonGroup/index.tsx","../src/Label/index.tsx","../src/Label/styles.ts","../src/Checkbox/index.tsx","../src/Checkbox/styles.ts","../src/utils/styles.ts","../src/Text/index.tsx","../src/Text/styles.ts","../src/Link/index.tsx","../src/Link/styles.ts","../src/PoweredBy/index.tsx","../src/PoweredBy/styles.ts","../src/Combobox/context.tsx","../src/Combobox/components/DropdownItem/index.tsx","../src/Combobox/components/DropdownItem/styles.ts","../src/Heading/index.tsx","../src/Heading/styles.ts","../src/Image/styles.ts","../src/Image/index.tsx","../src/Image/useImageProvider.ts","../src/hooks/useHasImageLoaded.ts","../src/Combobox/components/DropdownResult/index.tsx","../src/Combobox/components/DropdownResult/styles.ts","../src/Combobox/components/Dropdown/index.tsx","../src/Combobox/components/Typeahead/index.tsx","../src/Combobox/components/Typeahead/styles.ts","../src/Combobox/components/Voice/index.tsx","../src/Combobox/components/Voice/styles.ts","../src/Combobox/index.tsx","../src/Combobox/styles.ts","../src/FocusLock/utils.ts","../src/FocusLock/index.tsx","../src/Modal/AriaHidden.tsx","../src/Modal/context.tsx","../src/Modal/ModalBody/index.tsx","../src/Modal/ModalBody/styles.ts","../src/Modal/ModalCloseButton/index.tsx","../src/Modal/ModalCloseButton/styles.ts","../src/Modal/ModalFooter/index.tsx","../src/Modal/ModalFooter/styles.ts","../src/Modal/ModalHeader/index.tsx","../src/Modal/ModalHeader/styles.ts","../src/Modal/modalManager.ts","../src/Modal/ModalTitle/index.tsx","../src/Modal/ModalTitle/styles.ts","../src/Modal/Portal.tsx","../src/Modal/styles.ts","../src/Modal/index.tsx","../src/Modal/useScrollLock.ts","../src/Pagination/index.tsx","../src/hooks/useFirstRender.ts","../src/Pagination/styles.ts","../src/hooks/useJustifyContent.ts","../src/Radio/index.tsx","../src/Radio/styles.ts","../src/RadioGroup/index.tsx","../src/RadioGroup/styles.ts","../src/RangeInput/components/Fill/index.tsx","../src/RangeInput/components/Fill/styles.ts","../src/RangeInput/components/Handle/index.tsx","../src/RangeInput/components/Handle/styles.ts","../src/RangeInput/components/Input/index.tsx","../src/RangeInput/components/Input/styles.ts","../src/Rating/types.ts","../src/RangeInput/components/Track/index.tsx","../src/RangeInput/components/Track/styles.ts","../src/RangeInput/index.tsx","../src/RangeInput/styles.ts","../src/Rating/components/RatingItem/index.tsx","../src/Rating/components/RatingItem/styles.ts","../src/Rating/index.tsx","../src/utils/rating.ts","../src/ResizeObserver/index.tsx","../src/Select/context.tsx","../src/Select/components/Button/index.tsx","../src/Select/components/Button/styles.ts","../src/Select/components/Option/index.tsx","../src/Select/components/Option/styles.ts","../src/Select/components/Dropdown/index.tsx","../src/Select/components/Dropdown/styles.ts","../src/Select/index.tsx","../src/Select/styles.ts","../src/Spinner/index.tsx","../src/SSRProvider/index.tsx","../src/Swatch/colors.ts","../src/Swatch/context.tsx","../src/Swatch/components/Color/index.tsx","../src/Swatch/components/Color/styles.ts","../src/hooks/useBorderRadius.ts","../src/Swatch/index.tsx","../src/Tabs/context.ts","../src/Tabs/Tab/index.tsx","../src/Tabs/Tab/styles.ts","../src/Tabs/TabList/index.tsx","../src/Tabs/TabList/styles.ts","../src/Tabs/TabPanel/index.tsx","../src/Tabs/TabPanels/index.tsx","../src/Tabs/index.tsx","../src/CheckboxGroup/index.tsx","../src/CheckboxGroup/styles.ts"],"sourcesContent":["import { filterProps, forwardRefWithAs, PropsWithAs } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\n\nimport { BoxProps } from './types';\n\ntype DefaultElement = 'div';\n\nconst BoxComponent = (props: PropsWithAs<BoxProps, DefaultElement>, ref: React.Ref<HTMLDivElement>) => {\n  const { as: Type = 'div', children, ...rest } = props;\n\n  return (\n    <Type ref={ref} {...filterProps(rest)}>\n      {children}\n    </Type>\n  );\n};\n\nconst Box = forwardRefWithAs<BoxProps, DefaultElement>(BoxComponent);\n\nexport default Box;\nexport type { BoxProps };\n","import { css } from '@emotion/core';\nimport tw, { TwStyle } from 'twin.macro';\n\nimport { AspectRatioProps } from './types';\n\nexport function useAspectRatioStyles(props: AspectRatioProps) {\n  const { ratio } = props;\n  const styles: (string | TwStyle)[] = [];\n\n  if (!ratio) {\n    return css(styles);\n  }\n\n  styles.push(\n    tw`relative`,\n    tw`before:(content block h-0)`,\n    `&::before { padding-bottom: calc(100% / ${ratio})}`,\n    '& > * { position: absolute; top: 0; left: 0; width: 100%; height: 100% }',\n  );\n\n  return css(styles);\n}\n","import { forwardRefWithAs, getStylesObject, PropsWithAs } from '@sajari/react-sdk-utils';\nimport React, { Children, cloneElement, isValidElement } from 'react';\n\nimport Box from '../Box';\nimport { useAspectRatioStyles } from './styles';\nimport { AspectRatioProps } from './types';\n\ntype DefaultElement = 'div';\n\nconst Component = (props: PropsWithAs<AspectRatioProps, DefaultElement>, ref: React.Ref<HTMLDivElement>) => {\n  const { as = 'div', ratio = 16 / 9, children, disableDefaultStyles = false, styles: stylesProp, ...rest } = props;\n  let child;\n\n  if (children) {\n    child = Children.only(children);\n\n    if (!isValidElement(child)) {\n      return null;\n    }\n  }\n\n  const styles = getStylesObject({ container: useAspectRatioStyles({ ...props, ratio }) }, disableDefaultStyles);\n\n  return (\n    <Box ref={ref} as={as} {...rest} css={[styles.container, stylesProp]}>\n      {child ? cloneElement(child) : null}\n    </Box>\n  );\n};\n\nconst AspectRatio = forwardRefWithAs<AspectRatioProps, DefaultElement>(Component);\n\nexport default AspectRatio;\nexport type { AspectRatioProps };\n","import { inferStylesObjectKeys, mapStyles, useTheme } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\ninterface UseDropdownItemStylesParams {\n  highlighted?: boolean;\n}\n\nexport function useDropdownItemStyles(params: UseDropdownItemStylesParams) {\n  const { highlighted } = params;\n  const theme = useTheme();\n\n  const styles = inferStylesObjectKeys({\n    root: [\n      tw`flex items-center w-auto px-2 py-1 leading-5 text-left transition-all duration-75 rounded cursor-pointer`,\n    ],\n    label: [tw`pl-4 ml-auto text-xs text-gray-400`],\n  });\n\n  if (highlighted) {\n    styles.root.push(`color: ${theme.color.primary.text}; background: ${theme.color.primary.active};`);\n    styles.label.push(`color: ${theme.color.primary.text};`);\n  } else {\n    styles.root.push(tw`text-gray-600`);\n  }\n\n  return mapStyles(styles);\n}\n","import { mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nexport interface UseDropdownStylesParams {\n  shown?: boolean;\n}\n\nexport function useDropdownStyles({ shown = true }: UseDropdownStylesParams) {\n  const styles = {\n    container: [\n      tw`absolute left-0 right-0 top-auto z-20 mt-1 bg-white rounded-md shadow-menu backdrop-blur-1 bg-opacity-95`,\n      !shown ? tw`hidden` : tw``,\n    ],\n    heading: [tw`px-4 pt-2 text-xs text-gray-400 font-normal`],\n    items: [tw`m-0 py-1 px-2 list-none`],\n    footer: [\n      tw`flex items-center justify-between px-4 py-2 text-xs text-gray-400 border border-gray-200 rounded-b bg-gray-50 rounded-b-inherit`,\n    ],\n    footerItem: [tw`flex items-center`],\n    footerItems: [tw`flex items-center space-x-4`],\n    footerIcon: [tw`mr-1.5 flex-shrink-0`],\n    footerEscHint: [tw`mr-1 font-medium`],\n    poweredBy: [tw`ml-auto`],\n  };\n\n  return mapStyles(styles);\n}\n","import { useTheme } from '@sajari/react-sdk-utils';\nimport Color from 'color';\nimport tw, { theme as twTheme, TwStyle } from 'twin.macro';\n\nexport interface UseRingStylesProps {\n  invalid?: boolean;\n  disabled?: boolean;\n  rounded?: 'sm' | 'md' | 'lg' | 'full' | 'none';\n  color?: string;\n  visible?: boolean;\n}\n\nexport default function useRingStyles(props?: UseRingStylesProps) {\n  const theme = useTheme();\n  const { visible = true, disabled, invalid, rounded = 'lg', color = theme.color.primary.base } = props ?? {};\n  const styles: (TwStyle | string)[] = [];\n\n  if (visible) {\n    let borderColor = color;\n\n    if (disabled) {\n      borderColor = twTheme`colors.gray.500`.toString();\n    } else if (invalid) {\n      borderColor = twTheme`colors.red.500`.toString();\n    }\n\n    let borderRadius: TwStyle;\n\n    switch (rounded) {\n      case 'sm':\n        borderRadius = tw`after:(rounded-md)`;\n        break;\n      case 'md':\n        borderRadius = tw`after:(rounded-md)`;\n        break;\n      case 'full':\n        borderRadius = tw`after:(rounded-full)`;\n        break;\n      case 'none':\n        borderRadius = tw`after:(rounded-none)`;\n        break;\n      case 'lg':\n      default:\n        borderRadius = tw`after:(rounded-lg)`;\n    }\n\n    styles.push(\n      tw`after:(content box-content block h-full w-full border-2 border-solid p-0.5 absolute)`,\n      `&::after {\n          left: -0.25rem;\n          top: -0.25rem;\n          border-color: ${new Color(borderColor)};\n        }`,\n      borderRadius,\n      tw`outline-none`,\n    );\n  }\n\n  return styles;\n}\n","import { useFocusRing } from '@react-aria/focus';\n\nimport useRingStyles, { UseRingStylesProps } from './useRingStyles';\n\nexport type UseFocusRingStylesProps = Omit<UseRingStylesProps, 'visible'>;\n\nexport default function useFocusRingStyles(props?: UseFocusRingStylesProps) {\n  const { isFocusVisible, focusProps } = useFocusRing();\n  return { focusRingStyles: useRingStyles({ visible: isFocusVisible, ...props }), focusProps };\n}\n","import { css } from '@emotion/core';\nimport tw, { TwStyle } from 'twin.macro';\n\nexport type FontSizes = 'xs' | 'sm' | 'base' | 'md' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl';\n\nexport interface UseFontSizeParams {\n  size?: FontSizes;\n}\n\nexport default function useFontSize(props: UseFontSizeParams) {\n  const { size } = props;\n  const styles: TwStyle[] = [];\n\n  switch (size) {\n    case 'xs':\n      styles.push(tw`text-xs`);\n      break;\n\n    case 'sm':\n      styles.push(tw`text-sm`);\n      break;\n\n    case 'lg':\n      styles.push(tw`text-lg`);\n      break;\n\n    case 'xl':\n      styles.push(tw`text-xl`);\n      break;\n\n    case '2xl':\n      styles.push(tw`text-2xl`);\n      break;\n\n    case '3xl':\n      styles.push(tw`text-3xl`);\n      break;\n\n    case '4xl':\n      styles.push(tw`text-4xl`);\n      break;\n\n    case 'base':\n    case 'md':\n      styles.push(tw`text-base`);\n      break;\n\n    default:\n      break;\n  }\n\n  return css(styles);\n}\n","import { css } from '@emotion/core';\nimport { useTheme } from '@sajari/react-sdk-utils';\nimport Color from 'color';\nimport tw, { TwStyle } from 'twin.macro';\n\nimport useFocusRingStyles from './useFocusRingStyles';\n\nexport interface UseInputStyleProps {\n  disabled?: boolean;\n  invalid?: boolean;\n  readOnly?: boolean;\n  indeterminate?: boolean;\n  type: 'select' | 'radio' | 'checkbox';\n  size?: 'sm' | 'md' | 'lg';\n}\n\nexport default function useInputStyles(props: UseInputStyleProps) {\n  const { disabled, indeterminate, invalid, readOnly, size, type } = props;\n  const { focusRingStyles, focusProps } = useFocusRingStyles({\n    disabled,\n    invalid,\n    rounded: type === 'radio' ? 'full' : undefined,\n  });\n  const theme = useTheme();\n  const fill = encodeURIComponent(new Color(theme.color.primary.text).hex());\n  const styles: (TwStyle | string)[] = [];\n\n  styles.push(\n    tw`leading-normal text-gray-600 transition-all duration-150 bg-white border border-gray-200 border-solid outline-none font-inherit invalid:(bg-white border-gray-200 outline-none shadow-none)`,\n  );\n\n  // Map the size to padding and font size\n  if (!['radio', 'checkbox'].includes(type)) {\n    switch (size) {\n      case 'lg':\n        styles.push(tw`px-5 py-3 text-lg`);\n        break;\n\n      case 'sm':\n        styles.push(tw`px-3 py-1 text-sm`);\n        break;\n\n      default:\n      case 'md':\n        styles.push(tw`px-4 py-2 text-base`);\n        break;\n    }\n  }\n\n  // Cancel out the form controls plugin styles since we use the ring\n  styles.push(tw`focus:outline-none focus:shadow-none focus:border-gray-200`);\n\n  if (disabled || readOnly) {\n    styles.push(tw`cursor-not-allowed`);\n  }\n\n  if (disabled) {\n    styles.push(tw`text-gray-400 bg-gray-100 border-gray-200`);\n\n    if (['radio', 'checkbox'].includes(type)) {\n      styles.push(tw`checked:bg-gray-400 checked:border-gray-400`);\n    }\n  }\n\n  if (invalid) {\n    styles.push(tw`border-red-500 bg-red-50 focus:border-red-500`);\n\n    if (['radio', 'checkbox'].includes(type)) {\n      styles.push(tw`bg-red-100 checked:bg-red-500`);\n    }\n  }\n\n  if (['radio', 'checkbox'].includes(type)) {\n    styles.push(tw`flex-none w-4 h-4 p-0 m-0 text-blue-500 focus:outline-none`, `color: ${theme.color.primary.base};`);\n\n    if (type === 'checkbox') {\n      if (indeterminate) {\n        styles.push(tw`border-transparent`, `background-color: ${theme.color.primary.base};`);\n      } else {\n        styles.push(\n          `&:checked {\n            background-image: url(\"data:image/svg+xml,%3Csvg fill='${fill}' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='m6.9919558 12.0005941c-.26547704 0-.52006014-.1054507-.7077524-.293l-2.00319264-2.00000003c-.37937552-.39237889-.37394992-1.01608478.01219439-1.40181858.3861443-.38573379 1.01051394-.39115363 1.40331041-.01218142l1.20234127 1.2 3.30864357-5.107c.3394637-.43630494.9687248-.51510281 1.4054941-.17599998.4367692.33910283.515651.96769503.1761873 1.40399998l-4.00638527 6.00000003c-.1761023.2273124-.44160568.3679379-.72877475.386z'/%3E%3C/svg%3E\");\n          `,\n        );\n      }\n    } else {\n      styles.push(\n        `&:checked {\n          background-image: url(\"data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='${fill}' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle cx='8' cy='8' r='3'/%3e%3c/svg%3e\");\n        `,\n      );\n    }\n  }\n\n  if (type === 'select') {\n    styles.push(tw`block w-full pr-10 font-normal text-left truncate rounded-md`);\n  }\n\n  return { styles: css(styles), focusRingStyles, focusProps };\n}\n","import { css } from '@emotion/core';\nimport tw, { TwStyle } from 'twin.macro';\n\nexport type Spacing = '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8';\n\nexport interface SpacingParams {\n  spacing?: Spacing;\n  inline?: boolean;\n}\n\nexport default function useSpacing({ spacing = '0', inline = false }: SpacingParams) {\n  const styles: TwStyle[] = [];\n\n  if (inline) {\n    switch (spacing) {\n      case '1':\n        styles.push(tw`space-x-1`);\n        break;\n      case '2':\n        styles.push(tw`space-x-2`);\n        break;\n      case '3':\n        styles.push(tw`space-x-3`);\n        break;\n      case '4':\n        styles.push(tw`space-x-4`);\n        break;\n      case '5':\n        styles.push(tw`space-x-5`);\n        break;\n      case '6':\n        styles.push(tw`space-x-6`);\n        break;\n      case '7':\n        styles.push(tw`space-x-7`);\n        break;\n      case '8':\n        styles.push(tw`space-x-8`);\n        break;\n      default:\n        break;\n    }\n  } else {\n    switch (spacing) {\n      case '1':\n        styles.push(tw`space-y-1`);\n        break;\n      case '2':\n        styles.push(tw`space-y-2`);\n        break;\n      case '3':\n        styles.push(tw`space-y-3`);\n        break;\n      case '4':\n        styles.push(tw`space-y-4`);\n        break;\n      case '5':\n        styles.push(tw`space-y-5`);\n        break;\n      case '6':\n        styles.push(tw`space-y-6`);\n        break;\n      case '7':\n        styles.push(tw`space-y-7`);\n        break;\n      case '8':\n        styles.push(tw`space-y-8`);\n        break;\n      default:\n        break;\n    }\n  }\n\n  return css(styles);\n}\n","/* eslint-disable new-cap, no-prototype-builtins */\nimport { isSSR } from '@sajari/react-sdk-utils';\nimport { useCallback, useEffect, useRef, useState } from 'react';\n\ntype SpeechRecognitionSupport = 'native' | 'webkit' | false;\n\nexport default function useVoiceInput(onResult?: (r: string) => void) {\n  const [supported, setSupported] = useState<SpeechRecognitionSupport>(false);\n  const [active, setActive] = useState(false);\n  const [result, setResult] = useState('');\n  const recognitionRef = useRef<SpeechRecognition>();\n\n  useEffect(() => {\n    if (isSSR()) {\n      return;\n    }\n\n    if (window.hasOwnProperty('SpeechRecognition')) {\n      setSupported('native');\n    } else if (window.hasOwnProperty('webkitSpeechRecognition')) {\n      setSupported('webkit');\n    }\n  }, []);\n\n  useEffect(() => {\n    if (supported) {\n      if (supported === 'native') {\n        recognitionRef.current = new window.SpeechRecognition();\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        recognitionRef.current = new (window as any).webkitSpeechRecognition() as SpeechRecognition;\n      }\n    }\n  }, [supported]);\n\n  const start = useCallback(() => {\n    if (!supported || !recognitionRef.current) {\n      return;\n    }\n\n    const recognition = recognitionRef.current;\n\n    if (active) {\n      setActive(false);\n      recognition.stop();\n      return;\n    }\n\n    recognition.continuous = false;\n    recognition.interimResults = false;\n    recognition.start();\n\n    recognition.onresult = (event) => {\n      setActive(false);\n      recognition.stop();\n      const r = event.results[0][0].transcript;\n      setResult(r);\n      onResult?.(r);\n    };\n\n    recognition.onerror = () => {\n      setActive(false);\n      recognition.stop();\n    };\n\n    setActive(true);\n  }, [active, supported, onResult]);\n\n  return {\n    supported: supported !== false,\n    result,\n    active,\n    start,\n  };\n}\n","import { css } from '@emotion/core';\nimport { useTheme } from '@sajari/react-sdk-utils';\nimport tw, { TwStyle } from 'twin.macro';\n\nimport { useFocusRingStyles } from '../hooks';\nimport { ButtonProps } from './types';\n\ninterface UseButtonStylesProps extends ButtonProps {\n  pressed: boolean;\n  hovered: boolean;\n  focused: boolean;\n}\n\nconst useButtonStyles = (props: UseButtonStylesProps) => {\n  const { size, fullWidth, appearance, spacing, disabled, loading, pressed, focused, hovered } = props;\n  const theme = useTheme();\n  const isLink = (['link', 'subtle-link'] as Array<ButtonProps['apperance']>).includes(appearance);\n  const styles: (string | TwStyle)[] = [];\n  const { focusProps: focusRingProps, focusRingStyles } = useFocusRingStyles();\n  const returnStyles = (val: typeof styles) => ({ styles: [css(val), focusRingStyles], focusRingProps });\n\n  styles.push(\n    tw`relative items-center justify-center leading-normal no-underline transition duration-150 ease-in-out border border-transparent border-solid cursor-pointer font-inherit focus:outline-none`,\n  );\n\n  if (!isLink) {\n    styles.push(tw`font-medium rounded-md select-none`);\n  }\n\n  styles.push(fullWidth ? tw`flex` : tw`inline-flex`);\n\n  switch (size) {\n    case 'xl':\n      if (!isLink) {\n        styles.push(tw`text-xl`);\n      }\n      if (spacing !== 'none') {\n        if (spacing === 'compact') {\n          styles.push(tw`px-8`);\n        } else {\n          styles.push(tw`px-12 py-4`);\n        }\n      }\n      break;\n\n    case 'lg':\n      if (!isLink) {\n        styles.push(tw`text-lg`);\n      }\n      if (spacing !== 'none') {\n        if (spacing === 'compact') {\n          styles.push(tw`px-6`);\n        } else {\n          styles.push(tw`px-8 py-3`);\n        }\n      }\n      break;\n\n    case 'sm':\n      styles.push(tw`text-sm`);\n\n      if (spacing !== 'none') {\n        if (spacing === 'compact') {\n          styles.push(tw`px-2`);\n        } else {\n          styles.push(tw`px-3 py-1`);\n        }\n      }\n      break;\n\n    case 'xs':\n      styles.push(tw`text-xs`);\n\n      if (spacing !== 'none') {\n        if (spacing === 'compact') {\n          styles.push(tw`px-1`);\n        } else {\n          styles.push(tw`px-2 py-0.5`);\n        }\n      }\n      break;\n\n    default:\n    case 'md':\n      if (!isLink) {\n        styles.push(tw`text-base`);\n      }\n      if (spacing !== 'none') {\n        if (spacing === 'compact') {\n          styles.push(tw`px-3`);\n        } else {\n          styles.push(tw`px-4 py-2`);\n        }\n      }\n      break;\n  }\n\n  if (disabled) {\n    styles.push(tw`text-gray-400 cursor-not-allowed`);\n\n    switch (appearance) {\n      case 'default':\n      case 'secondary':\n        styles.push(tw`bg-gray-100 border-gray-200`);\n        break;\n\n      default:\n        break;\n    }\n\n    return returnStyles(styles);\n  }\n\n  if (spacing === 'none') {\n    styles.push(tw`p-0`);\n  }\n\n  switch (appearance) {\n    // TODO: test theming for primary appearance, we might want to change them later\n    case 'primary':\n      styles.push(`color: ${theme.color.primary.text};`);\n\n      if (focused || pressed) {\n        styles.push(`background: ${theme.color.primary.active};`);\n      } else if (hovered) {\n        styles.push(`background: ${theme.color.primary.active};`);\n      } else {\n        styles.push(`background: ${theme.color.primary.base};`);\n      }\n      break;\n\n    case 'default':\n    case 'secondary':\n      styles.push(\n        tw`bg-white border-gray-200 shadow-sm hover:bg-gray-100`,\n        appearance === 'secondary' ? `color: ${theme.color.primary.base};` : tw`text-gray-500`,\n      );\n\n      if (pressed) {\n        styles.push(tw`bg-gray-100`);\n      }\n      break;\n\n    case 'link':\n      styles.push(tw`p-0 no-underline bg-transparent hover:underline focus:underline leading-inherit`, {\n        color: pressed ? theme.color.primary.active : theme.color.primary.base,\n      });\n\n      if (!loading && !pressed) {\n        styles.push(`&:hover, &:focus { color: ${theme.color.primary.active} }`);\n      }\n      break;\n\n    case 'subtle-link':\n      styles.push(\n        tw`p-0 no-underline bg-transparent hover:underline focus:underline leading-inherit`,\n        pressed ? tw`text-gray-700` : tw`text-gray-500`,\n      );\n\n      if (!loading && !pressed) {\n        styles.push(tw`hover:text-gray-700 focus:text-gray-700`);\n      }\n      break;\n\n    default:\n      break;\n  }\n\n  return returnStyles(styles);\n};\n\nexport default useButtonStyles;\n","import { useButton } from '@react-aria/button';\nimport { useFocus, useHover } from '@react-aria/interactions';\nimport { mergeProps } from '@react-aria/utils';\nimport { getStylesObject, mergeRefs } from '@sajari/react-sdk-utils';\nimport classnames from 'classnames';\nimport React, { useRef } from 'react';\n\nimport Box from '../Box';\nimport useButtonStyles from './styles';\nimport { ButtonProps } from './types';\n\nconst Button = React.forwardRef((props: ButtonProps, ref?: React.Ref<HTMLElement>) => {\n  const {\n    // TODO: handle the state later as we might need a Spinner/Icon component\n    loading = false,\n    as = 'button',\n    appearance = 'default',\n    size = 'md',\n    spacing = 'default',\n    disabled,\n    fullWidth = false,\n    onClick,\n    children,\n    className,\n    styles: stylesProps,\n    pressedClassName = '',\n    disableDefaultStyles = false,\n    ...rest\n  } = props;\n\n  const [focused, setFocused] = React.useState(false);\n  const buttonRef = useRef<HTMLElement | null>(null);\n  const ownRef = mergeRefs(buttonRef, ref);\n\n  const { buttonProps, isPressed: pressed } = useButton(\n    { ...rest, isDisabled: disabled, elementType: as, onPress: onClick },\n    buttonRef,\n  );\n  const { hoverProps, isHovered: hovered } = useHover({\n    isDisabled: disabled,\n  });\n  const { focusProps } = useFocus({\n    isDisabled: disabled,\n    onFocus: () => setFocused(true),\n    onBlur: () => setFocused(false),\n  });\n\n  const { styles: containerStyles, focusRingProps } = useButtonStyles({\n    pressed,\n    appearance,\n    disabled,\n    fullWidth,\n    loading,\n    size,\n    spacing,\n    focused,\n    hovered,\n  });\n\n  const customProps = mergeProps(buttonProps, focusProps, hoverProps, focusRingProps);\n  const styles = getStylesObject({ container: containerStyles }, disableDefaultStyles);\n\n  return (\n    <Box\n      as={as}\n      ref={ownRef}\n      {...customProps}\n      css={[styles.container, stylesProps]}\n      className={classnames(className, {\n        [pressedClassName]: pressed,\n      })}\n    >\n      {children}\n    </Box>\n  );\n});\n\nexport default Button;\nexport type { ButtonProps };\n","/* eslint-disable no-nested-ternary */\nimport { css } from '@emotion/core';\nimport tw from 'twin.macro';\n\nimport { UseButtonGroupStylesParams } from './types';\n\nexport function useButtonGroupStyles({ attached, inline }: UseButtonGroupStylesParams) {\n  const styles = [tw`inline-flex`, !attached ? tw`items-center` : undefined];\n\n  styles.push(inline ? tw`flex-row space-x-4` : tw`flex-col space-y-2`);\n\n  if (attached) {\n    styles.push(inline ? tw`-space-x-px` : tw`-space-y-px`);\n  }\n\n  return css(styles);\n}\n","/* eslint-disable no-nested-ternary */\n\nimport { __DEV__, cleanChildren, getStylesObject } from '@sajari/react-sdk-utils';\nimport React, { cloneElement } from 'react';\nimport tw, { styled } from 'twin.macro';\n\nimport Box from '../Box';\nimport { useButtonGroupStyles } from './styles';\nimport { ButtonGroupProps } from './types';\n\n// TODO: remove \"any\"\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst StyledBox = styled<any>(Box, { shouldForwardProp: (prop) => prop !== 'attached' && prop !== 'inline' })<\n  Pick<ButtonGroupProps, 'attached' | 'inline'>\n>`\n  & > button {\n    :first-of-type {\n      ${(props) =>\n        props.attached\n          ? props.inline\n            ? tw`rounded-none rounded-l-md after:(rounded-none rounded-l-lg)`\n            : tw`rounded-none rounded-t-md after:(rounded-none rounded-t-lg)`\n          : tw``}\n    }\n\n    :last-of-type {\n      ${(props) =>\n        props.attached\n          ? props.inline\n            ? tw`rounded-none rounded-r-md after:(rounded-none rounded-r-lg)`\n            : tw`rounded-none rounded-b-md after:(rounded-none rounded-b-lg)`\n          : tw``}\n    }\n\n    :not(:last-of-type):not(:first-of-type) {\n      ${(props) => (props.attached ? tw`rounded-none  after:(rounded-none)` : tw``)};\n    }\n\n    ${tw`focus:z-10`};\n  }\n`;\n\nconst ButtonGroup = React.forwardRef((props: ButtonGroupProps, ref?: React.Ref<HTMLDivElement>) => {\n  const {\n    attached = false,\n    fullWidth,\n    inline = true,\n    children,\n    as = 'div',\n    disableDefaultStyles = false,\n    styles: stylesProp,\n    ...rest\n  } = props;\n  const styles = getStylesObject({ container: useButtonGroupStyles({ attached, inline }) }, disableDefaultStyles);\n  const validChildren = cleanChildren(children);\n\n  // TODO: handle case where child is Tooltip\n  const clones = validChildren.map((child) =>\n    cloneElement(child, {\n      fullWidth,\n      disableDefaultStyles,\n      ...child.props,\n    }),\n  );\n\n  if (disableDefaultStyles) {\n    return (\n      <Box as={as} ref={ref} css={stylesProp} {...rest}>\n        {clones}\n      </Box>\n    );\n  }\n\n  return (\n    <StyledBox attached={attached} inline={inline} as={as} ref={ref} css={[styles.container, stylesProp]} {...rest}>\n      {clones}\n    </StyledBox>\n  );\n});\n\nif (__DEV__) {\n  ButtonGroup.displayName = 'ButtonGroup';\n}\n\nexport default ButtonGroup;\nexport type { ButtonGroupProps };\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n\nimport { __DEV__, getStylesObject } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\n\nimport Box from '../Box';\nimport useLabelStyles from './styles';\nimport { LabelProps } from './types';\n\nconst Label = React.forwardRef((props: LabelProps, ref?: React.Ref<HTMLLabelElement>) => {\n  const { disableDefaultStyles = false, visuallyHidden, styles: stylesProp, ...rest } = props;\n  const styles = getStylesObject(useLabelStyles(props), disableDefaultStyles && !visuallyHidden);\n\n  return <Box as=\"label\" {...rest} ref={ref} css={[styles.container, stylesProp]} />;\n});\n\nif (__DEV__) {\n  Label.displayName = 'Label';\n}\n\nexport default Label;\nexport type { LabelProps };\n","import { inferStylesObjectKeys, mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nimport { useFontSize } from '../hooks';\nimport { LabelProps } from './types';\n\nexport default function useLabelStyles({ visuallyHidden, size }: LabelProps) {\n  const styles = inferStylesObjectKeys({\n    container: [],\n  });\n\n  if (visuallyHidden) {\n    styles.container.push(tw`sr-only`);\n  } else {\n    const sizeStyles = useFontSize({ size });\n    styles.container.push(tw`inline-flex items-center m-0 cursor-pointer`, sizeStyles);\n  }\n\n  return mapStyles(styles);\n}\n","import { useId } from '@react-aria/utils';\nimport { __DEV__, getStylesObject } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\n\nimport Box from '../Box';\nimport Label from '../Label';\nimport { useCheckboxStyles } from './styles';\nimport { CheckboxProps } from './types';\n\nconst Checkbox = React.forwardRef((props: CheckboxProps, ref?: React.Ref<HTMLInputElement>) => {\n  const {\n    id = `checkbox-${useId()}`,\n    name,\n    value,\n    defaultChecked,\n    checked,\n    indeterminate,\n    disabled,\n    invalid,\n    readOnly,\n    onChange,\n    onBlur,\n    onFocus,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    children,\n    labelClassName,\n    styles: stylesProp,\n    disableDefaultStyles = false,\n    ...rest\n  } = props;\n\n  const [privateChecked, setPrivateChecked] = React.useState(defaultChecked ?? false);\n  const { current: controlled } = React.useRef(typeof checked !== 'undefined');\n  const internalChecked = (controlled ? checked : privateChecked) ?? false;\n  const { styles: checkboxStyles, focusProps } = useCheckboxStyles(props);\n  const styles = getStylesObject(checkboxStyles, disableDefaultStyles);\n\n  const internalChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (!controlled) {\n      setPrivateChecked(event.target.checked);\n    }\n    if (onChange) {\n      onChange(event);\n    }\n  };\n\n  const comp = (\n    <Box css={[styles.componentWrapper, !children && stylesProp]} {...(!children ? rest : {})}>\n      &#8203;\n      <Box as=\"span\" css={styles.inputWrapper}>\n        {indeterminate && (\n          <Box css={styles.indeterminate}>\n            <Box css={styles.indeterminateInner} />\n          </Box>\n        )}\n        <input\n          ref={ref}\n          type=\"checkbox\"\n          id={id}\n          name={name}\n          value={value}\n          checked={internalChecked}\n          disabled={disabled}\n          readOnly={readOnly}\n          onChange={internalChange}\n          onBlur={onBlur}\n          onFocus={onFocus}\n          aria-invalid={invalid}\n          aria-label={ariaLabel}\n          aria-labelledby={ariaLabelledBy}\n          aria-checked={internalChecked}\n          css={styles.input}\n          {...focusProps}\n        />\n      </Box>\n    </Box>\n  );\n\n  if (!children) {\n    return comp;\n  }\n\n  return (\n    <Box css={[styles.container, stylesProp]} {...rest}>\n      {comp}\n\n      <Label htmlFor={id} css={styles.label} className={labelClassName}>\n        {children}\n      </Label>\n    </Box>\n  );\n});\n\nif (__DEV__) {\n  Checkbox.displayName = 'Checkbox';\n}\n\nexport default Checkbox;\nexport type { CheckboxProps };\n","import { mapStyles, useTheme } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nimport { useFontSize, UseInputStyleProps, useInputStyles } from '../hooks';\nimport { CheckboxProps } from './types';\n\nexport function useCheckboxStyles(props: CheckboxProps) {\n  const theme = useTheme();\n  const { invalid = false, indeterminate = false, fontSize } = props;\n  const sizeStyles = useFontSize({ size: fontSize });\n\n  const { styles: inputStyles, focusRingStyles, focusProps } = useInputStyles({\n    type: 'checkbox',\n    indeterminate,\n    ...props,\n  } as UseInputStyleProps);\n\n  const styles = {\n    container: [tw`flex items-center`],\n    componentWrapper: [tw`relative inline-flex items-center`],\n    inputWrapper: [tw`relative flex`, focusRingStyles],\n    label: [tw`ml-2`, sizeStyles],\n    indeterminate: [tw`absolute inset-0 flex items-center justify-center pointer-events-none`],\n    indeterminateInner: [tw`m-auto w-1/2 h-0.5 rounded-sm`, { backgroundColor: theme.color.primary.text }],\n    input: [tw`form-checkbox`, inputStyles],\n  };\n\n  if (invalid) {\n    styles.label.push(tw`text-red-500`);\n  }\n\n  return { styles: mapStyles(styles), focusProps };\n}\n","import { isNumber } from '@sajari/react-sdk-utils';\nimport tw, { TwStyle } from 'twin.macro';\n\nexport function mapTruncateValue(truncate: boolean | 2 | 3 | 4 | 5 | undefined): TwStyle {\n  if (!truncate) {\n    return tw``;\n  }\n\n  if (truncate === true) {\n    return tw`truncate`;\n  }\n\n  if (isNumber(truncate)) {\n    switch (truncate) {\n      case 2:\n        return tw`truncate-2-lines`;\n\n      case 3:\n        return tw`truncate-3-lines`;\n\n      case 4:\n        return tw`truncate-4-lines`;\n\n      case 5:\n        return tw`truncate-5-lines`;\n\n      default:\n        return tw``;\n    }\n  }\n\n  return tw``;\n}\n","import { forwardRefWithAs, getStylesObject, PropsWithAs } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\n\nimport Box from '../Box';\nimport useTextStyles from './styles';\nimport { TextProps } from './types';\n\ntype DefaultElement = 'p';\n\nconst TextComponent = (props: PropsWithAs<TextProps, DefaultElement>, ref: React.Ref<HTMLParagraphElement>) => {\n  const { as = 'p', truncate, disableDefaultStyles = false, size, styles: stylesProp, ...rest } = props;\n  const styles = getStylesObject(useTextStyles({ as, truncate, size }), disableDefaultStyles);\n\n  return <Box ref={ref} as={as} css={[styles.container, stylesProp]} {...rest} />;\n};\n\nconst Text = forwardRefWithAs<TextProps, DefaultElement>(TextComponent);\n\nexport default Text;\nexport type { TextProps };\n","import { mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nimport { useFontSize } from '../hooks';\nimport { mapTruncateValue } from '../utils/styles';\nimport { TextElement, TextProps } from './types';\n\ninterface UseTextStylesProps {\n  as: TextElement;\n  truncate: TextProps['truncate'];\n  size: TextProps['size'];\n}\n\nexport default function useTextStyles({ as, truncate, size }: UseTextStylesProps) {\n  const sizeStyles = useFontSize({ size });\n\n  const styles = {\n    container: [tw`p-0 m-0`, mapTruncateValue(truncate), sizeStyles],\n  };\n\n  switch (as) {\n    case 'small':\n      styles.container.push(tw`text-sm`);\n      break;\n\n    case 'pre':\n    case 'code':\n      styles.container.push(tw`font-mono font-normal text-code-inline`);\n      break;\n\n    case 'mark':\n      styles.container.push(tw`px-1 text-gray-800 bg-yellow-100`);\n      break;\n\n    default:\n      break;\n  }\n\n  if (as === 'code') {\n    styles.container.push(tw`text-red-500`);\n  }\n\n  return mapStyles(styles);\n}\n","/* eslint-disable jsx-a11y/anchor-has-content */\n\nimport { mergeProps } from '@react-aria/utils';\nimport { __DEV__, getStylesObject } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\n\nimport useLinkStyles from './styles';\nimport { LinkProps } from './types';\n\nconst Link = React.forwardRef((props: LinkProps, ref?: React.Ref<HTMLAnchorElement>) => {\n  const { disableDefaultStyles = false, styles: stylesProp, ...rest } = props;\n  const { styles, focusRingProps } = useLinkStyles();\n\n  return (\n    <a\n      {...mergeProps(rest, focusRingProps)}\n      ref={ref}\n      css={[getStylesObject(styles.container, disableDefaultStyles), stylesProp]}\n    />\n  );\n});\n\nif (__DEV__) {\n  Link.displayName = 'Link';\n}\n\nexport default Link;\nexport type { LinkProps };\n","import { mapStyles, useTheme } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nimport { useFocusRingStyles } from '../hooks';\n\nexport default function useLinkStyles() {\n  const theme = useTheme();\n  const { focusRingStyles, focusProps: focusRingProps } = useFocusRingStyles();\n\n  const styles = {\n    container: [\n      tw`relative transition-colors duration-150`,\n      focusRingStyles,\n      `&:hover, &:focus { color: ${theme.color.primary.base} }`,\n    ],\n  };\n\n  return { styles: mapStyles(styles), focusRingProps };\n}\n","import { __DEV__ } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\n\nimport { LogoSajariColor, LogoSajariMono } from '../assets/logos';\nimport Box from '../Box';\nimport Link from '../Link';\nimport usePoweredByStyles from './styles';\nimport { PoweredByProps } from './types';\n\nconst PoweredBy = React.forwardRef((props: PoweredByProps, ref?: React.Ref<HTMLAnchorElement>) => {\n  const { appearance } = props;\n  const styles = usePoweredByStyles();\n\n  return (\n    <Link\n      href=\"https://www.sajari.com/?utm_source=react&amp;utm_medium=referral&amp;utm_campaign=poweredby\"\n      target=\"_blank\"\n      ref={ref}\n      css={[styles.container]}\n      {...props}\n    >\n      <Box as=\"span\" css={styles.label}>\n        Powered by\n      </Box>\n      {appearance === 'color' ? <LogoSajariColor css={styles.logo} /> : <LogoSajariMono css={styles.logo} />}\n    </Link>\n  );\n});\n\nif (__DEV__) {\n  PoweredBy.displayName = 'PoweredBy';\n}\n\nexport default PoweredBy;\nexport type { PoweredByProps };\n","import { mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nexport default function usePoweredByStyles() {\n  const styles = {\n    container: [tw`inline-flex items-center text-xs text-gray-400`],\n    logo: [tw`inline-block align-middle`],\n    label: [tw`pr-2`],\n  };\n\n  return mapStyles(styles);\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { createContext } from '@sajari/react-sdk-utils';\nimport { PropGetters } from 'downshift';\n\nimport { ComboboxCustomClassNames, ComboboxMode, ComboboxProps } from './types';\n\ninterface ComboboxContextProps<T = any> {\n  mode: ComboboxMode;\n  inputValue: string;\n  open: boolean;\n  items: ComboboxProps<T>['items'];\n  completion: string;\n  getItemProps: PropGetters<T>['getItemProps'];\n  getMenuProps: PropGetters<T>['getMenuProps'];\n  highlightedIndex: number;\n  selectedItem: T;\n  showDropdownTips: boolean;\n  showPoweredBy: boolean;\n  typedInputValue: string;\n  renderItem?: ComboboxProps<T>['renderItem'];\n  itemToString: Required<ComboboxProps<T>>['itemToString'];\n  itemToUrl: Required<ComboboxProps<T>>['itemToUrl'];\n  onSelect: ComboboxProps<T>['onSelect'];\n  disableDefaultStyles: ComboboxProps<T>['disableDefaultStyles'];\n  customClassNames: ComboboxCustomClassNames;\n}\n\nconst [ComboboxContextProvider, useComboboxContext] = createContext<ComboboxContextProps>({\n  strict: true,\n  name: 'ComboboxContext',\n});\n\nexport default ComboboxContextProvider;\nexport { useComboboxContext };\n","import { getStylesObject } from '@sajari/react-sdk-utils';\nimport classnames from 'classnames';\nimport * as React from 'react';\n\nimport { IconEnterKey } from '../../../assets/icons';\nimport Box from '../../../Box';\nimport { useComboboxContext } from '../../context';\nimport { useDropdownItemStyles } from './styles';\nimport { DropdownItemProps } from './types';\n\nconst DropdownItem = (props: DropdownItemProps) => {\n  const { value, index, selected, highlight, ...rest } = props;\n  const {\n    typedInputValue,\n    getItemProps,\n    showDropdownTips,\n    itemToString,\n    onSelect,\n    disableDefaultStyles = false,\n    customClassNames: {\n      dropdownItemClassName = '',\n      dropdownSelectedItemClassName = '',\n      dropdownHighlightItemClassName = '',\n    },\n  } = useComboboxContext();\n  const stringItem = itemToString(value);\n  const styles = getStylesObject(useDropdownItemStyles(props), disableDefaultStyles);\n\n  // Highlight the suggested text rather than their input\n  // https://baymard.com/blog/autocomplete-design#7-highlight-the-active-suggestion-desktop-specific\n  const renderContent = () => {\n    if (typedInputValue && stringItem.startsWith(typedInputValue)) {\n      return (\n        <React.Fragment>\n          {typedInputValue}\n          <Box as=\"span\" css={styles.highlight}>\n            {stringItem.replace(typedInputValue, '')}\n          </Box>\n        </React.Fragment>\n      );\n    }\n\n    return stringItem;\n  };\n\n  return (\n    <Box\n      as=\"li\"\n      {...getItemProps({\n        index,\n        item: value,\n        onClick: () => {\n          if (onSelect) {\n            onSelect(value);\n          }\n        },\n      })}\n      key={`${stringItem}_${index}`}\n      css={styles.item}\n      className={classnames(dropdownItemClassName, {\n        [dropdownSelectedItemClassName]: selected,\n        [dropdownHighlightItemClassName]: highlight,\n      })}\n      {...rest}\n    >\n      <Box as=\"span\">{renderContent()}</Box>\n\n      {showDropdownTips && (\n        <Box as=\"span\" css={styles.label}>\n          Select\n          <IconEnterKey css={styles.iconEnter} />\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default DropdownItem;\n","import { inferStylesObjectKeys, mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nimport { useDropdownItemStyles as useCoreDropdownItemStyles } from '../../../hooks';\nimport { DropdownItemProps } from './types';\n\nexport function useDropdownItemStyles(props: DropdownItemProps) {\n  const { selected } = props;\n  const { root, label } = useCoreDropdownItemStyles({ highlighted: selected });\n  const styles = inferStylesObjectKeys({\n    item: [root],\n    highlight: [tw`font-semibold`],\n    label: [label, tw`flex items-center transition-opacity duration-75`],\n    iconEnter: [tw`ml-2`],\n  });\n\n  if (selected) {\n    styles.label.push(tw`opacity-100`);\n  } else {\n    styles.highlight.push(tw`text-gray-900`);\n    styles.label.push(tw`opacity-0`);\n  }\n\n  return mapStyles(styles);\n}\n","import { forwardRefWithAs, getStylesObject, PropsWithAs } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\n\nimport Box from '../Box';\nimport { FontSizes } from '../hooks';\nimport useHeadingStyles from './styles';\nimport { HeadingElements, HeadingProps } from './types';\n\ntype DefaultElement = 'h1';\n\nconst mapElementToSize = (element: HeadingElements): FontSizes => {\n  switch (element) {\n    case 'h6':\n      return 'xs';\n    case 'h5':\n      return 'sm';\n    case 'h4':\n      return 'base';\n    case 'h3':\n      return 'lg';\n    case 'h2':\n      return 'xl';\n    case 'h1':\n      return '2xl';\n    default:\n      return 'base';\n  }\n};\n\nconst HeadingComponent = (props: PropsWithAs<HeadingProps, DefaultElement>, ref: React.Ref<HTMLHeadingElement>) => {\n  const {\n    as = 'h1',\n    size = mapElementToSize(as),\n    truncate,\n    disableDefaultStyles = false,\n    styles: stylesProp,\n    ...rest\n  } = props;\n  const styles = getStylesObject(useHeadingStyles({ size, as, truncate }), disableDefaultStyles);\n\n  return <Box ref={ref} as={as} css={[styles.container]} {...rest} />;\n};\n\nconst Heading = forwardRefWithAs<HeadingProps, DefaultElement>(HeadingComponent);\n\nexport default Heading;\nexport type { HeadingProps };\n","import { mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nimport { FontSizes, useFontSize } from '../hooks';\nimport { mapTruncateValue } from '../utils/styles';\nimport { HeadingElements } from './types';\n\ninterface UseHeadingStylesOptions {\n  as: HeadingElements;\n  size?: FontSizes;\n  truncate?: boolean | 2 | 3 | 4 | 5;\n}\n\nexport default function useHeadingStyles(options: UseHeadingStylesOptions) {\n  const { size, truncate = false } = options;\n  const sizeStyles = useFontSize({ size });\n\n  const styles = {\n    container: [\n      tw`p-0 m-0`,\n      mapTruncateValue(truncate),\n      size === 'xs' ? tw`text-gray-400` : tw`text-gray-800`,\n      sizeStyles,\n    ],\n  };\n\n  if (size === 'xs') {\n    styles.container.push(tw`font-medium tracking-wide uppercase`);\n  } else {\n    styles.container.push(tw`font-semibold normal-case`);\n  }\n\n  if (size !== 'xs' && size !== 'sm' && size !== 'base') {\n    styles.container.push(tw`tracking-tight`);\n  }\n\n  return mapStyles(styles);\n}\n","import { mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nimport { useHasImageLoaded } from '../hooks/useHasImageLoaded';\nimport { ImageProps } from './types';\n\nfunction useObjectFit(objectFit: ImageProps['objectFit'], isSecondImage = false) {\n  switch (objectFit) {\n    case 'contain':\n      return tw`object-contain`;\n\n    case 'cover':\n      return tw`object-cover`;\n\n    case 'fill':\n      return tw`object-fill`;\n\n    case 'scale-down':\n      return tw`object-scale-down`;\n\n    case 'none':\n      return tw`object-none`;\n\n    default:\n      return isSecondImage ? tw`object-cover` : '';\n  }\n}\n\nexport function useImageStyles(props: ImageProps & { hover: boolean }) {\n  const hasLoaded = useHasImageLoaded(props);\n  const { hover, objectFit } = props;\n  const styles = {\n    container: [tw`relative rounded-md`, !hasLoaded ? tw`bg-gray-100` : ''],\n    image: [\n      tw`transition-opacity duration-200 ease-in`,\n      hasLoaded && !hover ? tw`opacity-100` : tw`opacity-0`,\n      { borderRadius: 'inherit' },\n      useObjectFit(objectFit),\n    ],\n    secondImage: [\n      tw`absolute top-0 left-0 object-cover w-full h-full transition-opacity duration-200 ease-in`,\n      hasLoaded && hover ? tw`opacity-100` : tw`opacity-0`,\n      { borderRadius: 'inherit' },\n      useObjectFit(objectFit, true),\n    ],\n  };\n\n  return mapStyles(styles);\n}\n","import { __DEV__, getStylesObject } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\n\nimport AspectRatio from '../AspectRatio';\nimport Box from '../Box';\nimport { useImageStyles } from './styles';\nimport { ImageProps } from './types';\nimport useImageProvider from './useImageProvider';\n\ninterface NativeImageProps {\n  htmlWidth?: ImageProps['htmlWidth'];\n  htmlHeight?: ImageProps['htmlHeight'];\n  alt?: ImageProps['alt'];\n  loading?: ImageProps['loading'];\n}\n\nconst NativeImage = React.forwardRef((props: NativeImageProps, ref?: React.Ref<HTMLImageElement>) => {\n  const { htmlWidth, htmlHeight, alt = '', loading = 'lazy', ...rest } = props;\n\n  return <img ref={ref} width={htmlWidth} height={htmlHeight} alt={alt} loading={loading} {...rest} />;\n});\n\nconst Image = React.forwardRef((props: ImageProps, ref?: React.Ref<HTMLImageElement>) => {\n  const {\n    src: srcProp,\n    hoverSrc: hoverSrcProp,\n    onError,\n    onLoad,\n    onMouseEnter: onMouseEnterExternal,\n    onMouseLeave: onMouseLeaveExternal,\n    htmlWidth,\n    htmlHeight,\n    aspectRatio,\n    objectFit,\n    className,\n    containerClassName,\n    disableDefaultStyles = false,\n    width,\n    height,\n    provider,\n    ...rest\n  } = props;\n  const [hover, setHover] = React.useState(false);\n  const [src, hoverSrc] = useImageProvider({ provider, images: [srcProp, hoverSrcProp], width, height });\n\n  const onMouseEnter = (e) => {\n    if (hoverSrc) {\n      setHover(true);\n    }\n    onMouseEnterExternal?.(e);\n  };\n\n  const onMouseLeave = (e) => {\n    if (hoverSrc) {\n      setHover(false);\n    }\n    onMouseLeaveExternal?.(e);\n  };\n\n  const imageProps = {\n    src,\n    onLoad,\n    onError,\n    htmlWidth,\n    htmlHeight,\n    onMouseEnter,\n    onMouseLeave,\n  };\n\n  const styles = getStylesObject(useImageStyles({ ...props, hover }), disableDefaultStyles);\n  const image = <Box as={NativeImage} ref={ref} css={styles.image} {...imageProps} {...rest} />;\n  const secondImage = React.cloneElement(image, { src: hoverSrc, css: styles.secondImage });\n\n  return (\n    <AspectRatio ratio={aspectRatio ?? null} css={styles.container} className={containerClassName}>\n      <>\n        {src ? image : null}\n        {hoverSrc ? secondImage : null}\n      </>\n    </AspectRatio>\n  );\n});\n\nif (__DEV__) {\n  Image.displayName = 'Image';\n}\n\nexport default Image;\nexport type { ImageProps };\n","import { isArray } from '@sajari/react-sdk-utils';\n\nimport { ImageProvider } from './types';\n\ninterface Params {\n  provider: ImageProvider;\n  images?: string | Array<string | undefined>;\n  width?: number | string;\n  height?: number | string;\n}\n\nexport default function useImageProvider(params: Params) {\n  const { provider, width, height, images: imagesParam = [] } = params;\n  const images = isArray(imagesParam) ? (imagesParam.filter(Boolean) as Array<string>) : [imagesParam];\n  if (!provider) {\n    return images;\n  }\n\n  switch (provider) {\n    case 'shopify':\n      return images.map((i) => {\n        const url = new URL(i);\n        const { pathname } = url;\n        const [extension, ...rest] = pathname.split('.').reverse();\n        const pathnameWithoutExtension = rest.join();\n        if (width && height) {\n          url.pathname = `${pathnameWithoutExtension}_${width}x${height}`;\n        } else if (width) {\n          url.pathname = `${pathnameWithoutExtension}_${width}x`;\n        } else if (height) {\n          url.pathname = `${pathnameWithoutExtension}_x${width}`;\n        }\n        url.pathname = `${url.pathname}.${extension}`;\n        return url.toString();\n      });\n    default:\n      return images;\n  }\n}\n","import { isSSR } from '@sajari/react-sdk-utils';\nimport { useEffect, useRef, useState } from 'react';\n\nimport { ImageProps } from '../Image/types';\n\n// TODO: Handle load failed fallback\n\ninterface HasImageLoadedProps {\n  src?: ImageProps['src'];\n  onLoad?: ImageProps['onLoad'];\n  onError?: ImageProps['onError'];\n}\n\nexport function useHasImageLoaded(props: HasImageLoadedProps) {\n  const { src, onLoad, onError } = props;\n  const ref = useRef(true);\n  const [hasLoaded, setHasLoaded] = useState(false);\n\n  useEffect(() => {\n    if (!src || isSSR()) {\n      return;\n    }\n\n    const image = new window.Image();\n\n    image.addEventListener('load', (event) => {\n      if (ref.current) {\n        setHasLoaded(true);\n\n        if (onLoad) {\n          onLoad.call(image, event);\n        }\n      }\n    });\n\n    image.addEventListener('error', (event) => {\n      if (ref.current) {\n        setHasLoaded(false);\n\n        if (onError) {\n          onError.call(image, event);\n        }\n      }\n    });\n\n    image.src = src;\n  }, [src, onLoad, onError]);\n\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => {\n      ref.current = false;\n    };\n  }, []);\n\n  return hasLoaded;\n}\n","import { getStylesObject } from '@sajari/react-sdk-utils';\nimport classnames from 'classnames';\nimport * as React from 'react';\n\nimport Box from '../../../Box';\nimport Heading from '../../../Heading';\nimport Image from '../../../Image';\nimport Text from '../../../Text';\nimport { useComboboxContext } from '../../context';\nimport { useDropdownItemStyles } from './styles';\nimport { DropdownResultProps } from './types';\n\nconst DropdownResult = (props: DropdownResultProps) => {\n  const { value, index, selected, ...rest } = props;\n  const {\n    getItemProps,\n    disableDefaultStyles = false,\n    customClassNames: {\n      resultImageContainerClassName = '',\n      resultTextContainerClassName = '',\n      resultClassName = '',\n      selectedResultClassName = '',\n    },\n  } = useComboboxContext();\n  const styles = getStylesObject(useDropdownItemStyles(props), disableDefaultStyles);\n\n  return (\n    <Box\n      as=\"li\"\n      {...getItemProps({\n        index,\n        item: value,\n      })}\n      className={classnames(resultClassName, { [selectedResultClassName]: selected })}\n      {...rest}\n    >\n      <Box as=\"a\" href={value.url} onClick={value.onClick} onContextMenu={value.onClick} css={styles.item}>\n        <Box css={styles.imageContainer} className={resultImageContainerClassName}>\n          <Image src={value.image} aspectRatio={1} objectFit=\"contain\" />\n        </Box>\n\n        <Box css={styles.textContainer} className={resultTextContainerClassName}>\n          <Heading as=\"h1\" size=\"sm\">\n            {value.title}\n          </Heading>\n          <Text truncate>{value.description}</Text>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default DropdownResult;\n","import { inferStylesObjectKeys, mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nimport { DropdownResultProps } from './types';\n\nexport function useDropdownItemStyles(props: DropdownResultProps) {\n  const { selected } = props;\n  const styles = inferStylesObjectKeys({\n    item: [\n      tw`flex items-center w-full px-2 py-1 text-sm leading-5 text-left transition-all duration-75 rounded cursor-pointer`,\n    ],\n    imageContainer: [tw`flex-none w-12 h-12 mr-6`],\n    textContainer: [tw`min-w-0 space-y-0.5`],\n  });\n\n  if (selected) {\n    styles.item.push(tw`bg-gray-200`);\n  }\n\n  return mapStyles(styles);\n}\n","/* eslint-disable react/no-array-index-key */\nimport { getStylesObject } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\n\nimport { IconDownKey, IconEnterKey, IconUpKey } from '../../../assets/icons';\nimport Box from '../../../Box';\nimport { useDropdownStyles } from '../../../hooks';\nimport PoweredBy from '../../../PoweredBy';\nimport Text from '../../../Text';\nimport { useComboboxContext } from '../../context';\nimport { ResultItem } from '../../types';\nimport DropdownItem from '../DropdownItem';\nimport DropdownResult from '../DropdownResult';\n\nconst Dropdown = () => {\n  const {\n    mode,\n    open,\n    items = [],\n    inputValue,\n    highlightedIndex,\n    getMenuProps,\n    showDropdownTips,\n    showPoweredBy,\n    renderItem,\n    itemToString,\n    getItemProps,\n    disableDefaultStyles = false,\n    customClassNames: { dropdownClassName, dropdownListClassName, dropdownFooterClassName },\n  } = useComboboxContext();\n  const shown = (mode === 'results' || mode === 'suggestions') && open && items.length > 0;\n  const styles = getStylesObject(useDropdownStyles({ shown }), disableDefaultStyles);\n  const label = mode === 'results' ? 'Results' : 'Suggestions';\n  let listRender: React.ReactNode = null;\n\n  if (renderItem) {\n    listRender = items.map((item, index) => {\n      const selected = highlightedIndex === index;\n      const stringItem = itemToString(item);\n      const highlight = inputValue.length > 0 && stringItem.startsWith(inputValue);\n\n      return (\n        <React.Fragment key={`${stringItem}-${index}`}>\n          {renderItem({ item, highlight, selected, getItemProps, index })}\n        </React.Fragment>\n      );\n    });\n  } else if (mode === 'results') {\n    listRender = (items as ResultItem[]).map((item, index) => {\n      const selected = highlightedIndex === index;\n\n      return <DropdownResult value={item} selected={selected} index={index} key={`${item.title}-${index}`} />;\n    });\n  } else {\n    listRender = (items as string[]).map((item, index) => {\n      const selected = highlightedIndex === index;\n      const stringItem = itemToString(item);\n      const highlight = inputValue.length > 0 && stringItem.startsWith(inputValue);\n\n      return (\n        <DropdownItem\n          value={item}\n          highlight={highlight}\n          selected={selected}\n          index={index}\n          key={`${stringItem}-${index}`}\n        />\n      );\n    });\n  }\n\n  return (\n    <Box css={styles.container} className={dropdownClassName}>\n      <Text as=\"h6\" css={styles.heading}>\n        {label}\n      </Text>\n\n      <ul {...getMenuProps()} css={styles.items} className={dropdownListClassName}>\n        {listRender}\n      </ul>\n\n      {(showDropdownTips || showPoweredBy) && (\n        <Box as=\"footer\" css={styles.footer} className={dropdownFooterClassName}>\n          {showDropdownTips && (\n            <Box as=\"span\" css={styles.footerItems}>\n              <Box as=\"span\" css={styles.footerItem}>\n                <IconUpKey css={styles.footerIcon} />\n                <IconDownKey css={styles.footerIcon} />\n                to navigate\n              </Box>\n\n              <Box as=\"span\" css={styles.footerItem}>\n                <IconEnterKey css={styles.footerIcon} />\n                to select\n              </Box>\n\n              <Box as=\"span\" css={styles.footerItem}>\n                <Box as=\"span\" css={styles.footerEscHint}>\n                  esc\n                </Box>\n                to dismiss\n              </Box>\n            </Box>\n          )}\n\n          {showPoweredBy && <PoweredBy css={styles.poweredBy} />}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default Dropdown;\n","import { getStylesObject } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\n\nimport Box from '../../../Box';\nimport { useComboboxContext } from '../../context';\nimport { useTypeaheadStyles } from './styles';\n\nexport function trimPrefix(str: string, prefix: string) {\n  if (str === undefined || prefix === '') {\n    return '';\n  }\n  if (str.startsWith(prefix)) {\n    return str.slice(prefix.length);\n  }\n  return '';\n}\n\nconst Typeahead = () => {\n  const {\n    mode,\n    completion,\n    inputValue,\n    disableDefaultStyles = false,\n    customClassNames: { typeaheadClassName = '' },\n  } = useComboboxContext();\n  const styles = getStylesObject(useTypeaheadStyles(), disableDefaultStyles);\n  let typeaheadValue = '';\n  let hiddenText = '&#8203;';\n\n  if (mode === 'typeahead' && completion) {\n    typeaheadValue = trimPrefix(completion, inputValue);\n    hiddenText = completion.substring(0, completion.length - typeaheadValue.length);\n  }\n\n  return (\n    <Box css={styles.container} className={typeaheadClassName}>\n      <Box as=\"span\" css={styles.hidden}>\n        {hiddenText}\n      </Box>\n      {typeaheadValue}\n    </Box>\n  );\n};\n\nexport default Typeahead;\n","import { mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nexport function useTypeaheadStyles() {\n  const styles = {\n    container: [tw`text-gray-400`],\n    hidden: [tw`opacity-0`],\n  };\n\n  return mapStyles(styles);\n}\n","import { getStylesObject } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\n\nimport { IconEmptyMic, IconMic } from '../../../assets/icons';\nimport Box from '../../../Box';\nimport { useVoiceInput } from '../../../hooks';\nimport { useComboboxContext } from '../../context';\nimport useVoiceStyles from './styles';\nimport { VoiceProps } from './types';\n\nconst Voice = ({ children, onVoiceInput, ...rest }: VoiceProps) => {\n  const { active, start, supported } = useVoiceInput(onVoiceInput);\n  const { disableDefaultStyles = false } = useComboboxContext();\n\n  if (!supported) {\n    return null;\n  }\n\n  if (children && typeof children === 'function') {\n    return children({ onClick: start, active });\n  }\n\n  const styles = getStylesObject(useVoiceStyles({ active }), disableDefaultStyles);\n\n  return (\n    <Box as=\"button\" type=\"button\" css={styles.container} onClick={start} aria-label=\"Search by voice\" {...rest}>\n      {active ? <IconMic /> : <IconEmptyMic />}\n    </Box>\n  );\n};\n\nexport default Voice;\n","import { mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\ninterface UseVoicesStylesParams {\n  active?: boolean;\n}\n\nexport default function useVoiceStyles({ active }: UseVoicesStylesParams) {\n  const styles = {\n    container: [\n      tw`transition duration-200 bg-transparent border-0 outline-none cursor-pointer`,\n      active ? tw`text-red-500` : tw`hover:text-gray-600 focus:text-gray-600`,\n    ],\n  };\n\n  return mapStyles(styles);\n}\n","/* eslint-disable prefer-arrow-callback */\n\nimport { mergeProps, useId } from '@react-aria/utils';\nimport { __DEV__, getStylesObject, isFunction, isSSR } from '@sajari/react-sdk-utils';\nimport { useCombobox } from 'downshift';\nimport React, { ChangeEvent, KeyboardEvent, useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport tw from 'twin.macro';\n\nimport { IconSearch, IconSmallSearch, IconSpinner } from '../assets/icons';\nimport Box from '../Box';\nimport { useVoiceInput } from '../hooks';\nimport Dropdown from './components/Dropdown';\nimport Typeahead from './components/Typeahead';\nimport Voice from './components/Voice';\nimport ComboboxContextProvider from './context';\nimport { useComboboxStyles } from './styles';\nimport { ComboboxProps, ResultItem } from './types';\n\nconst Combobox = React.forwardRef(function ComboboxInner<T>(props: ComboboxProps<T>, ref: React.Ref<HTMLInputElement>) {\n  const {\n    mode = 'standard',\n    label,\n    placeholder = 'Search',\n    enterKeyHint = 'search',\n    id = `combobox-${useId()}`,\n    invalid,\n    onChange = () => {},\n    onKeyDown = () => {},\n    onVoiceInput = () => {},\n    enableVoice = false,\n    captureVoiceInput = true,\n    loading = false,\n    value: valueProp = '',\n    items = [],\n    completion = '',\n    size = 'md',\n    showDropdownTips = false,\n    showPoweredBy = true,\n    itemToString = mode === 'results'\n      ? (item: T) => ((item as unknown) as ResultItem).title\n      : (item: T) => (item as unknown) as string,\n    itemToUrl = (item: T) => ((item as unknown) as ResultItem).url as string,\n    renderItem,\n    onSelect,\n    disableDefaultStyles = false,\n    className,\n    styles: stylesProp,\n    inputClassName,\n    inputContainerClassName,\n    inputElement,\n    ...rest\n  } = props;\n  const [typedInputValue, setTypedInputValue] = useState(valueProp.toString());\n  const { supported: voiceSupported } = useVoiceInput();\n  const [value, setValue] = useState(valueProp.toString());\n  const [container, setContainer] = useState<undefined | null | Element>();\n\n  useEffect(() => {\n    setValue(valueProp.toString());\n  }, [valueProp]);\n\n  const {\n    isOpen: open,\n    getLabelProps,\n    getMenuProps,\n    getItemProps,\n    getInputProps,\n    getComboboxProps,\n    selectedItem,\n    highlightedIndex,\n    inputValue,\n    setInputValue,\n    closeMenu,\n  } = useCombobox<T>({\n    items,\n    itemToString,\n    inputValue: value,\n    onInputValueChange: (changes) => {\n      setValue(changes.inputValue ?? '');\n    },\n    stateReducer: (state, { changes, type }) => {\n      if (mode === 'suggestions') {\n        switch (type) {\n          case useCombobox.stateChangeTypes.InputKeyDownArrowDown:\n            if (state.highlightedIndex === (items || []).length - 1) {\n              return {\n                ...changes,\n                inputValue: typedInputValue,\n                highlightedIndex: undefined,\n              };\n            }\n\n            if (changes.highlightedIndex !== undefined) {\n              const item = (items || [])[changes.highlightedIndex];\n              const stringItem = itemToString(item);\n\n              if (typeof stringItem !== 'string') {\n                return changes;\n              }\n\n              return {\n                ...changes,\n                inputValue: stringItem,\n                selectedItem: item,\n              };\n            }\n\n            return changes;\n\n          case useCombobox.stateChangeTypes.InputKeyDownArrowUp:\n            if (state.highlightedIndex === 0) {\n              return {\n                ...changes,\n                inputValue: typedInputValue,\n                highlightedIndex: undefined,\n              };\n            }\n\n            if (changes.highlightedIndex !== undefined) {\n              const item = (items || [])[changes.highlightedIndex];\n              const stringItem = itemToString(item);\n\n              if (typeof stringItem !== 'string') {\n                return changes;\n              }\n\n              return {\n                ...changes,\n                inputValue: stringItem,\n                selectedItem: item,\n              };\n            }\n\n            return changes;\n\n          case useCombobox.stateChangeTypes.ItemMouseMove:\n            if (changes.highlightedIndex !== undefined) {\n              const item = (items || [])[changes.highlightedIndex];\n              const stringItem = itemToString(item);\n\n              if (typeof stringItem !== 'string') {\n                return changes;\n              }\n\n              return {\n                ...changes,\n                inputValue: stringItem,\n                selectedItem: item,\n              };\n            }\n            return changes;\n\n          case useCombobox.stateChangeTypes.InputKeyDownEscape:\n            if (state.isOpen) {\n              return {\n                ...changes,\n                isOpen: true,\n                inputValue: typedInputValue,\n              };\n            }\n            return changes;\n\n          case useCombobox.stateChangeTypes.InputKeyDownEnter:\n            return {\n              ...changes,\n              isOpen: false,\n            };\n\n          default:\n            return changes;\n        }\n      }\n\n      if (mode === 'results') {\n        switch (type) {\n          case useCombobox.stateChangeTypes.InputKeyDownEnter:\n            return {\n              ...changes,\n              inputValue: '',\n            };\n\n          case useCombobox.stateChangeTypes.ItemClick:\n            return {\n              ...changes,\n              inputValue: '',\n            };\n\n          case useCombobox.stateChangeTypes.InputChange:\n            if (changes.inputValue === '') {\n              return {\n                ...changes,\n                isOpen: false,\n              };\n            }\n            return changes;\n\n          default:\n            return changes;\n        }\n      }\n\n      return changes;\n    },\n  });\n\n  const context = {\n    mode,\n    inputValue,\n    open,\n    items,\n    completion,\n    selectedItem,\n    highlightedIndex,\n    getMenuProps,\n    getItemProps,\n    showDropdownTips,\n    showPoweredBy,\n    typedInputValue,\n    renderItem,\n    onSelect,\n    itemToString,\n    itemToUrl,\n    disableDefaultStyles,\n    customClassNames: rest,\n  };\n\n  const handleVoiceInput = (input: string) => {\n    if (captureVoiceInput) {\n      setInputValue(input);\n      setTypedInputValue(input);\n    }\n    onVoiceInput(input);\n  };\n\n  const { styles: comboboxStyles, focusProps } = useComboboxStyles({\n    size,\n    voiceEnabled: enableVoice && voiceSupported,\n    loading,\n  });\n\n  const styles = getStylesObject(comboboxStyles, disableDefaultStyles);\n\n  const inputProps = getInputProps({\n    id,\n    className: inputClassName,\n    type: 'search',\n    dir: 'auto',\n    placeholder,\n    'aria-invalid': invalid,\n    autoCapitalize: 'off',\n    autoComplete: 'off',\n    autoCorrect: 'off',\n    spellCheck: 'false',\n    inputMode: 'search',\n    onKeyDown: (e: KeyboardEvent<HTMLInputElement>) => {\n      // Don't supress native form submission when 'Enter' key is pressed\n      // Only if the user isn't focused on an item in the suggestions\n      if (e.key === 'Enter' && highlightedIndex === -1) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (e.nativeEvent as any).preventDownshiftDefault = true;\n\n        if (mode === 'suggestions') {\n          closeMenu();\n        }\n      }\n\n      if (mode !== 'results' && e.key === 'Enter' && highlightedIndex > -1) {\n        setTypedInputValue(itemToString(items[highlightedIndex]));\n      }\n\n      if (mode === 'typeahead' && e.key === 'ArrowRight') {\n        if ((e.target as HTMLInputElement).selectionStart === inputValue.length) {\n          if (completion.startsWith(inputValue)) {\n            setInputValue(completion);\n            setTypedInputValue(completion);\n          }\n        }\n      }\n\n      if (e.key === 'Enter' && highlightedIndex > -1) {\n        const item = (items || [])[highlightedIndex];\n        if (mode === 'results' && itemToUrl && !renderItem) {\n          const url = itemToUrl(item);\n\n          if (url) {\n            window.location.href = url;\n          }\n\n          const result = (item as unknown) as ResultItem;\n          if (isFunction(result.onClick)) {\n            result.onClick();\n          }\n        }\n        if (onSelect) {\n          onSelect(item);\n        }\n      }\n\n      onKeyDown(e);\n    },\n    onInput: (e: ChangeEvent<HTMLInputElement>) => {\n      onChange(e.target.value);\n      setTypedInputValue(e.target.value);\n    },\n    onChange: (e: ChangeEvent<HTMLInputElement>) => {\n      setValue(e.target.value);\n    },\n  });\n\n  const renderInAttachMode = (input: HTMLInputElement) => {\n    if (isSSR()) {\n      return null;\n    }\n    if (container && input) {\n      const InputComponent = React.createElement('input', {\n        ...inputProps,\n        ...Array.from(input.attributes).reduce((acc, attr) => ({ ...acc, [attr.nodeName]: attr.nodeValue }), {}),\n      });\n      const ContainerComponent = React.createElement(\n        'div',\n        {\n          ...getComboboxProps(),\n          style: {\n            position: 'relative',\n          },\n        },\n        [InputComponent, <Dropdown />],\n      );\n      input.remove();\n      return ReactDOM.createPortal(ContainerComponent, container as Element);\n    }\n    return null;\n  };\n\n  useEffect(() => {\n    if (inputElement?.current) {\n      setContainer(inputElement.current.parentElement);\n    }\n  }, [inputElement]);\n\n  return (\n    <ComboboxContextProvider value={context}>\n      {inputElement?.current ? (\n        renderInAttachMode(inputElement.current)\n      ) : (\n        <Box css={[styles.container, stylesProp]} className={className}>\n          <Box css={styles.inputContainer} {...getComboboxProps()}>\n            <Box as=\"label\" css={tw`sr-only`} {...getLabelProps({ htmlFor: id })}>\n              {label ?? placeholder}\n            </Box>\n\n            <Box css={styles.iconContainerLeft} className={inputContainerClassName}>\n              {size === 'sm' ? <IconSmallSearch /> : <IconSearch />}\n            </Box>\n\n            <Typeahead />\n\n            <Box\n              ref={ref}\n              as=\"input\"\n              css={styles.input}\n              {...mergeProps(inputProps, focusProps)}\n              enterKeyHint={enterKeyHint}\n              {...rest}\n            />\n\n            {enableVoice || loading ? (\n              <Box css={styles.iconContainerRight}>\n                {loading && <IconSpinner css={styles.iconSpinner} />}\n                {enableVoice && <Voice onVoiceInput={handleVoiceInput} />}\n              </Box>\n            ) : null}\n          </Box>\n\n          <Dropdown />\n        </Box>\n      )}\n    </ComboboxContextProvider>\n  );\n});\n\nif (__DEV__) {\n  Combobox.displayName = 'Combobox';\n}\n\nexport default Combobox;\nexport type { ComboboxProps };\n","import { inferStylesObjectKeys, mapStyles } from '@sajari/react-sdk-utils';\nimport tw, { TwStyle } from 'twin.macro';\n\nimport { useFocusRingStyles } from '../hooks';\nimport { ComboboxProps } from './types';\n\ninterface UseComboboxStylesProps {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  size: ComboboxProps<any>['size'];\n  voiceEnabled: boolean;\n  loading: boolean;\n}\n\nexport function useComboboxStyles(props: UseComboboxStylesProps) {\n  const { size, voiceEnabled, loading } = props;\n  const { focusProps, focusRingStyles } = useFocusRingStyles();\n  const containerStyles: TwStyle[] = [];\n  const iconContainerStyles: TwStyle[] = [tw`absolute inset-y-0 flex items-center space-x-2 text-gray-400`];\n\n  switch (size) {\n    case 'sm':\n      containerStyles.push(tw`py-1 text-sm pl-7`);\n\n      if (loading && voiceEnabled) {\n        containerStyles.push(tw`pr-13`);\n      } else if (loading || voiceEnabled) {\n        containerStyles.push(tw`pr-7`);\n      }\n\n      iconContainerStyles.push(tw`px-2`);\n      break;\n\n    case 'lg':\n      containerStyles.push(tw`py-3 text-lg pl-11`);\n\n      if (loading && voiceEnabled) {\n        containerStyles.push(tw`pr-15`);\n      } else if (loading || voiceEnabled) {\n        containerStyles.push(tw`pr-11`);\n      }\n\n      iconContainerStyles.push(tw`px-4`);\n      break;\n\n    case 'md':\n    default:\n      containerStyles.push(tw`pl-9`);\n\n      if (loading && voiceEnabled) {\n        containerStyles.push(tw`pr-14`);\n      } else if (loading || voiceEnabled) {\n        containerStyles.push(tw`pr-9`);\n      }\n\n      iconContainerStyles.push(tw`px-3`);\n      break;\n  }\n\n  const styles = inferStylesObjectKeys({\n    container: [tw`relative`],\n    inputContainer: [\n      tw`form-input`,\n      tw`relative text-base transition-all duration-150 bg-white border border-gray-200 border-solid`,\n      ...focusRingStyles,\n      ...containerStyles,\n    ],\n    iconContainerLeft: [...iconContainerStyles, tw`left-0`],\n    iconContainerRight: [...iconContainerStyles, tw`right-0`],\n    input: [\n      tw`form-input`,\n      tw`absolute inset-0 w-full bg-transparent border-0 focus:shadow-none font-inherit`,\n      ...containerStyles,\n      ` &::-ms-clear,\n        &::-ms-reveal {\n          display: none;\n          width: 0;\n          height: 0;\n        }\n        &::-webkit-search-decoration,\n        &::-webkit-search-cancel-button,\n        &::-webkit-search-results-button,\n        &::-webkit-search-results-decoration {\n          -webkit-appearance:none;\n        }`,\n    ],\n    iconSpinner: [],\n  });\n\n  if (size === 'sm') {\n    styles.iconSpinner.push(tw`w-3 h-3`);\n  }\n\n  return { styles: mapStyles(styles), focusProps };\n}\n","const focusableElements = [\n  'a[href]',\n  'area[href]',\n  'button:not([disabled])',\n  'embed',\n  'iframe',\n  'input:not([disabled])',\n  'object',\n  'select:not([disabled])',\n  'textarea:not([disabled])',\n  '*[tabindex]:not([aria-disabled])',\n  '*[contenteditable]',\n];\n\nconst focusableElSelector = focusableElements.join();\n\nexport function getFocusables(element: HTMLElement | null, keyboardOnly = false) {\n  if (element === null) {\n    return [];\n  }\n\n  let elements = Array.from(element.querySelectorAll(focusableElSelector));\n\n  // Filter out elements with display: none\n  elements = elements.filter((focusableEl) => window.getComputedStyle(focusableEl).display !== 'none');\n\n  if (keyboardOnly === true) {\n    elements = elements.filter((focusableEl) => focusableEl.getAttribute('tabindex') !== '-1');\n  }\n\n  return elements;\n}\n","import React from 'react';\nimport ReactFocusLock from 'react-focus-lock';\n\nimport { FocusLockProps } from './types';\nimport { getFocusables } from './utils';\n\n/**\n * React component to trap focus within an element or component.\n * Mostly used in Modals, Popovers, etc.\n */\nfunction FocusLock(props: FocusLockProps) {\n  const { initialFocusRef, finalFocusRef, contentRef, restoreFocus, children, disabled, autoFocus = true } = props;\n\n  const onActivation = React.useCallback(() => {\n    if (initialFocusRef?.current) {\n      initialFocusRef.current.focus();\n    } else {\n      if (!contentRef?.current) {\n        return;\n      }\n      const focusables = getFocusables(contentRef.current);\n      if (contentRef.current && !focusables.length) {\n        contentRef.current?.focus();\n      }\n    }\n  }, [initialFocusRef, contentRef]);\n\n  const onDeactivation = React.useCallback(() => {\n    finalFocusRef?.current?.focus();\n  }, [finalFocusRef]);\n\n  const returnFocus = restoreFocus && !finalFocusRef;\n\n  return (\n    <ReactFocusLock\n      autoFocus={autoFocus}\n      disabled={disabled}\n      onActivation={onActivation}\n      onDeactivation={onDeactivation}\n      returnFocus={returnFocus}\n    >\n      {children}\n    </ReactFocusLock>\n  );\n}\n\nexport type { FocusLockProps };\nexport default FocusLock;\n","import { hideOthers, Undo } from 'aria-hidden';\nimport React from 'react';\n\n/**\n * Modal component to polyfill `aria-modal`.\n *\n * It applies `aria-hidden` to elements behind the modal\n * to indicate that they're `inert`.\n *\n * @param refModal React ref of the node\n * @param shouldHide whether `aria-hidden` should be applied\n */\nexport function AriaHidden({ refModal, shouldHide }: { refModal: React.RefObject<HTMLElement>; shouldHide: boolean }) {\n  React.useEffect(() => {\n    if (!refModal.current) return;\n\n    let undo: Undo | null = null;\n\n    if (shouldHide && refModal.current) {\n      undo = hideOthers(refModal.current);\n    }\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      if (shouldHide) {\n        undo?.();\n      }\n    };\n  }, [shouldHide, refModal]);\n\n  return null;\n}\n","import { createContext } from '@sajari/react-sdk-utils';\n\nimport { ModalSize } from './types';\n\ninterface ModalContextProps {\n  open: boolean;\n  titleId?: string;\n  bodyId?: string;\n  size?: ModalSize;\n  onClose?: () => void;\n  disableDefaultStyles?: boolean;\n}\n\nconst [ModalContextProvider, useModalContext] = createContext<ModalContextProps>({\n  strict: true,\n  name: 'ModalContext',\n});\n\nexport default ModalContextProvider;\nexport { useModalContext };\n","import { __DEV__, getStylesObject } from '@sajari/react-sdk-utils';\nimport React from 'react';\n\nimport Box from '../../Box';\nimport { useModalContext } from '../context';\nimport useModalBodyStyles from './styles';\nimport { ModalBodyProps } from './types';\n\nconst ModalBody = React.forwardRef((props: ModalBodyProps, ref?: React.Ref<HTMLDivElement>) => {\n  const { styles: stylesProp, ...rest } = props;\n  const { disableDefaultStyles = false, bodyId } = useModalContext();\n  const styles = getStylesObject(useModalBodyStyles(props), disableDefaultStyles);\n\n  return <Box ref={ref} id={bodyId} css={[styles.container, stylesProp]} {...rest} />;\n});\n\nif (__DEV__) {\n  ModalBody.displayName = 'ModalBody';\n}\n\nexport default ModalBody;\nexport type { ModalBodyProps };\n","import { mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nimport { ModalBodyProps } from './types';\n\nexport default function useModalBodyStyles(props: ModalBodyProps) {\n  const { padded = true } = props;\n  const styles = {\n    container: [tw`overflow-auto scrolling-touch`, padded && tw`p-6`],\n  };\n\n  return mapStyles(styles);\n}\n","import { __DEV__, callAllHandlers, getStylesObject } from '@sajari/react-sdk-utils';\nimport React from 'react';\n\nimport { IconClose } from '../../assets/icons';\nimport { useModalContext } from '../context';\nimport useModalCloseButtonStyles from './styles';\nimport { ModalCloseButtonProps } from './types';\n\nconst ModalCloseButton = React.forwardRef((props: ModalCloseButtonProps, ref?: React.Ref<HTMLButtonElement>) => {\n  const { onClose, disableDefaultStyles = false } = useModalContext();\n  const { onClick, label = 'Close', styles: stylesProp, ...rest } = props;\n  const styles = getStylesObject(useModalCloseButtonStyles(), disableDefaultStyles);\n\n  return (\n    <button\n      ref={ref}\n      type=\"button\"\n      onClick={callAllHandlers(onClick, onClose)}\n      aria-label={label}\n      css={[styles.container, stylesProp]}\n      {...rest}\n    >\n      &#8203;\n      <IconClose css={styles.icon} />\n    </button>\n  );\n});\n\nif (__DEV__) {\n  ModalCloseButton.displayName = 'ModalCloseButton';\n}\n\nexport default ModalCloseButton;\nexport type { ModalCloseButtonProps };\n","import { mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nexport default function useModalCloseButtonStyles() {\n  const styles = {\n    container: [\n      tw`inline-flex relative items-center justify-center ml-auto -mr-4 px-3 py-2 text-base font-medium text-gray-500 hover:text-gray-700 focus:text-gray-700 no-underline bg-transparent hover:bg-gray-100 focus:bg-gray-100 rounded-md border border-transparent transition duration-150 ease-in-out cursor-pointer focus:outline-none select-none`,\n    ],\n    icon: [tw`inline-block align-middle transition-all duration-200 ease-in-out transform fill-current`],\n  };\n\n  return mapStyles(styles);\n}\n","import { __DEV__, getStylesObject } from '@sajari/react-sdk-utils';\nimport React, { Children } from 'react';\n\nimport ButtonGroup from '../../ButtonGroup';\nimport { useModalContext } from '../context';\nimport { ModalSize } from '../types';\nimport useModalFooterStyles from './styles';\nimport { ModalFooterProps } from './types';\n\nconst ModalFooter = React.forwardRef((props: ModalFooterProps, ref?: React.Ref<HTMLDivElement>) => {\n  const { styles: stylesProp, ...rest } = props;\n  const { disableDefaultStyles = false } = useModalContext();\n  const styles = getStylesObject(useModalFooterStyles(), disableDefaultStyles);\n  const { children } = props;\n  const { size = 'md' } = useModalContext();\n  const fullWidthSizes: Array<ModalSize> = ['xs', 'sm'];\n\n  if (Children.toArray(children).length === 2) {\n    fullWidthSizes.push('md');\n  }\n\n  const fullWidth = fullWidthSizes.includes(size);\n\n  return (\n    <ButtonGroup\n      ref={ref}\n      fullwidth={fullWidth}\n      css={[styles.container, stylesProp]}\n      disableDefaultStyles={disableDefaultStyles}\n      {...rest}\n    />\n  );\n});\n\nif (__DEV__) {\n  ModalFooter.displayName = 'ModalFooter';\n}\n\nexport default ModalFooter;\nexport type { ModalFooterProps };\n","import { mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nexport default function useModalFooterStyles() {\n  const styles = {\n    container: [tw`space-x-4 p-4 border-t border-gray-200 justify-end`],\n  };\n\n  return mapStyles(styles);\n}\n","import { __DEV__, getStylesObject } from '@sajari/react-sdk-utils';\nimport React from 'react';\n\nimport Box from '../../Box';\nimport { useModalContext } from '../context';\nimport useModalHeaderStyles from './styles';\nimport { ModalHeaderProps } from './types';\n\nconst ModalHeader = React.forwardRef((props: ModalHeaderProps, ref?: React.Ref<HTMLElement>) => {\n  const { styles: stylesProp, ...rest } = props;\n  const { disableDefaultStyles = false } = useModalContext();\n  const styles = getStylesObject(useModalHeaderStyles(), disableDefaultStyles);\n\n  return <Box ref={ref} as=\"header\" css={[styles.container, stylesProp]} {...rest} />;\n});\n\nif (__DEV__) {\n  ModalHeader.displayName = 'ModalHeader';\n}\n\nexport default ModalHeader;\nexport type { ModalHeaderProps };\n","import { mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nexport default function useModalHeader() {\n  const styles = {\n    container: [tw`py-2 px-6 relative flex h-15 items-center border-b border-gray-200`],\n  };\n\n  return mapStyles(styles);\n}\n","import { Ref, useEffect } from 'react';\n\nlet modals: Ref<Element>[] = [];\n\n/**\n * Handle the order of the modals.\n * Inspired by the material-ui implementation.\n */\nexport const modalManager = {\n  /**\n   * Register a new modal\n   */\n  add: (newModal: Ref<Element>) => {\n    modals.push(newModal);\n  },\n\n  /**\n   * Remove a modal\n   */\n  remove: (oldModal: Ref<Element>) => {\n    modals = modals.filter((modal) => modal !== oldModal);\n  },\n\n  /**\n   * When multiple modals are rendered will return true if current modal is the last one\n   */\n  isTopModal: (modal: Ref<Element>) => !!modals.length && modals[modals.length - 1] === modal,\n};\n\nexport function useModalManager(ref: Ref<Element>, open: boolean) {\n  useEffect(() => {\n    if (open) {\n      modalManager.add(ref);\n    }\n    return () => {\n      modalManager.remove(ref);\n    };\n  }, [open, ref]);\n}\n","import { __DEV__, getStylesObject } from '@sajari/react-sdk-utils';\nimport React from 'react';\n\nimport Text from '../../Text';\nimport { useModalContext } from '../context';\nimport useModalTitleStyles from './styles';\nimport { ModalTitleProps } from './types';\n\nconst ModalTitle = React.forwardRef((props: ModalTitleProps, ref?: React.Ref<HTMLParagraphElement>) => {\n  const { styles: stylesProp, ...rest } = props;\n  const { disableDefaultStyles = false, titleId } = useModalContext();\n  const styles = getStylesObject(useModalTitleStyles(), disableDefaultStyles);\n\n  return <Text ref={ref} id={titleId} truncate css={[styles.container, stylesProp]} {...rest} />;\n});\n\nif (__DEV__) {\n  ModalTitle.displayName = 'ModalTitle';\n}\n\nexport default ModalTitle;\nexport type { ModalTitleProps };\n","import { mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nexport default function useModalTitleStyles() {\n  const styles = {\n    container: [tw`font-medium flex-1`],\n  };\n\n  return mapStyles(styles);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Portal: React.FC<{\n  target: Element;\n}> = (props) => {\n  return ReactDOM.createPortal(props.children, props.target);\n};\n\nexport default Portal;\n","import { css, keyframes } from '@emotion/core';\nimport { mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nimport { ModalProps, ModalSize } from './types';\n\nconst animateOverlayIn = keyframes`\n    from {\n        opacity: 0;\n    }\n    to {\n        opacity: 1;\n    }\n`;\n\nconst animateOverlayOut = keyframes`\n    from {\n        opacity: 1;\n    }\n    to {\n        opacity: 0;\n    }\n`;\n\nconst animateModalIn = keyframes`\n    from {\n        opacity: 0;\n        transform: scale(0.95);\n    }\n    to {\n        opacity: 1;\n        transform: scale(1);\n    }\n`;\n\nconst animateModalOut = keyframes`\n    from {\n        opacity: 1;\n        transform: scale(1);\n    }\n    to {\n        opacity: 0;\n        transform: scale(0.95);\n    }\n`;\n\nfunction getModalSize(size: ModalSize) {\n  switch (size) {\n    case 'xs':\n      return tw`max-w-xs`;\n    case 'sm':\n      return tw`max-w-sm`;\n    case 'md':\n      return tw`max-w-md`;\n    case 'lg':\n      return tw`max-w-lg`;\n    case 'xl':\n      return tw`max-w-xl`;\n    case '2xl':\n      return tw`max-w-2xl`;\n    case '3xl':\n      return tw`max-w-3xl`;\n    case '4xl':\n      return tw`max-w-4xl`;\n    case '5xl':\n      return tw`max-w-5xl`;\n    case '6xl':\n      return tw`max-w-6xl`;\n    case '7xl':\n      return tw`max-w-7xl`;\n    case 'screen-sm':\n      return tw`max-w-screen-sm`;\n    case 'screen-md':\n      return tw`max-w-screen-md`;\n    case 'screen-lg':\n      return tw`max-w-screen-lg`;\n    case 'screen-xl':\n      return tw`max-w-screen-xl`;\n    case 'screen-2xl':\n      return tw`max-w-screen-2xl`;\n    default:\n      return tw`max-w-full`;\n  }\n}\n\nexport function useModalStyles(props: ModalProps) {\n  const {\n    open,\n    animationDuration = 300,\n    modalAnimationIn,\n    modalAnimationOut,\n    overlayAnimationIn,\n    overlayAnimationOut,\n    center = true,\n    size = 'md',\n  } = props;\n\n  const sizeStyle = getModalSize(size);\n\n  const styles = {\n    overlay: [\n      tw`fixed inset-0 z-50 transition-opacity backdrop-blur-1 `,\n      open\n        ? css`\n            animation: ${overlayAnimationIn ?? animateOverlayIn} ${animationDuration}ms ease-in;\n          `\n        : css`\n            animation: ${overlayAnimationOut ?? animateOverlayOut} ${animationDuration}ms ease-out;\n          `,\n    ],\n    overlayInner: [tw`absolute inset-0 bg-gray-700 opacity-75`],\n    container: [\n      tw`fixed inset-0 z-50 flex p-10 items-start`,\n      open\n        ? css`\n            animation: ${modalAnimationIn ?? animateModalIn} ${animationDuration}ms ease-in;\n          `\n        : css`\n            animation: ${modalAnimationOut ?? animateModalOut} ${animationDuration}ms ease-out;\n          `,\n    ],\n    content: [\n      tw`relative z-50 flex flex-col flex-1 w-full overflow-auto scrolling-touch transition-all transform bg-white`,\n      tw`max-h-(screen-20) outline-none rounded-xl shadow-lg`,\n      center ? tw`m-auto` : tw`mx-auto`,\n      sizeStyle,\n    ],\n  };\n\n  return mapStyles(styles);\n}\n","import { __DEV__, getStylesObject, isSSR } from '@sajari/react-sdk-utils';\nimport classnames from 'classnames';\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport Box from '../Box';\nimport FocusLock from '../FocusLock';\nimport { AriaHidden } from './AriaHidden';\nimport ModalContextProvider from './context';\nimport ModalBody, { ModalBodyProps } from './ModalBody';\nimport ModalCloseButton, { ModalCloseButtonProps } from './ModalCloseButton';\nimport ModalFooter, { ModalFooterProps } from './ModalFooter';\nimport ModalHeader, { ModalHeaderProps } from './ModalHeader';\nimport { modalManager, useModalManager } from './modalManager';\nimport ModalTitle, { ModalTitleProps } from './ModalTitle';\nimport Portal from './Portal';\nimport { useModalStyles } from './styles';\nimport { ModalProps } from './types';\nimport { useScrollLock } from './useScrollLock';\n\nconst Modal = (props: ModalProps) => {\n  const {\n    open,\n    blockScroll = true,\n    closeOnEsc = true,\n    closeOnOverlayClick = true,\n    container,\n    role = 'dialog',\n    ariaDescribedby,\n    ariaLabelledby,\n    modalId,\n    onClose,\n    onEscKeyDown,\n    trapFocus = true,\n    autoFocus = true,\n    initialFocusRef,\n    finalFocusRef,\n    returnFocusOnClose = true,\n    onOverlayClick,\n    onAnimationEnd,\n    children,\n    disableDefaultStyles = false,\n    styles: stylesProp,\n    modalClassName,\n    modalContainerClassName,\n    overlayClassName,\n    overlayOpenClassName,\n    modalOpenClassName,\n    size = 'md',\n    rootClassName,\n    useInert = true,\n  } = props;\n  const refModal = useRef<HTMLDivElement>(null);\n  const refShouldClose = useRef<boolean | null>(null);\n  const refContainer = useRef<HTMLDivElement | null>(null);\n  const styles = getStylesObject(useModalStyles({ ...props, size }), disableDefaultStyles);\n\n  // Lazily create the ref instance\n  // https://reactjs.org/docs/hooks-faq.html#how-to-create-expensive-objects-lazily\n  if (refContainer.current === null && !isSSR()) {\n    refContainer.current = document.createElement('div');\n  }\n\n  // The value should be false for srr, that way when the component is hydrated client side,\n  // it will match the server rendered content\n  const [showPortal, setShowPortal] = useState(false);\n\n  // Hook used to manage multiple modals opened at the same time\n  useModalManager(refModal, open);\n\n  // Hook used to manage the scroll\n  useScrollLock(refModal, open, showPortal, blockScroll);\n\n  const handleKeydown = (event: KeyboardEvent) => {\n    // Only the last modal need to be escaped when pressing the esc key\n    if (event.keyCode !== 27 || !modalManager.isTopModal(refModal)) {\n      return;\n    }\n\n    onEscKeyDown?.(event);\n\n    if (closeOnEsc) {\n      onClose();\n    }\n  };\n\n  const handleOpen = () => {\n    if (refContainer.current && !container && !document.body.contains(refContainer.current)) {\n      document.body.appendChild(refContainer.current);\n    }\n\n    document.addEventListener('keydown', handleKeydown);\n  };\n\n  const handleClose = () => {\n    if (refContainer.current && !container && document.body.contains(refContainer.current)) {\n      document.body.removeChild(refContainer.current);\n    }\n    document.removeEventListener('keydown', handleKeydown);\n  };\n\n  useEffect(() => {\n    return () => {\n      if (showPortal) {\n        // When the modal is closed or removed directly, cleanup the listeners\n        handleClose();\n      }\n    };\n  }, [showPortal]);\n\n  useEffect(() => {\n    // If the open prop is changing, we need to open the modal\n    // This is also called on the first render if the open prop is true when the modal is created\n    if (open && !showPortal) {\n      setShowPortal(true);\n      handleOpen();\n    }\n  }, [open]);\n\n  const handleClickOverlay = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (refShouldClose.current === null) {\n      refShouldClose.current = true;\n    }\n\n    if (!refShouldClose.current) {\n      refShouldClose.current = null;\n      return;\n    }\n\n    onOverlayClick?.(event);\n\n    if (closeOnOverlayClick) {\n      onClose();\n    }\n\n    refShouldClose.current = null;\n  };\n\n  const handleModalEvent = () => {\n    refShouldClose.current = false;\n  };\n\n  const handleAnimationEnd = () => {\n    if (!open) {\n      setShowPortal(false);\n    }\n    onAnimationEnd?.();\n  };\n\n  const containerModal = container || refContainer.current;\n\n  const context = {\n    titleId: ariaLabelledby,\n    bodyId: ariaDescribedby,\n    disableDefaultStyles,\n    size,\n    onClose,\n    open,\n  };\n\n  return showPortal && containerModal ? (\n    <Portal target={containerModal}>\n      <ModalContextProvider value={context}>\n        <FocusLock\n          autoFocus={autoFocus}\n          disabled={!trapFocus}\n          contentRef={refModal}\n          initialFocusRef={initialFocusRef}\n          finalFocusRef={finalFocusRef}\n          restoreFocus={returnFocusOnClose}\n        >\n          <Box className={rootClassName} css={stylesProp}>\n            <Box\n              className={classnames(overlayClassName, open ? overlayOpenClassName : '')}\n              aria-hidden\n              css={styles.overlay}\n            >\n              <Box css={styles.overlayInner} />\n            </Box>\n            <Box\n              ref={refModal}\n              className={modalContainerClassName}\n              css={styles.container}\n              data-testid=\"modal-container\"\n              onAnimationEnd={handleAnimationEnd}\n              onClick={handleClickOverlay}\n            >\n              <Box\n                data-testid=\"modal\"\n                className={classnames(modalClassName, open ? modalOpenClassName : '')}\n                onMouseDown={handleModalEvent}\n                onMouseUp={handleModalEvent}\n                onClick={handleModalEvent}\n                id={modalId}\n                role={role}\n                aria-modal=\"true\"\n                aria-labelledby={ariaLabelledby}\n                aria-describedby={ariaDescribedby}\n                css={styles.content}\n              >\n                {children}\n              </Box>\n            </Box>\n          </Box>\n          <AriaHidden refModal={refModal} shouldHide={open && useInert} />\n        </FocusLock>\n      </ModalContextProvider>\n    </Portal>\n  ) : null;\n};\n\nif (__DEV__) {\n  Modal.displayName = 'Modal';\n}\n\nexport default Modal;\nexport { ModalBody, ModalCloseButton, ModalFooter, ModalHeader, ModalTitle };\nexport type { ModalBodyProps, ModalCloseButtonProps, ModalFooterProps, ModalHeaderProps, ModalProps, ModalTitleProps };\n","import { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\nimport { useEffect, useRef } from 'react';\n\nexport const useScrollLock = (\n  refModal: React.RefObject<Element>,\n  open: boolean,\n  showPortal: boolean,\n  blockScroll: boolean,\n) => {\n  const oldRef = useRef<Element | null>(null);\n\n  useEffect(() => {\n    if (open && refModal.current && blockScroll) {\n      oldRef.current = refModal.current;\n      disableBodyScroll(refModal.current);\n    }\n    return () => {\n      if (oldRef.current) {\n        enableBodyScroll(oldRef.current);\n        oldRef.current = null;\n      }\n    };\n  }, [open, showPortal, refModal]);\n};\n","import { clamp, getStylesObject, isFunction, isSSR, isString } from '@sajari/react-sdk-utils';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport smoothscroll from 'smoothscroll-polyfill';\n\nimport { IconChevronLeft, IconChevronRight } from '../assets/icons';\nimport Box from '../Box';\nimport Button from '../Button';\nimport ButtonGroup from '../ButtonGroup';\nimport { useFirstRender, useResizeObserver } from '../hooks';\nimport usePaginationStyles from './styles';\nimport { PaginationProps } from './types';\n\nconst defaultI18n = {\n  label: 'Pagination',\n  previous: 'Previous',\n  next: 'Next',\n  page: 'Page {{page}}',\n  current: 'Page {{page}}, current page',\n};\n\nconst Pagination = React.memo((props: PaginationProps) => {\n  const { ref, width } = useResizeObserver<HTMLDivElement>();\n  const {\n    language,\n    totalResults,\n    resultsPerPage,\n    page,\n    pageCount,\n    onChange,\n    i18n: i18nProp,\n    buttonClassName,\n    activeClassName = '',\n    nextClassName,\n    prevClassName,\n    spacerEllipsisClassName,\n    statusClassName,\n    styles: stylesProp,\n    disableDefaultStyles = false,\n    scrollTarget,\n    scrollToTop = false,\n    compact = width && width < 480,\n    ...rest\n  } = props;\n  const firstRender = useFirstRender();\n  const styles = getStylesObject(usePaginationStyles(props), disableDefaultStyles);\n  const i18n = { ...defaultI18n, ...i18nProp };\n\n  // Polyfill\n  React.useEffect(() => {\n    if (!isSSR()) {\n      smoothscroll.polyfill();\n    }\n  }, []);\n\n  // Handle scroll on paginate\n  React.useEffect(() => {\n    if (firstRender || isSSR()) {\n      return;\n    }\n\n    const scrollOptions: ScrollToOptions = { behavior: 'smooth' };\n    let target: Element | null = null;\n\n    if (isString(scrollTarget)) {\n      target = document.querySelector(scrollTarget);\n    } else if (scrollTarget) {\n      target = scrollTarget;\n    }\n\n    // Scroll an element (or document.body) into view\n    if (scrollToTop) {\n      (target ?? document.body).scrollIntoView(scrollOptions);\n    }\n\n    // Scroll within the element if specified\n    if (target) {\n      target.scrollTo({ ...scrollOptions, top: 0 });\n    }\n  }, [page]);\n\n  // Calculate the page count\n  const count = React.useMemo(() => {\n    if (!totalResults || !resultsPerPage) {\n      return undefined;\n    }\n\n    if (!pageCount) {\n      return Math.ceil(totalResults / resultsPerPage);\n    }\n\n    return pageCount;\n  }, [pageCount, totalResults, resultsPerPage]);\n\n  const changeHandler = React.useCallback(\n    (exitEarly: boolean, target: number) => () => {\n      if (target === page || exitEarly) {\n        return;\n      }\n\n      onChange(clamp(target, 1, count));\n    },\n    [onChange, page, count],\n  );\n\n  const renderButtons = () => {\n    const limit = 5;\n    const middle = Math.ceil(limit / 2);\n    let offset = 0;\n\n    if (!count) {\n      return null;\n    }\n\n    if (count > limit) {\n      if (page < limit) {\n        offset = 0;\n      } else {\n        const max = count - limit;\n        offset = clamp(page > max ? max : page - middle, 0, max);\n      }\n    }\n\n    const items: Array<number | null> = Array.from(Array(clamp(count, 0, limit))).map(\n      (_, index) => Number(index) + offset,\n    );\n\n    if (count > limit) {\n      // Add the 1 ...\n      if (offset > 1) {\n        items.unshift(0, null);\n      }\n\n      // Add the ... last\n      const lastIndex = count - 1;\n\n      if (!items.includes(lastIndex) && count > limit + 2) {\n        items.push(null, lastIndex);\n      }\n    }\n\n    return items.map((item, index) => {\n      if (item === null) {\n        return (\n          <Box\n            as=\"span\"\n            key={`spacer-ellipsis-${index}`} // eslint-disable-line\n            css={styles.spacerEllipsis}\n            className={spacerEllipsisClassName}\n          >\n            &hellip;\n          </Box>\n        );\n      }\n\n      const number = item + 1;\n      const active = number === page;\n      const template = active ? i18n.current : i18n.page;\n      const ariaLabel = isFunction(template) ? template({ page: number }) : template;\n\n      return (\n        <Button\n          key={item}\n          appearance={active ? 'primary' : undefined}\n          aria-current={active ? 'page' : undefined}\n          aria-label={ariaLabel}\n          onClick={changeHandler(false, number)}\n          className={classnames(buttonClassName, { [activeClassName]: active })}\n        >\n          {number.toLocaleString(language)}\n        </Button>\n      );\n    });\n  };\n\n  if (!count || count <= 1) {\n    return null;\n  }\n\n  const hasPrevious = page > 1;\n  const hasNext = page < count;\n\n  return (\n    <ButtonGroup as=\"nav\" ref={ref} aria-label={i18n.label} attached css={[styles.container, stylesProp]} {...rest}>\n      <Button\n        spacing=\"compact\"\n        disabled={!hasPrevious}\n        onClick={changeHandler(!hasPrevious, page - 1)}\n        aria-label={i18n.previous}\n        className={classnames(prevClassName, buttonClassName)}\n        rel=\"prev\"\n        key=\"prev\"\n      >\n        &#8203;\n        <IconChevronLeft />\n      </Button>\n\n      {compact ? (\n        <Box as=\"span\" css={styles.compactStatus} className={statusClassName} key=\"status\">\n          {page.toLocaleString(language)}\n          <Box as=\"span\" css={styles.compactStatusCount}>{` / ${count.toLocaleString(language)}`}</Box>\n        </Box>\n      ) : (\n        renderButtons()\n      )}\n\n      <Button\n        spacing=\"compact\"\n        disabled={!hasNext}\n        onClick={changeHandler(!hasNext, page + 1)}\n        aria-label={i18n.next}\n        className={classnames(nextClassName, buttonClassName)}\n        rel=\"next\"\n        key=\"next\"\n      >\n        &#8203;\n        <IconChevronRight />\n      </Button>\n    </ButtonGroup>\n  );\n});\n\nexport default Pagination;\nexport type { PaginationProps };\n","import { useEffect, useRef } from 'react';\n\nexport default function useFirstRender() {\n  const firstRender = useRef(true);\n\n  useEffect(() => {\n    if (firstRender.current) {\n      firstRender.current = false;\n    }\n  }, []);\n\n  return firstRender.current;\n}\n","import { mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nimport { useJustifyContent } from '../hooks';\nimport { PaginationProps } from './types';\n\nexport default function usePaginationStyles(props: PaginationProps) {\n  const { align = 'center' } = props;\n  const justifyContentStyles = useJustifyContent({ align });\n  const spacerStyles = tw`py-2 border border-gray-200 border-solid rounded-none select-none`;\n\n  const styles = {\n    container: [tw`flex`, justifyContentStyles],\n    spacerEllipsis: [tw`px-2 bg-gray-50`, spacerStyles],\n    compactStatus: [tw`px-4 bg-white`, spacerStyles],\n    compactStatusCount: [tw`text-gray-400`],\n  };\n\n  return mapStyles(styles);\n}\n","import { css } from '@emotion/core';\nimport tw, { TwStyle } from 'twin.macro';\n\nexport type Align = 'left' | 'center' | 'right';\n\nexport interface UseAlignParams {\n  align?: Align;\n}\n\nexport default function useJustifyContent({ align }: UseAlignParams) {\n  const styles: TwStyle[] = [];\n\n  switch (align) {\n    case 'left':\n      styles.push(tw`justify-start`);\n      break;\n\n    case 'center':\n      styles.push(tw`justify-center`);\n      break;\n\n    default:\n    case 'right':\n      styles.push(tw`justify-end`);\n      break;\n  }\n\n  return css(styles);\n}\n","/* eslint-disable jsx-a11y/role-supports-aria-props */\n\nimport { useId } from '@react-aria/utils';\nimport { __DEV__, getStylesObject } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\n\nimport Box from '../Box';\nimport Label from '../Label';\nimport useRadioStyles from './styles';\nimport { RadioProps } from './types';\n\nconst Radio = React.forwardRef((props: RadioProps, ref?: React.Ref<HTMLInputElement>) => {\n  const {\n    id = `radio-${useId()}`,\n    name,\n    value,\n    color,\n    defaultChecked,\n    checked,\n    disabled,\n    invalid,\n    readOnly,\n    onChange,\n    onBlur,\n    onFocus,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    children,\n    labelClassName,\n    styles: stylesProp,\n    disableDefaultStyles = false,\n    ...rest\n  } = props;\n\n  const [privateChecked, setPrivateChecked] = React.useState(defaultChecked ?? false);\n  const { current: controlled } = React.useRef(typeof checked !== 'undefined');\n  const internalChecked = (controlled ? checked : privateChecked) ?? false;\n  const { styles: radioStyles, focusProps } = useRadioStyles(props);\n  const styles = getStylesObject(radioStyles, disableDefaultStyles);\n\n  const internalChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (!controlled) {\n      setPrivateChecked(event.target.checked);\n    }\n    if (onChange) {\n      onChange(event);\n    }\n  };\n\n  const comp = (\n    <Box css={[styles.componentWrapper, !children && stylesProp]} {...(!children ? rest : {})}>\n      &#8203;\n      <Box as=\"span\" css={styles.inputWrapper}>\n        <input\n          ref={ref}\n          type=\"radio\"\n          id={id}\n          name={name}\n          value={value}\n          onChange={internalChange}\n          onBlur={onBlur}\n          onFocus={onFocus}\n          checked={internalChecked}\n          disabled={disabled}\n          readOnly={readOnly}\n          aria-label={ariaLabel}\n          aria-labelledby={ariaLabelledBy}\n          aria-invalid={invalid}\n          aria-checked={internalChecked}\n          css={styles.input}\n          {...focusProps}\n        />\n      </Box>\n    </Box>\n  );\n\n  if (!children) {\n    return comp;\n  }\n\n  return (\n    <Box css={[styles.container, stylesProp]} {...rest}>\n      {comp}\n\n      <Label htmlFor={id} css={styles.label} className={labelClassName}>\n        {children}\n      </Label>\n    </Box>\n  );\n});\n\nif (__DEV__) {\n  Radio.displayName = 'Radio';\n}\n\nexport default Radio;\nexport type { RadioProps };\n","import { mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nimport { useFontSize, UseInputStyleProps, useInputStyles } from '../hooks';\nimport { RadioProps } from './types';\n\nexport default function useRadioStyles(props: RadioProps) {\n  const { invalid = false, fontSize } = props;\n  const sizeStyles = useFontSize({ size: fontSize });\n\n  const { styles: inputStyles, focusRingStyles, focusProps } = useInputStyles({\n    type: 'radio',\n    ...props,\n  } as UseInputStyleProps);\n\n  const styles = {\n    container: [tw`flex items-center`],\n    label: [tw`ml-2`, sizeStyles],\n    componentWrapper: [tw`inline-flex items-center`],\n    inputWrapper: [tw`relative flex`, focusRingStyles],\n    input: [[tw`form-radio`, inputStyles]],\n  };\n\n  if (invalid) {\n    styles.label.push(tw`text-red-500`);\n  }\n\n  return { styles: mapStyles(styles), focusProps };\n}\n","import { useId } from '@react-aria/utils';\nimport { cleanChildren, getStylesObject } from '@sajari/react-sdk-utils';\nimport React, { cloneElement, forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport tw from 'twin.macro';\n\nimport Box from '../Box';\nimport Text from '../Text';\nimport useRadioGroupStyles from './styles';\nimport { RadioGroupProps } from './types';\n\nconst RadioGroup = forwardRef((props: RadioGroupProps, ref) => {\n  const {\n    onChange,\n    name,\n    label = name,\n    defaultValue,\n    value: valueProp,\n    inline,\n    children,\n    styles: stylesProp,\n    disableDefaultStyles = false,\n    'aria-labelledby': ariaLabelledBy,\n    ...rest\n  } = props;\n  const { current: controlled } = useRef(typeof valueProp !== 'undefined');\n  const [value, setValue] = useState(defaultValue || null);\n  const internalValue = controlled ? valueProp : value;\n  const rootRef = useRef<HTMLDivElement | null>(null);\n  const styles = getStylesObject(useRadioGroupStyles(props), disableDefaultStyles);\n\n  const internalOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (!controlled) {\n      setValue(event.target.value);\n    }\n    if (onChange) {\n      onChange(event, event.target.value);\n    }\n  };\n\n  // If no name is passed, we'll generate a random, unique name\n  const fallbackName = `radio-${useId()}`;\n  const internalName = name || fallbackName;\n  const validChildren = cleanChildren(children);\n\n  const clones = validChildren.map((child, index) => {\n    const checked = child.props.value === internalValue;\n\n    // TODO: Handle if the child isn't a Radio since this assumes it will be\n    return cloneElement(child, {\n      key: `${internalName}-${index}`,\n      name: internalName,\n      onChange: internalOnChange,\n      checked,\n      disableDefaultStyles,\n    });\n  });\n\n  const labelId = label ? `group-label-${useId()}` : undefined;\n\n  // Calling focus() on the radiogroup should focus on the selected option or first enabled option\n  useImperativeHandle(\n    ref,\n    () => ({\n      focus: () => {\n        let input = rootRef?.current?.querySelector<HTMLDivElement>('input:not(:disabled):checked');\n\n        if (!input) {\n          input = rootRef?.current?.querySelector('input:not(:disabled)');\n        }\n\n        if (input) {\n          input.focus();\n        }\n      },\n    }),\n    [],\n  );\n\n  return (\n    <Box\n      {...rest}\n      ref={rootRef}\n      role=\"radiogroup\"\n      aria-labelledby={ariaLabelledBy ?? labelId}\n      css={[styles.container, stylesProp]}\n    >\n      {label && !ariaLabelledBy && (\n        <Text id={labelId} css={tw`sr-only`}>\n          {label}\n        </Text>\n      )}\n\n      {clones}\n    </Box>\n  );\n});\n\nRadioGroup.displayName = 'RadioGroup';\n\nexport default RadioGroup;\nexport type { RadioGroupProps };\n","import { mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nimport { useSpacing } from '../hooks';\nimport { RadioGroupProps } from './types';\n\nexport default function useRadioGroupStyles(props: RadioGroupProps) {\n  const { inline = false, spacing = inline ? '4' : '1' } = props;\n  const spacingStyles = useSpacing({ spacing, inline });\n  const styles = {\n    container: [tw`flex`, inline ? tw`flex-row` : tw`flex-col`, spacingStyles],\n  };\n\n  return mapStyles(styles);\n}\n","import { getStylesObject } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\n\nimport Box from '../../../Box';\nimport useFillStyles from './styles';\nimport { FillProps } from './types';\n\nconst Fill = React.forwardRef((props: FillProps, ref?: React.Ref<HTMLDivElement>) => {\n  const { index, disableDefaultStyles = false, styles: stylesProp, ...rest } = props;\n  const styles = getStylesObject(useFillStyles(props), disableDefaultStyles);\n\n  return <Box css={[styles.container, stylesProp]} ref={ref} {...rest} />;\n});\n\nexport default Fill;\n","import { mapStyles, useTheme } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nimport { FillProps } from './types';\n\nexport default function useFillStyles(props: FillProps) {\n  const { index, isSingleHandle } = props;\n  const theme = useTheme();\n\n  const styles = {\n    container: [\n      [\n        tw`h-full rounded-full cursor-pointer`,\n        {\n          backgroundColor:\n            (index === 1 && !isSingleHandle) || (index === 0 && isSingleHandle)\n              ? theme.color.primary.base\n              : 'rgb(218, 223, 231)',\n        },\n      ],\n    ],\n  };\n\n  return mapStyles(styles);\n}\n","import { getStylesObject } from '@sajari/react-sdk-utils';\nimport classnames from 'classnames';\nimport * as React from 'react';\n\nimport Box from '../../../Box';\nimport useHandleStyles from './styles';\nimport { HandleProps } from './types';\n\nconst Handle = React.forwardRef((props: HandleProps, ref?: React.Ref<HTMLButtonElement>) => {\n  const { active, styles: stylesProp, disableDefaultStyles = false, className, activeClassName = '', ...rest } = props;\n  const { focusProps, styles: fillStyles } = useHandleStyles(props);\n  const styles = getStylesObject(fillStyles, disableDefaultStyles);\n\n  return (\n    <Box\n      as=\"button\"\n      type=\"button\"\n      css={[styles.container, stylesProp]}\n      ref={ref}\n      {...focusProps}\n      className={classnames(className, { [activeClassName]: active })}\n      {...rest}\n    />\n  );\n});\n\nexport default Handle;\n","import { mapStyles } from '@sajari/react-sdk-utils';\nimport Color from 'color';\nimport tw, { theme as twTheme } from 'twin.macro';\n\nimport { useFocusRingStyles } from '../../../hooks';\nimport { HandleProps } from './types';\n\nexport default function useHandleStyles(props: HandleProps) {\n  const { active } = props;\n  const { focusRingStyles, focusProps } = useFocusRingStyles({ rounded: 'full' });\n  const colorShadow = new Color(twTheme`colors.gray.900`);\n\n  const styles = {\n    container: [\n      tw`w-4 h-4 transition duration-200 bg-white border-none rounded-full outline-none appearance-none cursor-pointer font-inherit leading-inherit before:(absolute transform -translate-x-1/2 text-xs px-1 rounded mb-1 bg-gray-900 bg-opacity-75 text-white text-center transition-opacity duration-200)`,\n      {\n        boxShadow: `inset 0 0 0 1px ${colorShadow.alpha(0.15).hsl()},\n            inset 0 -1px 0 ${colorShadow.alpha(0.15).hsl()},\n            0 1px 1px ${colorShadow.alpha(0.1).hsl()}`,\n      },\n      `&::before {\n        content: attr(data-value);\n        bottom: 100%;\n        left: 50%;\n        opacity: ${active ? 1 : 0};\n      }\n      &:hover::before,\n      &:focus::before {\n        opacity: 1;\n      }`,\n      { touchAction: 'pan-x' },\n      focusRingStyles,\n    ],\n  };\n\n  return { styles: mapStyles(styles), focusProps };\n}\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport { useTextField } from '@react-aria/textfield';\nimport { mergeProps } from '@react-aria/utils';\nimport { getStylesObject } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\nimport tw from 'twin.macro';\n\nimport Box from '../../../Box';\nimport { RangeValue } from '../../types';\nimport useRangeInputStyles from './styles';\nimport { RangeInputInputProps } from './types';\n\nfunction Input<T extends RangeValue>(props: RangeInputInputProps<T>) {\n  const { label, min, max, step, disableDefaultStyles = false, styles: stylesProp, className } = props;\n  const ref = React.useRef<HTMLInputElement>(null);\n  const { inputProps, labelProps } = useTextField(props, ref);\n  const { styles: inputStyles, focusProps } = useRangeInputStyles(props);\n  const styles = getStylesObject(inputStyles, disableDefaultStyles);\n\n  return (\n    <Box css={[styles.container, stylesProp]} className={className}>\n      <Box as=\"label\" css={tw`sr-only`} {...labelProps}>\n        {label}\n      </Box>\n      <input css={styles.input} {...mergeProps(inputProps, focusProps)} min={min} max={max} step={step} ref={ref} />\n    </Box>\n  );\n}\n\nexport default Input;\n","import { mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nimport { UseInputStyleProps, useInputStyles } from '../../../hooks';\nimport { RangeInputInputProps } from './types';\n\ntype UseRangeInputStylesParams<T> = RangeInputInputProps<T>;\n\nexport default function useRangeInputStyles<T>(props: UseRangeInputStylesParams<T>) {\n  const { max, step } = props;\n  const { styles: inputStyles, focusRingStyles, focusProps } = useInputStyles({\n    type: 'text',\n    size: 'sm',\n    ...props,\n  } as UseInputStyleProps);\n\n  const charLength = (max + step).toString().length;\n\n  const styles = {\n    container: [tw`relative`, focusRingStyles],\n    // TODO: Replace the magic numbers with calculated ones\n    input: [tw`form-input`, inputStyles, `width: calc(${charLength * 9}px + 2.5rem)`],\n  };\n\n  return { styles: mapStyles(styles), focusProps };\n}\n","import * as React from 'react';\n\nimport { BoxProps } from '../Box';\n\nexport interface RatingProps extends BoxProps {\n  /** The rating value, accepts decimal to represent half rating */\n  value: number;\n  /** Maxium level, used to fill in the empty stars */\n  max: number;\n  /** Associated text */\n  children?: React.ReactNode;\n  /** The icon to show, defaults to star icon */\n  character?: React.ReactNode | React.FC<RatingItemProps>;\n  /** Direction */\n  direction?: 'ltr' | 'rtl';\n  /** Unit, used for labeling, default to \"stars\" */\n  unit?: string;\n  ratingItemClassName?: string;\n  activeRatingItemClassName?: string;\n  activeHalfRatingItemClassName?: string;\n}\n\nexport interface InternalRatingItemProps extends BoxProps {\n  /** Index */\n  index: number;\n  /** Total count */\n  count: number;\n  /** The icon to show, defaults to star icon */\n  character: RatingProps['character'];\n  /** Is half */\n  half?: boolean;\n  /** Is the current item active */\n  active: boolean;\n  /** Flip the half side around */\n  flipped?: boolean;\n}\n\nexport interface RatingItemProps {\n  /** Its self pos */\n  index: number;\n  /** Total count */\n  count: number;\n}\n\nexport enum ItemType {\n  Filled = 1,\n  HalfFilled,\n  Empty,\n}\n\nexport class RatingMaxmiumExceededError extends Error {}\n","import { getStylesObject } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\n\nimport Box, { BoxProps } from '../../../Box';\nimport useTrackStyles from './styles';\n\nconst Track = React.forwardRef((props: BoxProps, ref?: React.Ref<HTMLDivElement>) => {\n  const { disableDefaultStyles = false, styles: stylesProps, ...rest } = props;\n  const styles = getStylesObject(useTrackStyles(), disableDefaultStyles);\n\n  return <Box css={[styles.container, stylesProps]} ref={ref} {...rest} />;\n});\n\nexport default Track;\n","import { mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nexport default function useTrackStyles() {\n  const styles = {\n    container: [tw`relative flex-1 h-1`, 'touch-action: none;'],\n  };\n\n  return mapStyles(styles);\n}\n","import { AriaTextFieldOptions, useTextField } from '@react-aria/textfield';\nimport {\n  __DEV__,\n  clamp,\n  closest,\n  formatNumber,\n  getDecimalPlaces,\n  getStylesObject,\n  isArray,\n  isNullOrUndefined,\n  isString,\n  noop,\n  roundToStep,\n} from '@sajari/react-sdk-utils';\nimport * as React from 'react';\nimport { useRanger } from 'react-ranger';\n\nimport Box from '../Box';\nimport Text from '../Text';\nimport Fill from './components/Fill';\nimport Handle from './components/Handle';\nimport Input from './components/Input';\nimport Track from './components/Track';\nimport useRangeInputStyles from './styles';\nimport { RangeInputProps, RangeInputValue, RangeValue } from './types';\n\nfunction RangeInput<T extends RangeValue>(props: RangeInputProps<T>) {\n  const {\n    language,\n    format = 'default',\n    currency = 'USD',\n    fixedPoint = false,\n    onChange = noop,\n    onInput = noop,\n    min = 0,\n    max = 100,\n    value: valueProp = [min, max],\n    step = 1,\n    steps,\n    leftInput: leftInputFunc,\n    rightInput: rightInputFunc,\n    showInputs = false,\n    tick,\n    fillClassName,\n    handleClassName,\n    handleActiveClassName,\n    trackClassName,\n    inputClassName,\n    styles: stylesProp,\n    disableDefaultStyles = false,\n    ...rest\n  } = props;\n\n  const leftRef = React.useRef<HTMLInputElement>(null);\n  const rightRef = React.useRef<HTMLInputElement>(null);\n  const trackRef = React.useRef<HTMLDivElement>(null);\n\n  // Format a value to be presented in the UI as a label\n  const formatLabel = (input: number) => {\n    if (format === 'price') {\n      const formatted = formatNumber(input, { style: 'currency', currency });\n      return fixedPoint ? formatted : formatted.replace('.00', '');\n    }\n\n    return fixedPoint ? Number(input).toFixed(getDecimalPlaces(step)) : input.toLocaleString(language);\n  };\n\n  // Format a value for the input\n  const formatInputValue = (input: string) => {\n    return fixedPoint ? Number(input).toFixed(getDecimalPlaces(step)) : input;\n  };\n\n  // Map RangeValue to the closest step and clamp values\n  const mapRange = (value: RangeValue): RangeValue => {\n    return isArray(value)\n      ? (value.map((v) => roundToStep(clamp(Number(v), min, max), step)) as RangeValue)\n      : roundToStep(clamp(Number(value), min, max), step);\n  };\n\n  // Map RangeValue to RangeInputValue\n  const mapRangeInput = (value: RangeValue): RangeInputValue => {\n    return (isArray(value) ? value : [value]).map(String).map(formatInputValue) as RangeInputValue;\n  };\n\n  const { ticks: ticksProp = !tick ? [min, max] : undefined } = props;\n  const [inputValues, setInputValues] = React.useState<RangeInputValue>(mapRangeInput(valueProp));\n  const [range, setRange] = React.useState<RangeValue>(mapRange(valueProp));\n  const values = React.useMemo(() => mapRange(range), [range]);\n  const [low, high] = isArray(values) ? values : [values];\n\n  // Map and set a range\n  const mapSetRange = (newValue: RangeValue, fireOnChange = false) => {\n    const newRange = mapRange(newValue);\n\n    setRange(newRange);\n\n    onInput(newRange as T);\n\n    if (fireOnChange) {\n      onChange(newRange as T);\n    }\n  };\n\n  // Set internal values when prop changes\n  React.useEffect(() => setRange(mapRange(valueProp)), [valueProp]);\n\n  // Set input values when the range changes\n  React.useEffect(() => setInputValues(mapRangeInput(range)), [range]);\n\n  const { getTrackProps, handles, ticks, segments } = useRanger({\n    stepSize: step,\n    steps,\n    min,\n    max,\n    values: isArray(values) ? values : [values],\n    tickSize: tick,\n    ticks: ticksProp,\n    onDrag: (val: number[]) => mapSetRange(val.length === 1 ? val[0] : (val as RangeValue)),\n    onChange: (val: number[]) => mapSetRange(val.length === 1 ? val[0] : (val as RangeValue), true),\n  });\n\n  const handleRangeInputChange = (left: boolean, v: string | number) => {\n    const val = isString(v) ? Number(v) : v;\n    let newValue: Array<number>;\n\n    if (isNullOrUndefined(high)) {\n      newValue = [val < min ? min : val];\n    } else if (left) {\n      newValue = [val < min ? min : val, high];\n    } else {\n      newValue = [low, val > max ? max : val];\n    }\n\n    mapSetRange(newValue as RangeValue, true);\n  };\n\n  const handleSwitchRange = () => {\n    if (isNullOrUndefined(high)) {\n      return;\n    }\n\n    if (low > high) {\n      mapSetRange([high, low], true);\n    }\n  };\n\n  const handleSegmentClick = (event: React.MouseEvent<HTMLDivElement>, i: number) => {\n    if (trackRef?.current === null) {\n      return;\n    }\n\n    // Calculate percentage\n    const clientRect = trackRef.current.getBoundingClientRect();\n    const percent = clamp((100 / clientRect.width) * (event.clientX - clientRect.left), 0, 100);\n    const newValue = roundToStep((max - min) * (percent / 100), step);\n\n    if (i === 1 && !isNullOrUndefined(high)) {\n      // Determine closest handle if clicking in center section\n      const [index] = closest(newValue, [low, high]);\n      handleRangeInputChange(index === 0, newValue);\n    } else {\n      handleRangeInputChange(i === 0, newValue);\n    }\n  };\n\n  const handleInputChange = (left: boolean) => (value: string) => {\n    const [l, r] = inputValues;\n\n    if (left && !isNullOrUndefined(r)) {\n      setInputValues([value, r]);\n    } else if (!isNullOrUndefined(r)) {\n      setInputValues([l, value]);\n    } else {\n      setInputValues([value]);\n    }\n  };\n\n  const handleInputKeyDown = (left: boolean) => (event: React.KeyboardEvent<HTMLInputElement>) => {\n    const target = event.target as HTMLInputElement;\n\n    if (event.key === 'Enter') {\n      handleRangeInputChange(left, target.value);\n    }\n  };\n\n  const inputProps = {\n    min,\n    max,\n    step,\n    type: 'number',\n    inputMode: 'numeric' as AriaTextFieldOptions['inputMode'],\n    disableDefaultStyles,\n    onBlur: handleSwitchRange,\n  };\n\n  const leftInputProps = {\n    ...inputProps,\n    className: inputClassName,\n    value: inputValues[0],\n    onChange: handleInputChange(true),\n    onKeyDown: handleInputKeyDown(true),\n    label: 'Range input left bound',\n  };\n\n  const rightInputProps = {\n    ...inputProps,\n    className: inputClassName,\n    value: inputValues[1],\n    onChange: handleInputChange(false),\n    onKeyDown: handleInputKeyDown(false),\n    label: 'Range input right bound',\n  };\n\n  const leftInput = leftInputFunc ? (\n    leftInputFunc({\n      getProps: (override = {}) => ({\n        ...useTextField({ ...leftInputProps, ...override }, leftRef),\n        ref: leftRef,\n      }),\n    })\n  ) : (\n    <Input {...leftInputProps} />\n  );\n\n  let rightInput: React.ReactNode | null = <Input {...rightInputProps} />;\n\n  if (isNullOrUndefined(high)) {\n    rightInput = null;\n  } else if (rightInputFunc) {\n    rightInput = rightInputFunc({\n      getProps: (override = {}) => ({\n        ...useTextField({ ...rightInputProps, ...override }, rightRef),\n        ref: rightRef,\n      }),\n    });\n  }\n\n  const styles = getStylesObject(\n    useRangeInputStyles({ isSingleHandle: isNullOrUndefined(high) }),\n    disableDefaultStyles,\n  );\n\n  return (\n    <Box css={[styles.container, stylesProp]} {...rest}>\n      <Box css={styles.wrapper}>\n        <Box css={styles.ticks}>\n          {ticks.map(({ value: tickValue, getTickProps }) => {\n            // Remove width from the styles to prevent needing !important in our styles\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const { style, ...tickProps } = getTickProps();\n            const { width, ...tickStyles } = style as React.CSSProperties;\n\n            return (\n              <Text\n                {...tickProps}\n                style={{ ...tickStyles }}\n                css={styles.tickItem}\n                disableDefaultStyles={disableDefaultStyles}\n              >\n                {formatLabel(tickValue)}\n              </Text>\n            );\n          })}\n        </Box>\n\n        <Track\n          {...getTrackProps({ ref: trackRef })}\n          className={trackClassName}\n          disableDefaultStyles={disableDefaultStyles}\n        >\n          {segments.map(({ getSegmentProps }, i: number) => (\n            <Fill\n              isSingleHandle={isNullOrUndefined(high)}\n              disableDefaultStyles={disableDefaultStyles}\n              className={fillClassName}\n              {...getSegmentProps({\n                index: i,\n                onClick: (e: React.MouseEvent<HTMLDivElement>) => handleSegmentClick(e, i),\n              })}\n            />\n          ))}\n\n          {handles.map(({ value: handleValue, active, getHandleProps }) => (\n            <Handle\n              data-value={formatLabel(handleValue)}\n              activeClassName={handleActiveClassName}\n              className={handleClassName}\n              disableDefaultStyles={disableDefaultStyles}\n              {...getHandleProps({ active })}\n            />\n          ))}\n        </Track>\n      </Box>\n\n      {showInputs && (\n        <Box css={styles.input}>\n          {leftInput}\n          {rightInput}\n        </Box>\n      )}\n    </Box>\n  );\n}\n\nif (__DEV__) {\n  RangeInput.displayName = 'RangeInput';\n}\n\nexport default RangeInput;\nexport type { RangeInputProps };\n","import { mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\ninterface UseRangeInputStylesParams {\n  isSingleHandle?: boolean;\n}\n\nexport default function useRangeInputStyles(props: UseRangeInputStylesParams) {\n  const { isSingleHandle } = props;\n  const styles = {\n    container: [tw`flex flex-col px-2`],\n    wrapper: [tw`w-full mt-8 mb-3`],\n    ticks: [tw`relative`],\n    tickItem: [\n      tw`mb-2.5 text-xs text-center text-gray-400 after:(content w-0 border-0 border-r border-gray-300 border-solid h-1.5 absolute)`,\n      { bottom: '100%' },\n      '&::after { left: 50%; top: 100% }',\n    ],\n    input: [tw`flex flex-col items-center sm:flex-row`, isSingleHandle ? tw`justify-end` : tw`justify-between`],\n  };\n\n  return mapStyles(styles);\n}\n","import { getStylesObject } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\n\nimport Box from '../../../Box';\nimport { InternalRatingItemProps } from '../../types';\nimport useRatingItemStyles from './styles';\n\nexport const RatingItem = (props: InternalRatingItemProps) => {\n  const { character, active, count, index, styles: stylesProp, disableDefaultStyles = false, ...rest } = props;\n  const characterNode = typeof character === 'function' ? character({ count, index }) : character;\n  const styles = getStylesObject(useRatingItemStyles(props), disableDefaultStyles);\n\n  return (\n    <Box css={[styles.container, stylesProp]} aria-hidden {...rest}>\n      <Box aria-setsize={count} aria-posinset={index + 1}>\n        <Box css={styles.firstHalf}>{characterNode}</Box>\n        <Box css={styles.secondHalf}>{characterNode}</Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport type { InternalRatingItemProps };\n","import { mapStyles } from '@sajari/react-sdk-utils';\nimport tw, { theme } from 'twin.macro';\n\nimport { InternalRatingItemProps } from '../../types';\n\nexport default function useRatingItemStyles(props: InternalRatingItemProps) {\n  const { half, flipped, active } = props;\n\n  const styles = {\n    container: [tw`relative inline-block p-0 m-0`, active && !half ? tw`text-orange-400` : tw`text-gray-300`],\n    firstHalf: [\n      tw`absolute top-0 w-1/2 h-full overflow-hidden select-none`,\n      '& > * { flex-shrink: 0; }',\n      flipped ? tw`right-0 flex flex-row-reverse` : tw`left-0 flex flex-row`,\n      half ? theme`colors.orange.400` : 'inherit',\n    ],\n    secondHalf: [tw`flex`, 'color: inherit;'],\n  };\n\n  return mapStyles(styles);\n}\n","/* eslint-disable react/no-array-index-key */\nimport { __DEV__, getStylesObject } from '@sajari/react-sdk-utils';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport tw from 'twin.macro';\n\nimport { IconSmallStar } from '../assets/icons';\nimport Box from '../Box';\nimport { toRatingArray } from '../utils/rating';\nimport { RatingItem } from './components/RatingItem';\nimport { ItemType, RatingItemProps, RatingProps } from './types';\n\nconst Rating = React.forwardRef((props: RatingProps, ref: React.Ref<HTMLDivElement>) => {\n  const {\n    value,\n    children,\n    character = <IconSmallStar />,\n    max = 5,\n    direction = 'ltr',\n    unit = 'star',\n    activeHalfRatingItemClassName,\n    activeRatingItemClassName,\n    ratingItemClassName,\n    styles: stylesProp,\n    disableDefaultStyles = false,\n    ...rest\n  } = props;\n\n  if (Number.isNaN(value)) {\n    return null;\n  }\n\n  const isHalf = Math.round(value) - value !== 0;\n  const flipped = direction === 'rtl';\n  const label = isHalf ? `Rating: ${value} point 5 out of ${max} ${unit}s` : `Rating: ${value} out of ${max} ${unit}s`;\n  const arr = toRatingArray(value, max);\n\n  const styles = getStylesObject(\n    {\n      container: flipped\n        ? tw`inline-flex flex-row-reverse items-center space-x-1 space-x-reverse`\n        : tw`inline-flex items-center space-x-1`,\n    },\n    disableDefaultStyles,\n  );\n\n  return (\n    <Box ref={ref} role=\"img\" aria-label={label} css={[styles.container, stylesProp]} {...rest}>\n      {arr.map((type, i) => {\n        switch (type) {\n          case ItemType.Filled:\n            return (\n              <RatingItem\n                key={`active-rating-${i}`}\n                index={i}\n                count={max}\n                character={character}\n                className={classnames(ratingItemClassName, activeRatingItemClassName)}\n                disableDefaultStyles={disableDefaultStyles}\n                active\n              />\n            );\n\n          case ItemType.HalfFilled:\n            return (\n              <RatingItem\n                key=\"half-active-rating\"\n                index={Math.ceil(value) - Math.floor(value)}\n                count={max}\n                flipped={flipped}\n                character={character}\n                className={classnames(ratingItemClassName, activeHalfRatingItemClassName)}\n                disableDefaultStyles={disableDefaultStyles}\n                active\n                half\n              />\n            );\n\n          case ItemType.Empty:\n            return (\n              <RatingItem\n                key={`inactive-rating-${i}`}\n                index={i}\n                count={max}\n                character={character}\n                active={false}\n                className={ratingItemClassName}\n                disableDefaultStyles={disableDefaultStyles}\n              />\n            );\n\n          default:\n            return null;\n        }\n      })}\n      <Box as=\"span\" css={tw`sr-only`}>{`${value} ${unit}${value > 1 ? 's' : ''}`}</Box>\n      {children}\n    </Box>\n  );\n});\n\nif (__DEV__) {\n  Rating.displayName = 'Rating';\n}\n\nexport default Rating;\nexport type { RatingItemProps };\n","import { ItemType, RatingMaxmiumExceededError } from '../Rating/types';\n\nexport const toRatingArray: (value: number, max: number) => ItemType[] = (value, max) => {\n  const isHalf = Math.round(value) - value !== 0;\n\n  if (max - value < 0) {\n    throw new RatingMaxmiumExceededError();\n  }\n\n  return [\n    ...Array.from<ItemType.Filled>(Array(Math.floor(value))).fill(ItemType.Filled),\n    ...Array.from<ItemType.HalfFilled>(Array(isHalf ? 1 : 0)).fill(ItemType.HalfFilled),\n    ...Array.from<ItemType.Empty>(Array(max - Math.ceil(value))).fill(ItemType.Empty),\n  ];\n};\n","import { __DEV__, noop } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\n\nimport Box from '../Box';\nimport { useResizeObserver } from '../hooks';\nimport { ResizeObserverProps } from './types';\n\nconst ResizeObserver = (props: ResizeObserverProps) => {\n  const { onResize = noop, children, ...rest } = props;\n  const { ref } = useResizeObserver({ onResize });\n\n  return (\n    <Box ref={ref} {...rest}>\n      {children}\n    </Box>\n  );\n};\n\nif (__DEV__) {\n  ResizeObserver.displayName = 'ResizeObserver';\n}\n\nexport default ResizeObserver;\nexport type { ResizeObserverProps };\n","import { createContext } from '@sajari/react-sdk-utils';\nimport { PropGetters } from 'downshift';\n\nimport { Item, SelectCustomClassNames, SelectProps } from './types';\n\ninterface SelectContextProps\n  extends Required<\n    Pick<SelectProps, 'disabled' | 'disableDefaultStyles' | 'id' | 'invalid' | 'multiple' | 'size' | 'autofocus'>\n  > {\n  text: SelectProps['text'];\n  open: boolean;\n  items: Array<Item>;\n  highlightedIndex: number;\n  selectedItems: Array<string>;\n  itemToString: (item: Item) => string;\n  getToggleButtonProps: PropGetters<Item>['getToggleButtonProps'];\n  getMenuProps: PropGetters<Item>['getMenuProps'];\n  getItemProps: PropGetters<Item>['getItemProps'];\n  customClassNames: SelectCustomClassNames;\n}\n\nconst [SelectContextProvider, useSelectContext] = createContext<SelectContextProps>({\n  strict: true,\n  name: 'SelectContext',\n});\n\nexport default SelectContextProvider;\nexport { useSelectContext };\n","import { mergeProps } from '@react-aria/utils';\nimport { getStylesObject } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\n\nimport Box from '../../../Box';\nimport { useSelectContext } from '../../context';\nimport { useButtonStyles } from './styles';\n\nconst Button = () => {\n  const {\n    disabled,\n    getToggleButtonProps,\n    id,\n    invalid,\n    items,\n    selectedItems,\n    autofocus,\n    size,\n    text,\n    disableDefaultStyles,\n    customClassNames,\n  } = useSelectContext();\n  const { styles: buttonStyles, focusRingProps, focusRingStyles } = useButtonStyles({ size, disabled, invalid });\n  const styles = getStylesObject(buttonStyles, disableDefaultStyles);\n  const ref = React.useRef<HTMLButtonElement>(null);\n\n  React.useEffect(() => {\n    if (autofocus && ref?.current) {\n      ref.current.focus();\n    }\n  }, []);\n\n  const children: React.ReactNode = React.useMemo(() => {\n    if (typeof text === 'function') {\n      const selected = items\n        .filter(({ value: v }) => selectedItems.includes(v.toString()))\n        .map(({ children: label }) => label);\n      return text(selected);\n    }\n\n    if (typeof text !== 'undefined') {\n      return text;\n    }\n\n    if (selectedItems.length === 1) {\n      const [selectedItem] = selectedItems;\n      const selected = items.find(({ value: v }) => selectedItem === v.toString());\n\n      if (selected) {\n        return selected.children;\n      }\n    }\n\n    if (selectedItems.length > 1) {\n      return `${selectedItems.length} selected`;\n    }\n\n    return 'Select an option';\n  }, [JSON.stringify(selectedItems), text]);\n\n  return (\n    <Box\n      as=\"button\"\n      type=\"button\"\n      css={[styles.container, focusRingStyles]}\n      className={customClassNames.buttonClassName}\n      {...mergeProps(focusRingProps, getToggleButtonProps({ disabled, ref }), { id })}\n    >\n      {children}\n    </Box>\n  );\n};\n\nexport default Button;\n","import { mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nimport { UseInputStyleProps, useInputStyles } from '../../../hooks';\nimport { SelectProps } from '../../types';\n\nexport type UseButtonStylesParams = Required<Pick<SelectProps, 'size' | 'invalid' | 'disabled'>>;\n\nexport function useButtonStyles(params: UseButtonStylesParams) {\n  const { styles: inputStyles, focusProps: focusRingProps, focusRingStyles } = useInputStyles({\n    type: 'select',\n    ...params,\n  } as UseInputStyleProps);\n\n  const styles = { container: [tw`form-select`, inputStyles] };\n\n  return { styles: mapStyles(styles), focusRingProps, focusRingStyles };\n}\n","import { getStylesObject } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\n\nimport { IconSmallCheck } from '../../../assets/icons';\nimport Box from '../../../Box';\nimport { useSelectContext } from '../../context';\nimport { Item } from '../../types';\nimport { useOptionStyles } from './styles';\nimport { OptionProps } from './types';\n\nconst Option = (props: OptionProps) => {\n  const { children, value, disabled, label } = props;\n  const {\n    getItemProps,\n    highlightedIndex,\n    items,\n    size,\n    selectedItems,\n    disableDefaultStyles,\n    customClassNames,\n  } = useSelectContext();\n  const [item, index] = React.useMemo(() => {\n    const i = items.find(({ value: v }) => v === value) as Item;\n    const idx = items.findIndex(({ value: v }) => v === value);\n    return [i, idx];\n  }, [value, JSON.stringify(items)]);\n  const selected = typeof value !== 'undefined' && selectedItems.includes(value.toString());\n  const highlighted = index === highlightedIndex;\n  const { styles: optionStyles } = useOptionStyles({ ...props, highlighted, selected, size });\n  const styles = getStylesObject(optionStyles, disableDefaultStyles);\n\n  return (\n    <Box\n      as=\"li\"\n      key={value}\n      css={styles.option}\n      {...getItemProps({\n        item,\n        index,\n        disabled,\n      })}\n      className={customClassNames.optionClassName}\n    >\n      {selected && <IconSmallCheck />}\n\n      <Box as=\"span\" css={styles.children}>\n        {children}\n      </Box>\n\n      {label && (\n        <Box as=\"span\" css={styles.label}>\n          {label}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default Option;\nexport type { OptionProps };\n","import { mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nimport { useDropdownItemStyles as useCoreDropdownItemStyles, useFontSize } from '../../../hooks';\nimport { SelectProps } from '../../types';\nimport { OptionProps } from './types';\n\ninterface UseOptionStylesParams extends Omit<OptionProps, 'size'> {\n  highlighted: boolean;\n  selected: boolean;\n  size: SelectProps['size'];\n}\n\nexport function useOptionStyles(params: UseOptionStylesParams) {\n  const { size, highlighted, selected, disabled } = params;\n  const fontSizeStyles = useFontSize({ size });\n  const { root, label } = useCoreDropdownItemStyles({ highlighted });\n  const styles = {\n    option: [root, disabled ? tw`text-gray-400 cursor-not-allowed` : null, tw`last:(mb-1)`],\n    children: [tw`flex-1`, selected ? tw`pl-1` : tw`pl-4`, fontSizeStyles],\n    label: [label],\n  };\n\n  return { styles: mapStyles(styles) };\n}\n","import { mergeProps } from '@react-aria/utils';\nimport { getStylesObject } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\n\nimport Box from '../../../Box';\nimport { useSelectContext } from '../../context';\nimport Option from '../Option';\nimport { useDropdownStyles } from './styles';\n\nconst Dropdown = () => {\n  const { items, open, getMenuProps, disableDefaultStyles, customClassNames } = useSelectContext();\n  const { styles: dropdownStyles, focusRingProps } = useDropdownStyles({ shown: open });\n  const styles = getStylesObject(dropdownStyles, disableDefaultStyles);\n  const options = items.map((item) => <Option {...item} key={item.value} />);\n\n  return (\n    <Box\n      as=\"ul\"\n      css={styles.container}\n      {...mergeProps(focusRingProps, getMenuProps())}\n      className={customClassNames.dropdownClassName}\n    >\n      {open && options}\n    </Box>\n  );\n};\n\nexport default Dropdown;\n","import { mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nimport { useDropdownStyles as useCoreDropdownStyles, useFocusRingStyles } from '../../../hooks';\n\ninterface UseDropdownStylesParams {\n  shown: boolean;\n}\n\nexport function useDropdownStyles(params: UseDropdownStylesParams) {\n  const { shown } = params;\n  const { container } = useCoreDropdownStyles({ shown });\n  const { focusProps: focusRingProps, focusRingStyles } = useFocusRingStyles();\n  const styles = {\n    container: [\n      tw`p-1 pb-0 overflow-auto list-none focus:outline-none max-h-80 min-w-max-content`,\n      container,\n      focusRingStyles,\n    ],\n  };\n\n  return { styles: mapStyles(styles), focusRingProps };\n}\n","import { useId } from '@react-aria/utils';\nimport { __DEV__, cleanChildren, getStylesObject, isArray, isString } from '@sajari/react-sdk-utils';\nimport { useSelect, UseSelectState, UseSelectStateChangeOptions } from 'downshift';\nimport * as React from 'react';\n\nimport Box from '../Box';\nimport Label from '../Label';\nimport Button from './components/Button';\nimport Dropdown from './components/Dropdown';\nimport { OptionProps } from './components/Option';\nimport SelectContextProvider from './context';\nimport { useSelectStyles } from './styles';\nimport { Item, SelectProps } from './types';\n\nconst Select = React.forwardRef((props: SelectProps, ref?: React.Ref<HTMLDivElement>) => {\n  const {\n    id = `select-${useId()}`,\n    children,\n    label,\n    name,\n    value,\n    onChange,\n    size = 'md',\n    disabled = false,\n    invalid = false,\n    multiple = false,\n    autofocus = false,\n    text,\n    disableDefaultStyles = false,\n    styles: stylesProp,\n    className,\n    buttonClassName,\n    dropdownClassName,\n    optionClassName,\n  } = props;\n\n  const { styles: selectStyles } = useSelectStyles();\n  const styles = getStylesObject(selectStyles, disableDefaultStyles);\n\n  const stateReducer = (state: UseSelectState<Item>, actionAndChanges: UseSelectStateChangeOptions<Item>) => {\n    const { changes, type } = actionAndChanges;\n\n    switch (type) {\n      case useSelect.stateChangeTypes.MenuKeyDownEnter:\n      case useSelect.stateChangeTypes.MenuKeyDownSpaceButton:\n      case useSelect.stateChangeTypes.ItemClick:\n        return {\n          ...changes,\n          isOpen: multiple, // Keep menu open after selection for multiple\n          highlightedIndex: state.highlightedIndex,\n        };\n\n      default:\n        return changes;\n    }\n  };\n\n  const itemToString = (item: Item): string => item?.value?.toString() ?? '';\n\n  // Build items list from children\n  const items: Array<Item> = React.useMemo(\n    () =>\n      cleanChildren(children).reduce(\n        (out, { props: optionProps }: { props: OptionProps }) => [...out, optionProps],\n        [] as Array<Item>,\n      ),\n    [children],\n  );\n\n  const mapValues = (input?: SelectProps['value']) => {\n    if (typeof input === 'undefined') {\n      return [];\n    }\n\n    // Determine initial values\n    const values = isArray(input) ? input.map(String) : [input.toString()];\n\n    return multiple ? values : values.slice(0, 1);\n  };\n\n  // If no `value` prop is set, get selected props from children\n  const [selectedItems, setSelectedItems] = React.useState<Array<string>>(mapValues(value));\n\n  // Fire onChange and set state\n  const setSelected = (selected: Array<string>) => {\n    setSelectedItems(selected);\n\n    if (onChange) {\n      const [first] = selected;\n      onChange(multiple ? selected : first);\n    }\n  };\n\n  React.useEffect(() => {\n    setSelectedItems(mapValues(value));\n  }, [value]);\n\n  const {\n    isOpen: open,\n    getToggleButtonProps,\n    getLabelProps,\n    getMenuProps,\n    highlightedIndex,\n    getItemProps,\n  } = useSelect<Item>({\n    items,\n    stateReducer,\n    selectedItem: null,\n    initialHighlightedIndex: items.findIndex(({ value: v }) => v.toString() === selectedItems[0]),\n    itemToString,\n    onSelectedItemChange: ({ selectedItem }) => {\n      if (!selectedItem) {\n        return;\n      }\n\n      const selectedValue = itemToString(selectedItem);\n\n      if (!multiple) {\n        setSelected([selectedValue]);\n        return;\n      }\n\n      const index = selectedItems.findIndex((v) => v === selectedValue);\n\n      if (index > 0) {\n        setSelected([...selectedItems.slice(0, index), ...selectedItems.slice(index + 1)]);\n      } else if (index === 0) {\n        setSelected([...selectedItems.slice(1)]);\n      } else {\n        setSelected([...selectedItems, selectedValue]);\n      }\n    },\n  });\n\n  const context = {\n    id,\n    open,\n    items,\n    selectedItems,\n    highlightedIndex,\n    getMenuProps,\n    getItemProps,\n    getToggleButtonProps,\n    itemToString,\n    multiple,\n    disabled,\n    invalid,\n    autofocus,\n    size,\n    text,\n    disableDefaultStyles,\n    customClassNames: {\n      buttonClassName,\n      dropdownClassName,\n      optionClassName,\n    },\n  };\n\n  // Render hidden inputs for form submissions if name is set\n  const renderInputs = isString(name) && !disabled;\n\n  return (\n    <SelectContextProvider value={context}>\n      <Box css={[styles.container, stylesProp]} ref={ref} className={className}>\n        {label && (\n          <Label visuallyHidden {...getLabelProps()}>\n            {label}\n          </Label>\n        )}\n\n        <Button />\n\n        <Dropdown />\n\n        {renderInputs &&\n          selectedItems.map((v) => <Box as=\"input\" type=\"hidden\" name={name} value={v} key={`${name}-${v}`} />)}\n      </Box>\n    </SelectContextProvider>\n  );\n});\n\nif (__DEV__) {\n  Select.displayName = 'Select';\n}\n\nexport default Select;\nexport { default as Option } from './components/Option';\nexport * from './components/Option';\nexport type { SelectProps };\n","import { mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nexport function useSelectStyles() {\n  const styles = {\n    container: [tw`relative`],\n  };\n\n  return { styles: mapStyles(styles) };\n}\n","/* eslint-disable jsx-a11y/anchor-has-content */\nimport { __DEV__ } from '@sajari/react-sdk-utils';\n\nimport { IconSpinner } from '../assets/icons';\nimport { SpinnerProps } from './types';\n\nconst Spinner = ({ styles, disableDefaultStyles, ...props }: SpinnerProps) => <IconSpinner css={styles} {...props} />;\n\nif (__DEV__) {\n  Spinner.displayName = 'Spinner';\n}\n\nexport default Spinner;\nexport type { SpinnerProps };\n","import { SSRProvider, SSRProviderProps as CoreSSProviderProps } from '@react-aria/ssr';\nimport * as React from 'react';\n\ntype SSRProviderProps = CoreSSProviderProps;\n\nexport default (props: SSRProviderProps) => <SSRProvider {...props} />;\n\nexport type { SSRProviderProps };\n","import { theme } from 'twin.macro';\n\nimport { ColorProps } from './types';\n\nexport const colors: ColorProps[] = [\n  {\n    id: 'White',\n    bg: theme`colors.white`,\n  },\n  {\n    id: 'Silver',\n    bg: theme`colors.gray.300`,\n  },\n  {\n    id: 'Black',\n    bg: theme`colors.black`,\n  },\n  {\n    id: 'Pink',\n    bg: theme`colors.pink.400`,\n  },\n  {\n    id: 'Magenta',\n    bg: theme`colors.pink.600`,\n  },\n  {\n    id: 'Red',\n    bg: theme`colors.red.500`,\n  },\n  {\n    id: 'Beige',\n    bg: theme`colors.orange.200`,\n  },\n  {\n    id: 'Orange',\n    bg: theme`colors.orange.400`,\n  },\n  {\n    id: 'Brown',\n    bg: theme`colors.orange.700`,\n  },\n  {\n    id: 'Yellow',\n    bg: theme`colors.yellow.300`,\n  },\n  {\n    id: 'Green',\n    bg: theme`colors.green.400`,\n  },\n  {\n    id: 'Azure',\n    bg: theme`colors.teal.100`,\n  },\n  {\n    id: 'Aqua',\n    bg: theme`colors.teal.300`,\n  },\n  {\n    id: 'Teal',\n    bg: theme`colors.teal.400`,\n  },\n  {\n    id: 'Turquoise',\n    bg: theme`colors.teal.500`,\n  },\n  {\n    id: 'Blue',\n    bg: theme`colors.blue.400`,\n  },\n  {\n    id: 'ElectricBlue',\n    bg: theme`colors.blue.600`,\n  },\n  {\n    id: 'Lilac',\n    bg: theme`colors.purple.300`,\n  },\n  {\n    id: 'Purple',\n    bg: theme`colors.purple.400`,\n  },\n  {\n    id: 'Violet',\n    bg: theme`colors.purple.600`,\n  },\n];\n\nexport const colorKeys = colors.map(({ id }) => id);\n","import { createContext } from '@sajari/react-sdk-utils';\n\ninterface SwatchContextProps {\n  state: string[];\n  setState: (color: string) => void;\n  disableDefaultStyles: boolean;\n}\n\nconst [SwatchContextProvider, useSwatchContext] = createContext<SwatchContextProps>({\n  strict: true,\n  name: 'SwatchContext',\n});\n\nexport default SwatchContextProvider;\nexport { useSwatchContext };\n","/* eslint-disable no-confusing-arrow */\n\nimport { useSwitch } from '@react-aria/switch';\nimport { useToggleState } from '@react-stately/toggle';\nimport { __DEV__, getStylesObject } from '@sajari/react-sdk-utils';\nimport classnames from 'classnames';\nimport ColorClass from 'color';\nimport * as React from 'react';\nimport tw, { styled } from 'twin.macro';\n\nimport { IconCheck } from '../../../assets/icons';\nimport Box from '../../../Box';\nimport { colors } from '../../colors';\nimport { useSwatchContext } from '../../context';\nimport { ColorProps } from '../../types';\nimport useColorStyles from './styles';\n\nconst StyledLabel = styled.label<{\n  textColor: ColorProps['color'];\n  bg: ColorProps['bg'];\n  border: ColorProps['border'];\n}>`\n  color: ${({ textColor }) => textColor};\n  background-color: ${({ bg }) => bg};\n  border-color: ${({ border }) => border};\n`;\n\nconst FunctionalColor = React.memo(\n  ({\n    id,\n    bg,\n    border = new ColorClass(bg).darken(0.1).string(),\n    color = new ColorClass(bg).isLight()\n      ? new ColorClass(bg).lightness(25).string()\n      : new ColorClass(bg).lightness(85).string(),\n    rounded = 'md',\n    className,\n    checkedClassName = '',\n    checked,\n    toggle,\n    disableDefaultStyles = false,\n  }: ColorProps & { checked: boolean; toggle: () => void }) => {\n    const ref = React.useRef<HTMLInputElement>(null);\n    const toggleState = useToggleState();\n    const { inputProps } = useSwitch(\n      {\n        value: String(checked),\n        'aria-label': id,\n        name: id,\n      },\n      toggleState,\n      ref,\n    );\n    // const { focusProps, focusRingStyles } = useFocusRingStyles({ color: border.toString() });\n    const { styles: colorStyles, focusProps } = useColorStyles({ border, checked, rounded });\n    const styles = getStylesObject(colorStyles, disableDefaultStyles);\n\n    return (\n      <StyledLabel\n        bg={bg}\n        border={border}\n        textColor={color}\n        css={styles.container}\n        className={classnames(className, { [checkedClassName]: checked })}\n      >\n        <Box as=\"span\" css={tw`sr-only`}>\n          {id}\n        </Box>\n        <Box\n          as=\"input\"\n          css={tw`sr-only`}\n          {...inputProps}\n          {...focusProps}\n          ref={ref}\n          aria-checked={checked}\n          onClick={toggle}\n        />\n        <IconCheck css={styles.iconCheck} />\n      </StyledLabel>\n    );\n  },\n);\n\nexport const Color = (props: ColorProps) => {\n  const { id } = props;\n  const { state, setState, disableDefaultStyles = false } = useSwatchContext();\n  const checked = React.useMemo(() => state.includes(id), [state, id]);\n  const toggle = React.useCallback(() => setState(id), [setState, id]);\n  return <FunctionalColor {...props} disableDefaultStyles={disableDefaultStyles} toggle={toggle} checked={checked} />;\n};\n\nif (__DEV__) {\n  Color.displayName = 'Swatch.Color';\n}\n\n/** We're doing it manually rather a for loop because this enables code completion */\n\n/** */\nColor.White = (overridingProps: Partial<ColorProps> = {}) => Color.call(null, { ...colors[0], ...overridingProps });\n\nColor.Silver = (overridingProps: Partial<ColorProps> = {}) => Color.call(null, { ...colors[1], ...overridingProps });\n\nColor.Black = (overridingProps: Partial<ColorProps> = {}) => Color.call(null, { ...colors[2], ...overridingProps });\n\nColor.Pink = (overridingProps: Partial<ColorProps> = {}) => Color.call(null, { ...colors[3], ...overridingProps });\n\nColor.Magenta = (overridingProps: Partial<ColorProps> = {}) => Color.call(null, { ...colors[4], ...overridingProps });\n\nColor.Red = (overridingProps: Partial<ColorProps> = {}) => Color.call(null, { ...colors[5], ...overridingProps });\n\nColor.Beige = (overridingProps: Partial<ColorProps> = {}) => Color.call(null, { ...colors[6], ...overridingProps });\n\nColor.Orange = (overridingProps: Partial<ColorProps> = {}) => Color.call(null, { ...colors[7], ...overridingProps });\n\nColor.Brown = (overridingProps: Partial<ColorProps> = {}) => Color.call(null, { ...colors[8], ...overridingProps });\n\nColor.Yellow = (overridingProps: Partial<ColorProps> = {}) => Color.call(null, { ...colors[9], ...overridingProps });\n\nColor.Green = (overridingProps: Partial<ColorProps> = {}) => Color.call(null, { ...colors[10], ...overridingProps });\n\nColor.Azure = (overridingProps: Partial<ColorProps> = {}) => Color.call(null, { ...colors[11], ...overridingProps });\n\nColor.Aqua = (overridingProps: Partial<ColorProps> = {}) => Color.call(null, { ...colors[12], ...overridingProps });\n\nColor.Teal = (overridingProps: Partial<ColorProps> = {}) => Color.call(null, { ...colors[13], ...overridingProps });\n\nColor.Turquoise = (overridingProps: Partial<ColorProps> = {}) =>\n  Color.call(null, { ...colors[14], ...overridingProps });\n\nColor.Blue = (overridingProps: Partial<ColorProps> = {}) => Color.call(null, { ...colors[15], ...overridingProps });\n\nColor.ElectricBlue = (overridingProps: Partial<ColorProps> = {}) =>\n  Color.call(null, { ...colors[16], ...overridingProps });\n\nColor.Lilac = (overridingProps: Partial<ColorProps> = {}) => Color.call(null, { ...colors[17], ...overridingProps });\n\nColor.Purple = (overridingProps: Partial<ColorProps> = {}) => Color.call(null, { ...colors[18], ...overridingProps });\n\nColor.Violet = (overridingProps: Partial<ColorProps> = {}) => Color.call(null, { ...colors[19], ...overridingProps });\n\nexport default Color;\nexport type { ColorProps };\n","import { mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nimport { useBorderRadius, useFocusRingStyles } from '../../../hooks';\nimport { ColorProps } from '../../types';\n\ninterface UseColorStylesParams {\n  checked: boolean;\n  border: ColorProps['border'];\n  rounded: ColorProps['rounded'];\n}\n\nexport default function useColorStyles(props: UseColorStylesParams) {\n  const { checked, border, rounded } = props;\n  const { focusProps, focusRingStyles } = useFocusRingStyles({ color: String(border) });\n  const borderRadiusStyles = useBorderRadius({ rounded });\n\n  const styles = {\n    container: [\n      focusRingStyles,\n      tw`relative flex items-center justify-center mt-2 ml-2 border border-solid cursor-pointer w-7 h-7`,\n      borderRadiusStyles,\n    ],\n    iconCheck: [checked ? tw`opacity-100 fill-current` : tw`opacity-0 fill-current`],\n  };\n\n  return { styles: mapStyles(styles), focusProps };\n}\n","import { css } from '@emotion/core';\nimport tw, { TwStyle } from 'twin.macro';\n\nexport type RoundedSizes = 'sm' | 'md' | 'lg' | 'full' | 'none';\n\nexport interface BorderRadiusParams {\n  rounded?: RoundedSizes;\n}\n\nexport default function useBorderRadius(props: BorderRadiusParams) {\n  const { rounded } = props;\n  const styles: TwStyle[] = [];\n\n  switch (rounded) {\n    case 'none':\n      styles.push(tw`rounded-none`);\n      break;\n    case 'sm':\n      styles.push(tw`rounded-sm`);\n      break;\n    case 'lg':\n      styles.push(tw`rounded-lg`);\n      break;\n    case 'full':\n      styles.push(tw`rounded-full`);\n      break;\n    default:\n    case 'md':\n      styles.push(tw`rounded-md`);\n      break;\n  }\n\n  return css(styles);\n}\n","import { __DEV__, cleanChildren, getStylesObject } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\nimport tw from 'twin.macro';\n\nimport Box from '../Box';\nimport { colorKeys } from './colors';\nimport { Color } from './components/Color';\nimport SwatchContextProvider from './context';\nimport { SwatchProps } from './types';\n\nconst Swatch = ({\n  children,\n  checkedColors = [],\n  onChange = () => {},\n  styles: stylesProp,\n  disableDefaultStyles = false,\n  colorCheckedClassName = '',\n  colorClassName = '',\n  ...rest\n}: SwatchProps) => {\n  const styles = getStylesObject({ container: tw`flex flex-wrap -mt-2 -ml-2` }, disableDefaultStyles);\n  const validChildren = cleanChildren(children);\n  const setState = React.useCallback(\n    (color: string) => {\n      if (checkedColors.includes(color)) {\n        onChange(checkedColors.filter((c) => c !== color));\n      } else {\n        onChange([...checkedColors, color]);\n      }\n    },\n    [JSON.stringify(checkedColors)],\n  );\n\n  return (\n    <SwatchContextProvider value={{ state: checkedColors, setState, disableDefaultStyles }}>\n      <Box css={[styles.container, stylesProp]} {...rest}>\n        {validChildren.map((child) =>\n          React.cloneElement(child, {\n            className: colorClassName,\n            checkedClassName: colorCheckedClassName,\n            ...child.props,\n          }),\n        )}\n      </Box>\n    </SwatchContextProvider>\n  );\n};\n\nif (__DEV__) {\n  Swatch.displayName = 'Swatch';\n}\n\nSwatch.Color = Color;\nSwatch.colorKeys = colorKeys;\nexport default Swatch;\nexport type { SwatchProps };\n","import { createContext } from '@sajari/react-sdk-utils';\n\nimport { TabsContextOptions } from './types';\n\nconst [TabContextProvider, useTabContext] = createContext<TabsContextOptions>({\n  strict: true,\n  name: 'TabsContext',\n});\n\nexport default TabContextProvider;\nexport { useTabContext };\n","import { mergeProps } from '@react-aria/utils';\nimport { __DEV__, getStylesObject } from '@sajari/react-sdk-utils';\nimport classnames from 'classnames';\nimport * as React from 'react';\n\nimport Box from '../../Box';\nimport { useTabContext } from '../context';\nimport useTabStyles from './styles';\nimport { TabProps } from './types';\n\nconst Tab = React.forwardRef((props: TabProps, ref?: React.Ref<HTMLButtonElement>) => {\n  const { selected, disabled, id, className, selectedClassName = '', ...rest } = props;\n  const { disableDefaultStyles = false } = useTabContext();\n  const { styles: containerStyles, focusRingProps } = useTabStyles(props);\n  const styles = getStylesObject({ container: containerStyles }, disableDefaultStyles);\n\n  return (\n    <Box\n      ref={ref}\n      role=\"tab\"\n      as=\"button\"\n      type=\"button\"\n      tabIndex={selected ? 0 : -1}\n      id={`tab-${id}`}\n      disabled={disabled}\n      aria-selected={selected}\n      aria-disabled={disabled}\n      aria-controls={`panel-${id}`}\n      className={classnames(className, { [selectedClassName]: selected })}\n      css={styles.container}\n      {...mergeProps(rest, focusRingProps)}\n    />\n  );\n});\n\nif (__DEV__) {\n  Tab.displayName = 'Tab';\n}\n\nexport default Tab;\nexport type { TabProps };\n","import { css } from '@emotion/core';\nimport { useTheme } from '@sajari/react-sdk-utils';\nimport tw, { TwStyle } from 'twin.macro';\n\nimport { useFocusRingStyles } from '../../hooks';\nimport { useTabContext } from '../context';\nimport { TabProps } from './types';\n\nexport default function useTabStyles(props: TabProps) {\n  const { selected, disabled } = props;\n  const { fitted } = useTabContext();\n  const theme = useTheme();\n  const { focusProps: focusRingProps, focusRingStyles } = useFocusRingStyles({ rounded: 'none' });\n  const styles: (TwStyle | string)[] = [];\n\n  styles.push(\n    tw`relative flex items-center justify-center px-4 py-3 m-0 -mb-px text-base text-gray-500 bg-transparent border-0 border-b-2 border-transparent border-solid font-inherit focus:outline-none`,\n  );\n\n  if (!selected) {\n    styles.push(tw`hover:text-gray-700 focus:text-gray-700`);\n  }\n\n  if (fitted) {\n    styles.push(tw`flex-1`);\n  }\n\n  if (disabled) {\n    styles.push(tw`text-gray-400 cursor-not-allowed`);\n  }\n\n  if (selected) {\n    styles.push(`color: ${theme.color.primary.base}; border-bottom-color: ${theme.color.primary.base};`);\n  }\n\n  return { styles: [css(styles), focusRingStyles], focusRingProps };\n}\n","import { __DEV__, cleanChildren, getStylesObject } from '@sajari/react-sdk-utils';\nimport React, { cloneElement, useRef } from 'react';\n\nimport Box from '../../Box';\nimport { useTabContext } from '../context';\nimport useTabListStyles from './styles';\nimport { TabListProps } from './types';\n\nconst TabList = React.forwardRef((props: TabListProps, ref?: React.Ref<HTMLDivElement>) => {\n  const { children, onKeyDown, onClick, styles: stylesProp, ...rest } = props;\n  const {\n    id,\n    index: selectedIndex,\n    manualIndex,\n    onManualTabChange,\n    manual,\n    onChangeTab,\n    onFocusPanel,\n    disableDefaultStyles = false,\n  } = useTabContext();\n  const styles = getStylesObject(useTabListStyles(), disableDefaultStyles);\n  const allNodes = useRef<(HTMLElement | null)[]>([]);\n  const validChildren = cleanChildren(children);\n\n  const focusableIndexes = validChildren\n    .map((child, index) => (child.props.disabled === true ? null : index))\n    .filter((index) => index != null) as number[];\n\n  const enabledSelectedIndex = focusableIndexes.indexOf(selectedIndex);\n  const count = focusableIndexes.length;\n\n  const updateIndex = (index: number) => {\n    const childIndex = focusableIndexes[index];\n\n    allNodes.current[childIndex]?.focus();\n\n    if (onChangeTab) {\n      onChangeTab(childIndex);\n    }\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent) => {\n    if (event.key === 'ArrowRight') {\n      event.preventDefault();\n      const nextIndex = (enabledSelectedIndex + 1) % count;\n      updateIndex(nextIndex);\n    }\n\n    if (event.key === 'ArrowLeft' || event.key === 'ArrowUp') {\n      event.preventDefault();\n      const nextIndex = (enabledSelectedIndex - 1 + count) % count;\n      updateIndex(nextIndex);\n    }\n\n    if (event.key === 'Home') {\n      event.preventDefault();\n      updateIndex(0);\n    }\n\n    if (event.key === 'End') {\n      event.preventDefault();\n      updateIndex(count - 1);\n    }\n\n    if (event.key === 'ArrowDown') {\n      event.preventDefault();\n\n      if (onFocusPanel) {\n        onFocusPanel();\n      }\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  const clones = validChildren.map((child, index) => {\n    const selected = manual ? index === manualIndex : index === selectedIndex;\n\n    const handleClick = (event: React.MouseEvent) => {\n      // Hack for Safari. Buttons don't receive focus on click on Safari\n      // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Clicking_and_focus\n      allNodes.current[index]?.focus();\n\n      onManualTabChange(index);\n      onChangeTab(index);\n\n      if (child.props.onClick) {\n        child.props.onClick(event);\n      }\n    };\n\n    return cloneElement(child, {\n      ref: (node: HTMLElement | null) => {\n        allNodes.current[index] = node;\n        return node;\n      },\n      selected,\n      onClick: handleClick,\n      id: `${id}-${index}`,\n    });\n  });\n\n  return (\n    <Box css={styles.container}>\n      <Box ref={ref} role=\"tablist\" onKeyDown={handleKeyDown} css={styles.innerContainer} {...rest}>\n        {clones}\n      </Box>\n    </Box>\n  );\n});\n\nif (__DEV__) {\n  TabList.displayName = 'TabList';\n}\n\nexport default TabList;\nexport type { TabListProps };\n","import { mapStyles } from '@sajari/react-sdk-utils';\nimport tw, { theme as twTheme } from 'twin.macro';\n\nimport { useTabContext } from '../context';\n\nexport default function useTabListStyles() {\n  const { align } = useTabContext();\n  const styles = {\n    container: [\n      tw`overflow-auto whitespace-no-wrap`,\n      { boxShadow: `inset 0 -1px 0 ${twTheme`colors.gray.200`.toString()}` },\n    ],\n    innerContainer: [tw`flex border-0 border-b border-gray-200 border-solid`],\n  };\n\n  switch (align) {\n    case 'center':\n      styles.innerContainer.push(tw`justify-center`);\n      break;\n\n    case 'end':\n      styles.innerContainer.push(tw`justify-end`);\n      break;\n\n    default:\n    case 'start':\n      styles.innerContainer.push(tw`justify-start`);\n      break;\n  }\n\n  return mapStyles(styles);\n}\n","import { __DEV__, assignRef } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\n\nimport Box from '../../Box';\nimport { useTabContext } from '../context';\nimport { TabPanelProps } from './types';\n\nconst TabPanel = React.forwardRef((props: TabPanelProps, ref: React.Ref<HTMLDivElement>) => {\n  const { children, selected, selectedPanelRef, id, styles: stylesProp, ...rest } = props;\n  const { alwaysRenderChildren } = useTabContext();\n\n  return (\n    <Box\n      ref={(node: HTMLDivElement) => {\n        if (selected && selectedPanelRef) {\n          assignRef(selectedPanelRef, node);\n        }\n        assignRef(ref, node);\n      }}\n      role=\"tabpanel\"\n      tabIndex={-1}\n      aria-labelledby={`tab:${id}`}\n      hidden={!selected}\n      id={`panel:${id}`}\n      css={stylesProp}\n      {...rest}\n    >\n      {(alwaysRenderChildren || selected) && children}\n    </Box>\n  );\n});\n\nif (__DEV__) {\n  TabPanel.displayName = 'TabPanel';\n}\n\nexport default TabPanel;\nexport type { TabPanelProps };\n","import { __DEV__, cleanChildren } from '@sajari/react-sdk-utils';\nimport React, { cloneElement } from 'react';\n\nimport Box from '../../Box';\nimport { useTabContext } from '../context';\nimport { TabPanelsProps } from './types';\n\nconst TabPanels = React.forwardRef((props: TabPanelsProps, ref?: React.Ref<HTMLDivElement>) => {\n  const { children, styles: stylesProp, ...rest } = props;\n  const { index: selectedIndex, selectedPanelRef, id, manual, manualIndex } = useTabContext();\n  const validChildren = cleanChildren(children);\n\n  const clones = validChildren.map((child, index) =>\n    cloneElement(child, {\n      selected: manual ? index === manualIndex : index === selectedIndex,\n      selectedPanelRef,\n      id: `${id}-${index}`,\n    }),\n  );\n\n  return (\n    <Box tabIndex={-1} ref={ref} css={stylesProp} {...rest}>\n      {clones}\n    </Box>\n  );\n});\n\nif (__DEV__) {\n  TabPanels.displayName = 'TabPanels';\n}\n\nexport default TabPanels;\nexport type { TabPanelsProps };\n","import { useId } from '@react-aria/utils';\nimport React, { useRef, useState } from 'react';\n\nimport Box from '../Box';\nimport TabContextProvider from './context';\nimport { TabsProps } from './types';\n\nconst Tabs = React.forwardRef((props: TabsProps, ref?: React.Ref<HTMLDivElement>) => {\n  const {\n    children,\n    onChange,\n    index: controlledIndex,\n    defaultIndex,\n    manual,\n    align = 'start',\n    fitted,\n    alwaysRenderChildren,\n    disableDefaultStyles,\n    styles: stylesProp,\n    ...rest\n  } = props;\n\n  const { current: controlled } = useRef(typeof controlledIndex !== 'undefined');\n  const selectedPanelRef = useRef<HTMLElement>(null);\n\n  const getInitialIndex = () => {\n    if (!manual) {\n      return defaultIndex || 0;\n    }\n    return controlledIndex || defaultIndex || 0;\n  };\n\n  const [selectedIndex, setSelectedIndex] = useState(getInitialIndex);\n\n  const getActualIdx = () => {\n    if (manual) {\n      return selectedIndex;\n    }\n    return controlled && typeof controlledIndex === 'number' ? controlledIndex : selectedIndex;\n  };\n\n  const [manualIndex, setManualIndex] = useState(controlledIndex || defaultIndex || 0);\n  const actualIdx = getActualIdx();\n  const manualIdx = controlled ? controlledIndex : manualIndex;\n\n  const onChangeTab = (index: number) => {\n    if (!controlled) {\n      setSelectedIndex(index);\n    }\n\n    if (controlled && manual) {\n      setSelectedIndex(index);\n    }\n\n    if (!manual) {\n      if (onChange) {\n        onChange(index);\n      }\n    }\n  };\n\n  const onManualTabChange = (index: number) => {\n    if (!controlled) {\n      setManualIndex(index);\n    }\n\n    if (manual) {\n      if (onChange) {\n        onChange(index);\n      }\n    }\n  };\n\n  const onFocusPanel = () => {\n    if (selectedPanelRef.current) {\n      selectedPanelRef.current.focus();\n    }\n  };\n\n  const id = useId();\n\n  const context = {\n    id,\n    index: actualIdx,\n    manualIndex: manualIdx,\n    onManualTabChange,\n    manual,\n    onChangeTab,\n    selectedPanelRef,\n    onFocusPanel,\n    align,\n    fitted,\n    alwaysRenderChildren,\n    disableDefaultStyles,\n  };\n\n  return (\n    <TabContextProvider value={context}>\n      <Box ref={ref} css={stylesProp} {...rest}>\n        {children}\n      </Box>\n    </TabContextProvider>\n  );\n});\n\nTabs.displayName = 'Tabs';\n\nexport default Tabs;\nexport type { TabsProps };\n\nexport type { TabProps } from './Tab';\nexport { default as Tab } from './Tab';\nexport type { TabListProps } from './TabList';\nexport { default as TabList } from './TabList';\nexport type { TabPanelProps } from './TabPanel';\nexport { default as TabPanel } from './TabPanel';\nexport type { TabPanelsProps } from './TabPanels';\nexport { default as TabPanels } from './TabPanels';\n","import { useId } from '@react-aria/utils';\nimport { cleanChildren, getStylesObject } from '@sajari/react-sdk-utils';\nimport React, { cloneElement, useRef, useState } from 'react';\nimport tw from 'twin.macro';\n\nimport Box from '../Box';\nimport Text from '../Text';\nimport { useCheckboxGroupStyles } from './styles';\nimport { CheckboxGroupProps } from './types';\n\ntype Values = string | number | readonly string[] | undefined;\n\nconst CheckboxGroup = (props: CheckboxGroupProps) => {\n  const {\n    onChange,\n    name,\n    label = name,\n    defaultValue,\n    value: valueProp,\n    children,\n    styles: stylesProp,\n    disableDefaultStyles = false,\n    'aria-labelledby': ariaLabelledBy,\n    ...rest\n  } = props;\n\n  const [values, setValues] = useState(defaultValue || []);\n  const { current: controlled } = useRef(typeof valueProp !== 'undefined');\n  const internalValues = (controlled ? valueProp : values) || [];\n  const styles = getStylesObject(useCheckboxGroupStyles(props), disableDefaultStyles);\n\n  const internalChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { checked, value } = event.target;\n    let newValues: Array<Values>;\n\n    if (checked) {\n      newValues = [...internalValues, value];\n    } else {\n      newValues = internalValues.filter((v) => v !== value);\n    }\n    if (!controlled) {\n      setValues(newValues);\n    }\n    if (onChange) {\n      onChange(newValues);\n    }\n  };\n\n  // If no name is passed, we'll generate a random, unique name\n  const fallbackName = `checkbox-${useId()}`;\n  const internalName = name || fallbackName;\n  const validChildren = cleanChildren(children);\n\n  const clones = validChildren.map((child, index) => {\n    const checked = internalValues.includes(child.props.value);\n\n    // TODO: Handle if the child isn't a Checkbox since this assumes it will be\n    return cloneElement(child, {\n      key: `${internalName}-${index}`,\n      name: `${internalName}-${index}`,\n      onChange: internalChange,\n      checked,\n      disableDefaultStyles,\n    });\n  });\n\n  const labelId = `group-label-${useId()}`;\n\n  return (\n    <Box {...rest} role=\"group\" aria-labelledby={ariaLabelledBy ?? labelId} css={[styles.container, stylesProp]}>\n      {label && !ariaLabelledBy && (\n        <Text id={labelId} css={tw`sr-only`}>\n          {label}\n        </Text>\n      )}\n\n      {clones}\n    </Box>\n  );\n};\n\nexport default CheckboxGroup;\nexport type { CheckboxGroupProps };\n","import { mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nimport { useSpacing } from '../hooks';\nimport { CheckboxGroupProps } from './types';\n\nexport function useCheckboxGroupStyles(props: CheckboxGroupProps) {\n  const { inline, spacing = inline ? '4' : '1' } = props;\n  const spacingStyles = useSpacing({ spacing, inline });\n  const styles = {\n    container: [tw`flex`, inline ? tw`flex-row` : tw`flex-col`, spacingStyles],\n  };\n\n  return mapStyles(styles);\n}\n"],"names":["BoxComponent","props","ref","as","Type","children","rest","_jsx","filterProps","Box","forwardRefWithAs","useAspectRatioStyles","ratio","styles","push","css","Component","child","disableDefaultStyles","stylesProp","Children","only","isValidElement","getStylesObject","container","cloneElement","AspectRatio","useDropdownItemStyles","params","highlighted","theme","useTheme","inferStylesObjectKeys","root","label","color","primary","text","active","mapStyles","useDropdownStyles","shown","heading","items","footer","footerItem","footerItems","footerIcon","footerEscHint","poweredBy","useRingStyles","visible","invalid","rounded","borderRadius","borderColor","base","disabled","toString","Color","useFocusRingStyles","useFocusRing","focusProps","focusRingStyles","isFocusVisible","useFontSize","size","useInputStyles","indeterminate","readOnly","type","undefined","fill","encodeURIComponent","hex","includes","useSpacing","spacing","inline","useVoiceInput","onResult","useState","supported","setSupported","setActive","result","setResult","recognitionRef","useRef","useEffect","isSSR","window","hasOwnProperty","current","SpeechRecognition","webkitSpeechRecognition","start","useCallback","recognition","stop","continuous","interimResults","onresult","event","r","results","transcript","onerror","Button","React","forwardRef","loading","appearance","fullWidth","onClick","className","stylesProps","pressedClassName","focused","setFocused","buttonRef","ownRef","mergeRefs","useButton","isDisabled","elementType","onPress","buttonProps","pressed","isPressed","useHover","hoverProps","hovered","isHovered","useFocus","onFocus","onBlur","isLink","focusRingProps","returnStyles","val","useButtonStyles","containerStyles","customProps","mergeProps","classnames","useButtonGroupStyles","attached","StyledBox","shouldForwardProp","prop","ButtonGroup","clones","cleanChildren","map","__DEV__","displayName","Label","visuallyHidden","sizeStyles","useLabelStyles","Checkbox","id","useId","name","value","defaultChecked","checked","onChange","ariaLabel","ariaLabelledBy","labelClassName","privateChecked","setPrivateChecked","controlled","internalChecked","fontSize","componentWrapper","inputWrapper","indeterminateInner","backgroundColor","input","useCheckboxStyles","comp","_jsxs","target","htmlFor","mapTruncateValue","truncate","isNumber","TextComponent","useTextStyles","Text","Link","PoweredBy","logo","href","LogoSajariColor","LogoSajariMono","createContext","strict","ComboboxContextProvider","useComboboxContext","DropdownItem","index","selected","highlight","typedInputValue","getItemProps","showDropdownTips","onSelect","customClassNames","dropdownItemClassName","dropdownSelectedItemClassName","dropdownHighlightItemClassName","stringItem","itemToString","useCoreDropdownItemStyles","item","iconEnter","_createElement","key","startsWith","React.Fragment","replace","IconEnterKey","HeadingComponent","element","mapElementToSize","options","useHeadingStyles","Heading","useObjectFit","objectFit","isSecondImage","NativeImage","htmlWidth","htmlHeight","alt","width","height","Image","srcProp","src","hoverSrcProp","hoverSrc","onError","onLoad","onMouseEnterExternal","onMouseEnter","onMouseLeaveExternal","onMouseLeave","aspectRatio","containerClassName","provider","hover","setHover","images","imagesParam","isArray","filter","Boolean","i","url","URL","pathname","split","reverse","extension","pathnameWithoutExtension","join","useImageProvider","imageProps","e","hasLoaded","setHasLoaded","image","addEventListener","call","useHasImageLoaded","secondImage","useImageStyles","DropdownResult","resultImageContainerClassName","resultTextContainerClassName","resultClassName","selectedResultClassName","imageContainer","textContainer","onContextMenu","title","description","Dropdown","listRender","mode","inputValue","highlightedIndex","getMenuProps","showPoweredBy","renderItem","dropdownClassName","dropdownListClassName","dropdownFooterClassName","open","length","IconUpKey","IconDownKey","Typeahead","str","prefix","completion","typeaheadClassName","hidden","typeaheadValue","hiddenText","slice","substring","Voice","onVoiceInput","useVoiceStyles","IconMic","IconEmptyMic","Combobox","placeholder","enterKeyHint","onKeyDown","enableVoice","captureVoiceInput","valueProp","itemToUrl","inputClassName","inputContainerClassName","inputElement","setTypedInputValue","voiceSupported","setValue","setContainer","useCombobox","onInputValueChange","changes","stateReducer","state","stateChangeTypes","InputKeyDownArrowDown","selectedItem","InputKeyDownArrowUp","ItemMouseMove","InputKeyDownEscape","isOpen","InputKeyDownEnter","ItemClick","InputChange","getLabelProps","getInputProps","getComboboxProps","setInputValue","closeMenu","context","voiceEnabled","iconContainerStyles","inputContainer","iconContainerLeft","iconContainerRight","iconSpinner","useComboboxStyles","inputProps","dir","autoCapitalize","autoComplete","autoCorrect","spellCheck","inputMode","nativeEvent","preventDownshiftDefault","selectionStart","location","isFunction","onInput","parentElement","InputComponent","createElement","Array","from","attributes","reduce","acc","attr","nodeName","nodeValue","ContainerComponent","style","position","remove","ReactDOM","createPortal","renderInAttachMode","IconSmallSearch","IconSearch","IconSpinner","focusableElSelector","FocusLock","initialFocusRef","finalFocusRef","contentRef","restoreFocus","autoFocus","onActivation","focus","focusables","keyboardOnly","elements","querySelectorAll","focusableEl","getComputedStyle","display","getAttribute","getFocusables","onDeactivation","ReactFocusLock","returnFocus","AriaHidden","refModal","shouldHide","undo","hideOthers","ModalContextProvider","useModalContext","ModalBody","bodyId","padded","useModalBodyStyles","ModalCloseButton","onClose","icon","callAllHandlers","IconClose","ModalFooter","fullWidthSizes","toArray","fullwidth","ModalHeader","modals","ModalTitle","titleId","Portal","animateOverlayIn","keyframes","animateOverlayOut","animateModalIn","animateModalOut","Modal","blockScroll","closeOnEsc","closeOnOverlayClick","role","ariaDescribedby","ariaLabelledby","modalId","onEscKeyDown","trapFocus","returnFocusOnClose","onOverlayClick","onAnimationEnd","modalClassName","modalContainerClassName","overlayClassName","overlayOpenClassName","modalOpenClassName","rootClassName","useInert","refShouldClose","refContainer","animationDuration","modalAnimationIn","modalAnimationOut","overlayAnimationIn","overlayAnimationOut","center","sizeStyle","getModalSize","overlay","overlayInner","content","useModalStyles","document","showPortal","setShowPortal","oldModal","modal","useModalManager","oldRef","disableBodyScroll","enableBodyScroll","useScrollLock","handleKeydown","keyCode","body","contains","removeChild","removeEventListener","appendChild","handleModalEvent","containerModal","onMouseDown","onMouseUp","defaultI18n","previous","next","page","Pagination","useResizeObserver","language","totalResults","resultsPerPage","pageCount","i18nProp","i18n","buttonClassName","activeClassName","nextClassName","prevClassName","spacerEllipsisClassName","statusClassName","scrollTarget","scrollToTop","compact","firstRender","useFirstRender","align","justifyContentStyles","useJustifyContent","spacerStyles","spacerEllipsis","compactStatus","compactStatusCount","usePaginationStyles","smoothscroll","polyfill","scrollOptions","behavior","isString","querySelector","scrollIntoView","scrollTo","top","count","Math","ceil","changeHandler","exitEarly","clamp","hasPrevious","hasNext","rel","IconChevronLeft","toLocaleString","middle","limit","offset","max","_","Number","unshift","lastIndex","number","template","renderButtons","IconChevronRight","Radio","useRadioStyles","RadioGroup","defaultValue","internalValue","rootRef","spacingStyles","useRadioGroupStyles","internalOnChange","fallbackName","internalName","labelId","useImperativeHandle","_rootRef$current","_rootRef$current2","Fill","isSingleHandle","useFillStyles","Handle","colorShadow","boxShadow","alpha","hsl","touchAction","useHandleStyles","Input","min","step","useTextField","labelProps","inputStyles","charLength","useRangeInputStyles","ItemType","Track","RangeInput","format","currency","fixedPoint","noop","steps","leftInputFunc","leftInput","rightInputFunc","rightInput","showInputs","tick","fillClassName","handleClassName","handleActiveClassName","trackClassName","leftRef","rightRef","trackRef","formatLabel","formatted","formatNumber","toFixed","getDecimalPlaces","formatInputValue","mapRange","v","roundToStep","mapRangeInput","String","ticks","ticksProp","inputValues","setInputValues","range","setRange","values","low","high","mapSetRange","newValue","fireOnChange","newRange","useRanger","stepSize","tickSize","onDrag","getTrackProps","handles","segments","handleRangeInputChange","left","isNullOrUndefined","handleInputChange","l","handleInputKeyDown","leftInputProps","rightInputProps","getProps","override","wrapper","tickItem","bottom","tickValue","getTickProps","tickProps","tickStyles","getSegmentProps","clientRect","getBoundingClientRect","percent","clientX","closest","handleSegmentClick","getHandleProps","RatingMaxmiumExceededError","Error","RatingItem","character","characterNode","half","firstHalf","flipped","secondHalf","useRatingItemStyles","Rating","IconSmallStar","direction","unit","activeHalfRatingItemClassName","activeRatingItemClassName","ratingItemClassName","isNaN","isHalf","round","arr","floor","Filled","HalfFilled","Empty","toRatingArray","ResizeObserver","onResize","SelectContextProvider","useSelectContext","getToggleButtonProps","selectedItems","autofocus","find","JSON","stringify","Option","findIndex","fontSizeStyles","option","useOptionStyles","optionClassName","IconSmallCheck","useCoreDropdownStyles","Select","multiple","_item$value","out","mapValues","setSelectedItems","setSelected","useSelect","actionAndChanges","MenuKeyDownEnter","MenuKeyDownSpaceButton","initialHighlightedIndex","onSelectedItemChange","selectedValue","renderInputs","Spinner","colors","bg","colorKeys","SwatchContextProvider","useSwatchContext","StyledLabel","textColor","border","FunctionalColor","ColorClass","darken","string","isLight","lightness","checkedClassName","toggle","toggleState","useToggleState","useSwitch","borderRadiusStyles","useBorderRadius","iconCheck","useColorStyles","IconCheck","setState","White","overridingProps","Silver","Black","Pink","Magenta","Red","Beige","Orange","Brown","Yellow","Green","Azure","Aqua","Teal","Turquoise","Blue","ElectricBlue","Lilac","Purple","Violet","Swatch","checkedColors","colorCheckedClassName","colorClassName","validChildren","c","TabContextProvider","useTabContext","Tab","selectedClassName","fitted","useTabStyles","tabIndex","TabList","selectedIndex","manualIndex","onManualTabChange","manual","onChangeTab","onFocusPanel","innerContainer","useTabListStyles","allNodes","focusableIndexes","enabledSelectedIndex","indexOf","updateIndex","childIndex","node","preventDefault","TabPanel","selectedPanelRef","assignRef","alwaysRenderChildren","TabPanels","Tabs","controlledIndex","defaultIndex","setSelectedIndex","setManualIndex","actualIdx","manualIdx","setValues","internalValues","useCheckboxGroupStyles","internalChange","newValues","SSRProvider"],"mappings":"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"}