{"version":3,"file":"utils.esm.js","sources":["../../src/FocusLock/utils.ts"],"sourcesContent":["const focusableElements = [\n  'a[href]',\n  'area[href]',\n  'button:not([disabled])',\n  'embed',\n  'iframe',\n  'input:not([disabled])',\n  'object',\n  'select:not([disabled])',\n  'textarea:not([disabled])',\n  '*[tabindex]:not([aria-disabled])',\n  '*[contenteditable]',\n];\n\nconst focusableElSelector = focusableElements.join();\n\nexport function getFocusables(element: HTMLElement | null, keyboardOnly = false) {\n  if (element === null) {\n    return [];\n  }\n\n  let elements = Array.from(element.querySelectorAll(focusableElSelector));\n\n  // Filter out elements with display: none\n  elements = elements.filter((focusableEl) => window.getComputedStyle(focusableEl).display !== 'none');\n\n  if (keyboardOnly === true) {\n    elements = elements.filter((focusableEl) => focusableEl.getAttribute('tabindex') !== '-1');\n  }\n\n  return elements;\n}\n"],"names":["focusableElements","focusableElSelector","join","getFocusables","element","keyboardOnly","elements","Array","from","querySelectorAll","filter","focusableEl","window","getComputedStyle","display","getAttribute"],"mappings":"AAAA,IAAMA,iBAAiB,GAAG,CACxB,SADwB,EAExB,YAFwB,EAGxB,wBAHwB,EAIxB,OAJwB,EAKxB,QALwB,EAMxB,uBANwB,EAOxB,QAPwB,EAQxB,wBARwB,EASxB,0BATwB,EAUxB,kCAVwB,EAWxB,oBAXwB,CAA1B;AAcA,IAAMC,mBAAmB,gBAAGD,iBAAiB,CAACE,IAAlB,EAA5B;SAEgBC,cAAcC,SAA6BC;MAAAA;AAAAA,IAAAA,eAAe;;;AACxE,MAAID,OAAO,KAAK,IAAhB,EAAsB;AACpB,WAAO,EAAP;AACD;;AAED,MAAIE,QAAQ,GAAGC,KAAK,CAACC,IAAN,CAAWJ,OAAO,CAACK,gBAAR,CAAyBR,mBAAzB,CAAX,CAAf;AAGAK,EAAAA,QAAQ,GAAGA,QAAQ,CAACI,MAAT,CAAgB,UAACC,WAAD;AAAA,WAAiBC,MAAM,CAACC,gBAAP,CAAwBF,WAAxB,EAAqCG,OAArC,KAAiD,MAAlE;AAAA,GAAhB,CAAX;;AAEA,MAAIT,YAAY,KAAK,IAArB,EAA2B;AACzBC,IAAAA,QAAQ,GAAGA,QAAQ,CAACI,MAAT,CAAgB,UAACC,WAAD;AAAA,aAAiBA,WAAW,CAACI,YAAZ,CAAyB,UAAzB,MAAyC,IAA1D;AAAA,KAAhB,CAAX;AACD;;AAED,SAAOT,QAAP;AACD;;;;"}