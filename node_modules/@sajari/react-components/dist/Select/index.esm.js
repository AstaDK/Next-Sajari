import _css from '@emotion/css';
import { extends as _extends } from '../_virtual/_rollupPluginBabelHelpers.js';
import { getStylesObject, cleanChildren, isString, __DEV__, isArray } from '@sajari/react-sdk-utils';
import { forwardRef, useMemo, useState, useEffect } from 'react';
import { jsx, jsxs } from '@emotion/core/jsx-runtime';
import Box from '../Box/index.esm.js';
import { useId } from '@react-aria/utils';
import Label from '../Label/index.esm.js';
import { useSelect } from 'downshift';
import SelectContextProvider from './context.esm.js';
import Button from './components/Button/index.esm.js';
export { default as Option } from './components/Option/index.esm.js';
import Dropdown from './components/Dropdown/index.esm.js';
import { useSelectStyles } from './styles.esm.js';

var Select = /*#__PURE__*/forwardRef(function (props, ref) {
  var _props$id = props.id,
      id = _props$id === void 0 ? "select-" + useId() : _props$id,
      children = props.children,
      label = props.label,
      name = props.name,
      value = props.value,
      onChange = props.onChange,
      _props$size = props.size,
      size = _props$size === void 0 ? 'md' : _props$size,
      _props$disabled = props.disabled,
      disabled = _props$disabled === void 0 ? false : _props$disabled,
      _props$invalid = props.invalid,
      invalid = _props$invalid === void 0 ? false : _props$invalid,
      _props$multiple = props.multiple,
      multiple = _props$multiple === void 0 ? false : _props$multiple,
      _props$autofocus = props.autofocus,
      autofocus = _props$autofocus === void 0 ? false : _props$autofocus,
      text = props.text,
      _props$disableDefault = props.disableDefaultStyles,
      disableDefaultStyles = _props$disableDefault === void 0 ? false : _props$disableDefault,
      stylesProp = props.styles,
      className = props.className,
      buttonClassName = props.buttonClassName,
      dropdownClassName = props.dropdownClassName,
      optionClassName = props.optionClassName;

  var _useSelectStyles = useSelectStyles(),
      selectStyles = _useSelectStyles.styles;

  var styles = getStylesObject(selectStyles, disableDefaultStyles);

  var stateReducer = function stateReducer(state, actionAndChanges) {
    var changes = actionAndChanges.changes,
        type = actionAndChanges.type;

    switch (type) {
      case useSelect.stateChangeTypes.MenuKeyDownEnter:
      case useSelect.stateChangeTypes.MenuKeyDownSpaceButton:
      case useSelect.stateChangeTypes.ItemClick:
        return _extends({}, changes, {
          isOpen: multiple,
          highlightedIndex: state.highlightedIndex
        });

      default:
        return changes;
    }
  };

  var itemToString = function itemToString(item) {
    var _item$value$toString, _item$value;

    return (_item$value$toString = item == null ? void 0 : (_item$value = item.value) == null ? void 0 : _item$value.toString()) != null ? _item$value$toString : '';
  };

  var items = useMemo(function () {
    return cleanChildren(children).reduce(function (out, _ref) {
      var optionProps = _ref.props;
      return [].concat(out, [optionProps]);
    }, []);
  }, [children]);

  var mapValues = function mapValues(input) {
    if (typeof input === 'undefined') {
      return [];
    }

    var values = isArray(input) ? input.map(String) : [input.toString()];
    return multiple ? values : values.slice(0, 1);
  };

  var _React$useState = useState(mapValues(value)),
      selectedItems = _React$useState[0],
      setSelectedItems = _React$useState[1];

  var setSelected = function setSelected(selected) {
    setSelectedItems(selected);

    if (onChange) {
      var first = selected[0];
      onChange(multiple ? selected : first);
    }
  };

  useEffect(function () {
    setSelectedItems(mapValues(value));
  }, [value]);

  var _useSelect = useSelect({
    items: items,
    stateReducer: stateReducer,
    selectedItem: null,
    initialHighlightedIndex: items.findIndex(function (_ref2) {
      var v = _ref2.value;
      return v.toString() === selectedItems[0];
    }),
    itemToString: itemToString,
    onSelectedItemChange: function onSelectedItemChange(_ref3) {
      var selectedItem = _ref3.selectedItem;

      if (!selectedItem) {
        return;
      }

      var selectedValue = itemToString(selectedItem);

      if (!multiple) {
        setSelected([selectedValue]);
        return;
      }

      var index = selectedItems.findIndex(function (v) {
        return v === selectedValue;
      });

      if (index > 0) {
        setSelected([].concat(selectedItems.slice(0, index), selectedItems.slice(index + 1)));
      } else if (index === 0) {
        setSelected([].concat(selectedItems.slice(1)));
      } else {
        setSelected([].concat(selectedItems, [selectedValue]));
      }
    }
  }),
      open = _useSelect.isOpen,
      getToggleButtonProps = _useSelect.getToggleButtonProps,
      getLabelProps = _useSelect.getLabelProps,
      getMenuProps = _useSelect.getMenuProps,
      highlightedIndex = _useSelect.highlightedIndex,
      getItemProps = _useSelect.getItemProps;

  var context = {
    id: id,
    open: open,
    items: items,
    selectedItems: selectedItems,
    highlightedIndex: highlightedIndex,
    getMenuProps: getMenuProps,
    getItemProps: getItemProps,
    getToggleButtonProps: getToggleButtonProps,
    itemToString: itemToString,
    multiple: multiple,
    disabled: disabled,
    invalid: invalid,
    autofocus: autofocus,
    size: size,
    text: text,
    disableDefaultStyles: disableDefaultStyles,
    customClassNames: {
      buttonClassName: buttonClassName,
      dropdownClassName: dropdownClassName,
      optionClassName: optionClassName
    }
  };
  var renderInputs = isString(name) && !disabled;
  return jsx(SelectContextProvider, {
    value: context,
    children: jsxs(Box, {
      css: /*#__PURE__*/_css([styles.container, stylesProp], ";label:Select;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxR1ciLCJmaWxlIjoiaW5kZXgudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlSWQgfSBmcm9tICdAcmVhY3QtYXJpYS91dGlscyc7XHJcbmltcG9ydCB7IF9fREVWX18sIGNsZWFuQ2hpbGRyZW4sIGdldFN0eWxlc09iamVjdCwgaXNBcnJheSwgaXNTdHJpbmcgfSBmcm9tICdAc2FqYXJpL3JlYWN0LXNkay11dGlscyc7XHJcbmltcG9ydCB7IHVzZVNlbGVjdCB9IGZyb20gJ2Rvd25zaGlmdCc7XHJcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IEJveCBmcm9tICcuLi9Cb3gnO1xyXG5pbXBvcnQgTGFiZWwgZnJvbSAnLi4vTGFiZWwnO1xyXG5pbXBvcnQgQnV0dG9uIGZyb20gJy4vY29tcG9uZW50cy9CdXR0b24nO1xyXG5pbXBvcnQgRHJvcGRvd24gZnJvbSAnLi9jb21wb25lbnRzL0Ryb3Bkb3duJztcclxuaW1wb3J0IFNlbGVjdENvbnRleHRQcm92aWRlciBmcm9tICcuL2NvbnRleHQnO1xyXG5pbXBvcnQgeyB1c2VTZWxlY3RTdHlsZXMgfSBmcm9tICcuL3N0eWxlcyc7XHJcbmNvbnN0IFNlbGVjdCA9IFJlYWN0LmZvcndhcmRSZWYoKHByb3BzLCByZWYpID0+IHtcclxuICAgIGNvbnN0IHsgaWQgPSBgc2VsZWN0LSR7dXNlSWQoKX1gLCBjaGlsZHJlbiwgbGFiZWwsIG5hbWUsIHZhbHVlLCBvbkNoYW5nZSwgc2l6ZSA9ICdtZCcsIGRpc2FibGVkID0gZmFsc2UsIGludmFsaWQgPSBmYWxzZSwgbXVsdGlwbGUgPSBmYWxzZSwgYXV0b2ZvY3VzID0gZmFsc2UsIHRleHQsIGRpc2FibGVEZWZhdWx0U3R5bGVzID0gZmFsc2UsIHN0eWxlczogc3R5bGVzUHJvcCwgY2xhc3NOYW1lLCBidXR0b25DbGFzc05hbWUsIGRyb3Bkb3duQ2xhc3NOYW1lLCBvcHRpb25DbGFzc05hbWUsIH0gPSBwcm9wcztcclxuICAgIGNvbnN0IHsgc3R5bGVzOiBzZWxlY3RTdHlsZXMgfSA9IHVzZVNlbGVjdFN0eWxlcygpO1xyXG4gICAgY29uc3Qgc3R5bGVzID0gZ2V0U3R5bGVzT2JqZWN0KHNlbGVjdFN0eWxlcywgZGlzYWJsZURlZmF1bHRTdHlsZXMpO1xyXG4gICAgY29uc3Qgc3RhdGVSZWR1Y2VyID0gKHN0YXRlLCBhY3Rpb25BbmRDaGFuZ2VzKSA9PiB7XHJcbiAgICAgICAgY29uc3QgeyBjaGFuZ2VzLCB0eXBlIH0gPSBhY3Rpb25BbmRDaGFuZ2VzO1xyXG4gICAgICAgIHN3aXRjaCAodHlwZSkge1xyXG4gICAgICAgICAgICBjYXNlIHVzZVNlbGVjdC5zdGF0ZUNoYW5nZVR5cGVzLk1lbnVLZXlEb3duRW50ZXI6XHJcbiAgICAgICAgICAgIGNhc2UgdXNlU2VsZWN0LnN0YXRlQ2hhbmdlVHlwZXMuTWVudUtleURvd25TcGFjZUJ1dHRvbjpcclxuICAgICAgICAgICAgY2FzZSB1c2VTZWxlY3Quc3RhdGVDaGFuZ2VUeXBlcy5JdGVtQ2xpY2s6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgICAgIC4uLmNoYW5nZXMsXHJcbiAgICAgICAgICAgICAgICAgICAgaXNPcGVuOiBtdWx0aXBsZSxcclxuICAgICAgICAgICAgICAgICAgICBoaWdobGlnaHRlZEluZGV4OiBzdGF0ZS5oaWdobGlnaHRlZEluZGV4LFxyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIHJldHVybiBjaGFuZ2VzO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBjb25zdCBpdGVtVG9TdHJpbmcgPSAoaXRlbSkgPT4gaXRlbT8udmFsdWU/LnRvU3RyaW5nKCkgPz8gJyc7XHJcbiAgICBjb25zdCBpdGVtcyA9IFJlYWN0LnVzZU1lbW8oKCkgPT4gY2xlYW5DaGlsZHJlbihjaGlsZHJlbikucmVkdWNlKChvdXQsIHsgcHJvcHM6IG9wdGlvblByb3BzIH0pID0+IFsuLi5vdXQsIG9wdGlvblByb3BzXSwgW10pLCBbY2hpbGRyZW5dKTtcclxuICAgIGNvbnN0IG1hcFZhbHVlcyA9IChpbnB1dCkgPT4ge1xyXG4gICAgICAgIGlmICh0eXBlb2YgaW5wdXQgPT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBbXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgdmFsdWVzID0gaXNBcnJheShpbnB1dCkgPyBpbnB1dC5tYXAoU3RyaW5nKSA6IFtpbnB1dC50b1N0cmluZygpXTtcclxuICAgICAgICByZXR1cm4gbXVsdGlwbGUgPyB2YWx1ZXMgOiB2YWx1ZXMuc2xpY2UoMCwgMSk7XHJcbiAgICB9O1xyXG4gICAgY29uc3QgW3NlbGVjdGVkSXRlbXMsIHNldFNlbGVjdGVkSXRlbXNdID0gUmVhY3QudXNlU3RhdGUobWFwVmFsdWVzKHZhbHVlKSk7XHJcbiAgICBjb25zdCBzZXRTZWxlY3RlZCA9IChzZWxlY3RlZCkgPT4ge1xyXG4gICAgICAgIHNldFNlbGVjdGVkSXRlbXMoc2VsZWN0ZWQpO1xyXG4gICAgICAgIGlmIChvbkNoYW5nZSkge1xyXG4gICAgICAgICAgICBjb25zdCBbZmlyc3RdID0gc2VsZWN0ZWQ7XHJcbiAgICAgICAgICAgIG9uQ2hhbmdlKG11bHRpcGxlID8gc2VsZWN0ZWQgOiBmaXJzdCk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAgICAgc2V0U2VsZWN0ZWRJdGVtcyhtYXBWYWx1ZXModmFsdWUpKTtcclxuICAgIH0sIFt2YWx1ZV0pO1xyXG4gICAgY29uc3QgeyBpc09wZW46IG9wZW4sIGdldFRvZ2dsZUJ1dHRvblByb3BzLCBnZXRMYWJlbFByb3BzLCBnZXRNZW51UHJvcHMsIGhpZ2hsaWdodGVkSW5kZXgsIGdldEl0ZW1Qcm9wcywgfSA9IHVzZVNlbGVjdCh7XHJcbiAgICAgICAgaXRlbXMsXHJcbiAgICAgICAgc3RhdGVSZWR1Y2VyLFxyXG4gICAgICAgIHNlbGVjdGVkSXRlbTogbnVsbCxcclxuICAgICAgICBpbml0aWFsSGlnaGxpZ2h0ZWRJbmRleDogaXRlbXMuZmluZEluZGV4KCh7IHZhbHVlOiB2IH0pID0+IHYudG9TdHJpbmcoKSA9PT0gc2VsZWN0ZWRJdGVtc1swXSksXHJcbiAgICAgICAgaXRlbVRvU3RyaW5nLFxyXG4gICAgICAgIG9uU2VsZWN0ZWRJdGVtQ2hhbmdlOiAoeyBzZWxlY3RlZEl0ZW0gfSkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoIXNlbGVjdGVkSXRlbSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNvbnN0IHNlbGVjdGVkVmFsdWUgPSBpdGVtVG9TdHJpbmcoc2VsZWN0ZWRJdGVtKTtcclxuICAgICAgICAgICAgaWYgKCFtdWx0aXBsZSkge1xyXG4gICAgICAgICAgICAgICAgc2V0U2VsZWN0ZWQoW3NlbGVjdGVkVmFsdWVdKTtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjb25zdCBpbmRleCA9IHNlbGVjdGVkSXRlbXMuZmluZEluZGV4KCh2KSA9PiB2ID09PSBzZWxlY3RlZFZhbHVlKTtcclxuICAgICAgICAgICAgaWYgKGluZGV4ID4gMCkge1xyXG4gICAgICAgICAgICAgICAgc2V0U2VsZWN0ZWQoWy4uLnNlbGVjdGVkSXRlbXMuc2xpY2UoMCwgaW5kZXgpLCAuLi5zZWxlY3RlZEl0ZW1zLnNsaWNlKGluZGV4ICsgMSldKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIGlmIChpbmRleCA9PT0gMCkge1xyXG4gICAgICAgICAgICAgICAgc2V0U2VsZWN0ZWQoWy4uLnNlbGVjdGVkSXRlbXMuc2xpY2UoMSldKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHNldFNlbGVjdGVkKFsuLi5zZWxlY3RlZEl0ZW1zLCBzZWxlY3RlZFZhbHVlXSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgfSk7XHJcbiAgICBjb25zdCBjb250ZXh0ID0ge1xyXG4gICAgICAgIGlkLFxyXG4gICAgICAgIG9wZW4sXHJcbiAgICAgICAgaXRlbXMsXHJcbiAgICAgICAgc2VsZWN0ZWRJdGVtcyxcclxuICAgICAgICBoaWdobGlnaHRlZEluZGV4LFxyXG4gICAgICAgIGdldE1lbnVQcm9wcyxcclxuICAgICAgICBnZXRJdGVtUHJvcHMsXHJcbiAgICAgICAgZ2V0VG9nZ2xlQnV0dG9uUHJvcHMsXHJcbiAgICAgICAgaXRlbVRvU3RyaW5nLFxyXG4gICAgICAgIG11bHRpcGxlLFxyXG4gICAgICAgIGRpc2FibGVkLFxyXG4gICAgICAgIGludmFsaWQsXHJcbiAgICAgICAgYXV0b2ZvY3VzLFxyXG4gICAgICAgIHNpemUsXHJcbiAgICAgICAgdGV4dCxcclxuICAgICAgICBkaXNhYmxlRGVmYXVsdFN0eWxlcyxcclxuICAgICAgICBjdXN0b21DbGFzc05hbWVzOiB7XHJcbiAgICAgICAgICAgIGJ1dHRvbkNsYXNzTmFtZSxcclxuICAgICAgICAgICAgZHJvcGRvd25DbGFzc05hbWUsXHJcbiAgICAgICAgICAgIG9wdGlvbkNsYXNzTmFtZSxcclxuICAgICAgICB9LFxyXG4gICAgfTtcclxuICAgIGNvbnN0IHJlbmRlcklucHV0cyA9IGlzU3RyaW5nKG5hbWUpICYmICFkaXNhYmxlZDtcclxuICAgIHJldHVybiAoPFNlbGVjdENvbnRleHRQcm92aWRlciB2YWx1ZT17Y29udGV4dH0+XG4gICAgICA8Qm94IGNzcz17W3N0eWxlcy5jb250YWluZXIsIHN0eWxlc1Byb3BdfSByZWY9e3JlZn0gY2xhc3NOYW1lPXtjbGFzc05hbWV9PlxuICAgICAgICB7bGFiZWwgJiYgKDxMYWJlbCB2aXN1YWxseUhpZGRlbiB7Li4uZ2V0TGFiZWxQcm9wcygpfT5cbiAgICAgICAgICAgIHtsYWJlbH1cbiAgICAgICAgICA8L0xhYmVsPil9XG5cbiAgICAgICAgPEJ1dHRvbiAvPlxuXG4gICAgICAgIDxEcm9wZG93biAvPlxuXG4gICAgICAgIHtyZW5kZXJJbnB1dHMgJiZcclxuICAgICAgICBzZWxlY3RlZEl0ZW1zLm1hcCgodikgPT4gPEJveCBhcz1cImlucHV0XCIgdHlwZT1cImhpZGRlblwiIG5hbWU9e25hbWV9IHZhbHVlPXt2fSBrZXk9e2Ake25hbWV9LSR7dn1gfS8+KX1cbiAgICAgIDwvQm94PlxuICAgIDwvU2VsZWN0Q29udGV4dFByb3ZpZGVyPik7XHJcbn0pO1xyXG5pZiAoX19ERVZfXykge1xyXG4gICAgU2VsZWN0LmRpc3BsYXlOYW1lID0gJ1NlbGVjdCc7XHJcbn1cclxuZXhwb3J0IGRlZmF1bHQgU2VsZWN0O1xyXG5leHBvcnQgeyBkZWZhdWx0IGFzIE9wdGlvbiB9IGZyb20gJy4vY29tcG9uZW50cy9PcHRpb24nO1xyXG5leHBvcnQgKiBmcm9tICcuL2NvbXBvbmVudHMvT3B0aW9uJztcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanN4Lm1hcCJdfQ== */")),
      ref: ref,
      className: className,
      children: [label && jsx(Label, _extends({
        visuallyHidden: true
      }, getLabelProps(), {
        children: label
      })), jsx(Button, {}), jsx(Dropdown, {}), renderInputs && selectedItems.map(function (v) {
        return jsx(Box, {
          as: "input",
          type: "hidden",
          name: name,
          value: v
        }, name + "-" + v);
      })]
    })
  });
});

if (__DEV__) {
  Select.displayName = 'Select';
}

export default Select;
//# sourceMappingURL=index.esm.js.map
