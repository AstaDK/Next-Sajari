import { extends as _extends } from '../../../_virtual/_rollupPluginBabelHelpers.js';
import { getStylesObject } from '@sajari/react-sdk-utils';
import 'react';
import { jsx } from '@emotion/core/jsx-runtime';
import Box from '../../../Box/index.esm.js';
import { createElement } from '@emotion/core';
import { mergeProps } from '@react-aria/utils';
import { useSelectContext } from '../../context.esm.js';
import Option from '../Option/index.esm.js';
import { useDropdownStyles } from './styles.esm.js';

var Dropdown = function Dropdown() {
  var _useSelectContext = useSelectContext(),
      items = _useSelectContext.items,
      open = _useSelectContext.open,
      getMenuProps = _useSelectContext.getMenuProps,
      disableDefaultStyles = _useSelectContext.disableDefaultStyles,
      customClassNames = _useSelectContext.customClassNames;

  var _useDropdownStyles = useDropdownStyles({
    shown: open
  }),
      dropdownStyles = _useDropdownStyles.styles,
      focusRingProps = _useDropdownStyles.focusRingProps;

  var styles = getStylesObject(dropdownStyles, disableDefaultStyles);
  var options = items.map(function (item) {
    return createElement(Option, _extends({}, item, {
      key: item.value
    }));
  });
  return jsx(Box, _extends({
    as: "ul",
    css: styles.container
  }, mergeProps(focusRingProps, getMenuProps()), {
    className: customClassNames.dropdownClassName,
    children: open && options
  }));
};

export default Dropdown;
//# sourceMappingURL=index.esm.js.map
