import { mapStyles } from '@sajari/react-sdk-utils';
import '../../../hooks/useBorderRadius.esm.js';
import '../../../hooks/useDropdownItemStyles.esm.js';
import { useDropdownStyles as useDropdownStyles$1 } from '../../../hooks/useDropdownStyles.esm.js';
import '../../../hooks/useFirstRender.esm.js';
import '../../../hooks/useRingStyles.esm.js';
import useFocusRingStyles from '../../../hooks/useFocusRingStyles.esm.js';
import '../../../hooks/useFontSize.esm.js';
import '../../../hooks/useInputStyles.esm.js';
import '../../../hooks/useJustifyContent.esm.js';
import '../../../hooks/useSpacing.esm.js';
import '../../../hooks/useVoiceInput.esm.js';
import 'use-resize-observer/polyfilled';

function useDropdownStyles(params) {
  var shown = params.shown;

  var _useCoreDropdownStyle = useDropdownStyles$1({
    shown: shown
  }),
      container = _useCoreDropdownStyle.container;

  var _useFocusRingStyles = useFocusRingStyles(),
      focusRingProps = _useFocusRingStyles.focusProps,
      focusRingStyles = _useFocusRingStyles.focusRingStyles;

  var styles = {
    container: [{
      "padding": "0.25rem",
      "paddingBottom": "0",
      "overflow": "auto",
      "listStyleType": "none",
      ":focus": {
        "outline": "2px solid transparent",
        "outlineOffset": "2px"
      },
      "maxHeight": "20rem",
      "minWidth": "max-content"
    }, container, focusRingStyles]
  };
  return {
    styles: mapStyles(styles),
    focusRingProps: focusRingProps
  };
}

export { useDropdownStyles };
//# sourceMappingURL=styles.esm.js.map
