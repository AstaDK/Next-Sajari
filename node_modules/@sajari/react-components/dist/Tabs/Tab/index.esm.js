import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';
import { getStylesObject, __DEV__ } from '@sajari/react-sdk-utils';
import { forwardRef } from 'react';
import { jsx } from '@emotion/core/jsx-runtime';
import Box from '../../Box/index.esm.js';
import { mergeProps } from '@react-aria/utils';
import classnames from 'classnames';
import { useTabContext } from '../context.esm.js';
import useTabStyles from './styles.esm.js';

var Tab = /*#__PURE__*/forwardRef(function (props, ref) {
  var _classnames;

  var selected = props.selected,
      disabled = props.disabled,
      id = props.id,
      className = props.className,
      _props$selectedClassN = props.selectedClassName,
      selectedClassName = _props$selectedClassN === void 0 ? '' : _props$selectedClassN,
      rest = _objectWithoutPropertiesLoose(props, ["selected", "disabled", "id", "className", "selectedClassName"]);

  var _useTabContext = useTabContext(),
      _useTabContext$disabl = _useTabContext.disableDefaultStyles,
      disableDefaultStyles = _useTabContext$disabl === void 0 ? false : _useTabContext$disabl;

  var _useTabStyles = useTabStyles(props),
      containerStyles = _useTabStyles.styles,
      focusRingProps = _useTabStyles.focusRingProps;

  var styles = getStylesObject({
    container: containerStyles
  }, disableDefaultStyles);
  return jsx(Box, _extends({
    ref: ref,
    role: "tab",
    as: "button",
    type: "button",
    tabIndex: selected ? 0 : -1,
    id: "tab-" + id,
    disabled: disabled,
    "aria-selected": selected,
    "aria-disabled": disabled,
    "aria-controls": "panel-" + id,
    className: classnames(className, (_classnames = {}, _classnames[selectedClassName] = selected, _classnames)),
    css: styles.container
  }, mergeProps(rest, focusRingProps)));
});

if (__DEV__) {
  Tab.displayName = 'Tab';
}

export default Tab;
//# sourceMappingURL=index.esm.js.map
