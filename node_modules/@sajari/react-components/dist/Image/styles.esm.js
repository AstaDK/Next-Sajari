import { mapStyles } from '@sajari/react-sdk-utils';
import { useHasImageLoaded } from '../hooks/useHasImageLoaded.esm.js';

function useObjectFit(objectFit, isSecondImage) {
  if (isSecondImage === void 0) {
    isSecondImage = false;
  }

  switch (objectFit) {
    case 'contain':
      return {
        "objectFit": "contain"
      };

    case 'cover':
      return {
        "objectFit": "cover"
      };

    case 'fill':
      return {
        "objectFit": "fill"
      };

    case 'scale-down':
      return {
        "objectFit": "scale-down"
      };

    case 'none':
      return {
        "objectFit": "none"
      };

    default:
      return isSecondImage ? {
        "objectFit": "cover"
      } : '';
  }
}

function useImageStyles(props) {
  var hasLoaded = useHasImageLoaded(props);
  var hover = props.hover,
      objectFit = props.objectFit;
  var styles = {
    container: [{
      "position": "relative",
      "borderRadius": "0.375rem"
    }, !hasLoaded ? {
      "--bg-opacity": "1",
      "backgroundColor": "rgba(244, 245, 247, var(--bg-opacity))"
    } : ''],
    image: [{
      "transitionProperty": "opacity",
      "transitionDuration": "200ms",
      "transitionTimingFunction": "cubic-bezier(0.4, 0, 1, 1)"
    }, hasLoaded && !hover ? {
      "opacity": "1"
    } : {
      "opacity": "0"
    }, {
      borderRadius: 'inherit'
    }, useObjectFit(objectFit)],
    secondImage: [{
      "position": "absolute",
      "top": "0",
      "left": "0",
      "objectFit": "cover",
      "width": "100%",
      "height": "100%",
      "transitionProperty": "opacity",
      "transitionDuration": "200ms",
      "transitionTimingFunction": "cubic-bezier(0.4, 0, 1, 1)"
    }, hasLoaded && hover ? {
      "opacity": "1"
    } : {
      "opacity": "0"
    }, {
      borderRadius: 'inherit'
    }, useObjectFit(objectFit, true)]
  };
  return mapStyles(styles);
}

export { useImageStyles };
//# sourceMappingURL=styles.esm.js.map
