import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose, extends as _extends } from '../_virtual/_rollupPluginBabelHelpers.js';
import { __DEV__, noop } from '@sajari/react-sdk-utils';
import 'react';
import { jsx } from '@emotion/core/jsx-runtime';
import Box from '../Box/index.esm.js';
import '../hooks/useBorderRadius.esm.js';
import '../hooks/useDropdownItemStyles.esm.js';
import '../hooks/useDropdownStyles.esm.js';
import '../hooks/useFirstRender.esm.js';
import '../hooks/useRingStyles.esm.js';
import '../hooks/useFocusRingStyles.esm.js';
import '../hooks/useFontSize.esm.js';
import '../hooks/useInputStyles.esm.js';
import '../hooks/useJustifyContent.esm.js';
import '../hooks/useSpacing.esm.js';
import '../hooks/useVoiceInput.esm.js';
import useResizeObserver from 'use-resize-observer/polyfilled';

var ResizeObserver = function ResizeObserver(props) {
  var _props$onResize = props.onResize,
      onResize = _props$onResize === void 0 ? noop : _props$onResize,
      children = props.children,
      rest = _objectWithoutPropertiesLoose(props, ["onResize", "children"]);

  var _useResizeObserver = useResizeObserver({
    onResize: onResize
  }),
      ref = _useResizeObserver.ref;

  return jsx(Box, _extends({
    ref: ref
  }, rest, {
    children: children
  }));
};

if (__DEV__) {
  ResizeObserver.displayName = 'ResizeObserver';
}

export default ResizeObserver;
//# sourceMappingURL=index.esm.js.map
