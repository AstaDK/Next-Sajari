{"version":3,"file":"react-sdk-utils.cjs.production.min.js","sources":["../src/assertion.ts","../src/ssr.ts","../src/number.ts","../src/object.ts","../src/react-helpers.ts","../src/string.ts","../src/styles/tailwind.config.js","../src/styles/cache.ts","../src/styles/theming.tsx","../src/constant.ts","../src/function.ts","../src/context.tsx","../src/styles/index.ts","../src/array.ts","../src/url.ts","../src/index.ts","../src/debounce.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { parseURL } from './url';\n\nconst getTag = (value: any) => {\n  if (value == null) {\n    return value === undefined ? '[object Undefined]' : '[object Null]';\n  }\n\n  return toString.call(value);\n};\n\nexport function isNullOrUndefined(value: any): value is undefined | null {\n  return value === null || typeof value === 'undefined';\n}\n\nexport function isString(value: any): value is string {\n  return typeof value === 'string';\n}\n\nexport function isBoolean(value: any): value is boolean {\n  return typeof value === 'boolean';\n}\n\nexport function isNumber(value: any): value is number {\n  return typeof value === 'number' && !Number.isNaN(value);\n}\n\nexport function isFunction(value: any): value is (...args: any[]) => any {\n  return typeof value === 'function';\n}\n\nexport function isArray<T>(value: any): value is T[] {\n  return Array.isArray(value);\n}\n\nexport const isObject = (value: any) => {\n  const type = typeof value;\n  return value !== null && (type === 'object' || type === 'function') && !isArray(value);\n};\n\nexport const isPlainObject = (value: any) => {\n  if (!isObject(value) || getTag(value) !== '[object Object]') {\n    return false;\n  }\n\n  if (Object.getPrototypeOf(value) === null) {\n    return true;\n  }\n\n  let proto = value;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(value) === proto;\n};\n\nexport const isEmptyArray = (value: any) => isArray(value) && value.length === 0;\n\nexport const isEmptyObject = (value: any) => isObject(value) && Object.keys(value).length === 0;\n\n// Empty assertions\nexport const isEmpty = (value: any) => {\n  if (isNullOrUndefined(value)) {\n    return true;\n  }\n\n  if (isArray(value)) {\n    return isEmptyArray(value);\n  }\n\n  if (isObject(value)) {\n    return isEmptyObject(value);\n  }\n\n  if (isString(value)) {\n    return value.trim() === '';\n  }\n\n  return false;\n};\n\n/**\n * Check if a string is a valid absolute or relative URL\n * @param value\n */\nexport function isValidURL(value?: string, allowRelative = false) {\n  if (!value || isEmpty(value)) {\n    return false;\n  }\n\n  if (allowRelative && value.startsWith('/')) {\n    return true;\n  }\n\n  return parseURL(value) !== null;\n}\n","export function isSSR() {\n  return typeof window === 'undefined';\n}\n","import { isNumber } from './assertion';\nimport { isSSR } from './ssr';\n\n/**\n * Returns a number whose value is limited to the given range.\n *\n * Example: limit the output of this computation to between 0 and 255\n * clamp((x * 255), 0, 255)\n *\n * @param input\n * @param min The lower boundary of the output range\n * @param max The upper boundary of the output range\n * @returns A number in the range [min, max]\n * @type Number\n */\nexport function clamp(input = 0, min = 0, max = 255): number {\n  return Math.min(Math.max(input, min), max);\n}\n\n/**\n * Find the number closest to a target value\n * @param target The target value\n * @param values The range of values to check\n */\nexport function closest(target: number, values: number[]): [number, number] {\n  const match = values.reduce((prev, value) => (Math.abs(value - target) < Math.abs(prev - target) ? value : prev));\n  return [values.indexOf(match), match];\n}\n\n/**\n * Get the number of decimal places\n * @param value\n */\nexport function getDecimalPlaces(value: number): number {\n  const match = /(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/.exec(value.toString());\n\n  if (!match) {\n    return 0;\n  }\n\n  return Math.max(\n    0,\n    // Number of digits right of decimal point.\n    (match[1] ? match[1].length : 0) -\n      // Adjust for scientific notation.\n      (match[2] ? +match[2] : 0),\n  );\n}\n\n/**\n * Round to decimal places\n * @param input - the number to round\n * @param places - how many decimal places to round to\n */\nexport function round(input: number, places: number): number {\n  return parseFloat(input.toFixed(places));\n}\n\n/**\n * Round to the nearest step\n * @param input - the number to round\n * @param step - the step to round to\n */\nexport function roundToStep(input: number, step: number): number {\n  const places = getDecimalPlaces(step);\n  return round(Math.round(input / step) * step, places);\n}\n\ninterface FormatNumberOptions extends Intl.NumberFormatOptions {\n  // Whether to use the neutral locale (e.g. en rather than en-US)\n  neutral?: boolean;\n  // The language to use for formatting (e.g. en or en-US)\n  language?: string;\n}\n\n/**\n * Format a number into a localised format\n *\n * @param input - Number to format\n * @param options - Formatting options\n */\nexport function formatNumber(input: number, options?: FormatNumberOptions): string {\n  const { neutral = true, language = !isSSR() ? navigator.language : 'en-US', ...rest } = options ?? {};\n\n  if (!isNumber(input)) {\n    return input;\n  }\n\n  return new Intl.NumberFormat(neutral ? language.split('-')[0] : language, rest).format(input);\n}\n\n/**\n * Format a price or price range to display\n */\nexport function formatPrice(input: string | string[] | number, options: Omit<FormatNumberOptions, 'style'>): string {\n  const price = input;\n  const format = (val: string | number | undefined) => {\n    const value = Number(val);\n\n    if (!isNumber(value)) {\n      return input.toString();\n    }\n\n    return formatNumber(value, { style: 'currency', ...options });\n  };\n\n  if (!Array.isArray(price)) {\n    return format(price);\n  }\n\n  const prices = price.map(Number);\n  const min = Math.min(...prices);\n  const max = Math.max(...prices);\n\n  if (min === max) {\n    return format(min);\n  }\n\n  return `${format(min)}â€“${format(max)}`;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-param-reassign */\nimport { isPlainObject } from './assertion';\n\n/**\n * Filter an object to keep or remove certain keys\n * @param input Object to filter\n * @param keys Keys that can be kept or removed\n * @param invert Whether the keys are kept (false) or remove (true)\n */\nexport function filterObject(input: Record<string, any>, keys: Array<string>, invert = false): Record<string, any> {\n  return Object.keys(input)\n    .filter((key) => (invert ? !keys.includes(key) : keys.includes(key)))\n    .reduce((obj, key) => Object.assign(obj, { [key]: input[key] }), {});\n}\n\ninterface MergeObject {\n  [k: string]: any;\n}\n\ntype MergeArrayHandling = 'concat' | 'union' | 'replace';\n\nexport class MergeOptions {\n  /**\n   * How arrays should be merged\n   * 'concat' - Concatenate arrays.\n   * 'union' - Union arrays, skipping items that already exist.\n   * 'replace' - Replace all array items.\n   */\n  public arrayHandling: MergeArrayHandling;\n\n  constructor(options?: MergeOptions) {\n    this.arrayHandling = options?.arrayHandling ?? 'concat';\n  }\n}\n\n// Deep extend destination object with N more objects\nexport function merge(\n  options: MergeOptions | MergeObject,\n  target: MergeObject,\n  ...sources: MergeObject[]\n): MergeObject {\n  // If options aren't passed\n  if (isPlainObject(options)) {\n    sources = [target, ...sources];\n    target = options;\n    options = new MergeOptions();\n  }\n\n  if (!isPlainObject(target) || !sources.length) {\n    return target;\n  }\n\n  const { arrayHandling } = options as MergeOptions;\n  const source = sources.shift();\n\n  if (!source || !isPlainObject(source)) {\n    return target;\n  }\n\n  Object.keys(source).forEach((key) => {\n    const targetValue = target[key];\n    const sourceValue = source[key];\n\n    if (Array.isArray(targetValue) && Array.isArray(sourceValue)) {\n      switch (arrayHandling) {\n        case 'concat':\n          target[key] = targetValue.concat(sourceValue);\n          break;\n\n        case 'replace':\n          target[key] = sourceValue;\n          break;\n\n        case 'union':\n          target[key] = Array.from(new Set([...targetValue, ...sourceValue]));\n          break;\n\n        default:\n          break;\n      }\n    } else if (isPlainObject(targetValue) && isPlainObject(sourceValue)) {\n      target[key] = merge(options, { ...targetValue }, sourceValue);\n    } else {\n      target[key] = sourceValue;\n    }\n  });\n\n  return target;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { Children, isValidElement } from 'react';\n\nexport type As<Props = any> = React.ElementType<Props>;\n\nexport type PropsWithAs<Props = any, Type extends As = As> = Props &\n  Omit<React.ComponentProps<Type>, 'as' | keyof Props> & {\n    as?: Type;\n  };\n\nexport interface ComponentWithAs<Props, DefaultType extends As> {\n  <Type extends As>(props: PropsWithAs<Props, Type> & { as: Type }): JSX.Element;\n  (props: PropsWithAs<Props, DefaultType>): JSX.Element;\n}\n\ntype ReactRef<T> = React.Ref<T> | React.RefObject<T> | React.MutableRefObject<T>;\n\nexport function setRef<T = any>(ref: React.Ref<T> = null, value: T): void {\n  if (!ref) {\n    return;\n  }\n\n  if (typeof ref === 'function') {\n    ref(value);\n  } else {\n    // eslint-disable-next-line no-param-reassign\n    (ref as React.MutableRefObject<T>).current = value;\n  }\n}\n\n/**\n * Get a list of all valid React child elements\n * @param children\n */\nexport function cleanChildren(children: React.ReactChildren | React.ReactNode): React.ReactElement[] {\n  return Children.toArray(children).filter((child) => isValidElement(child)) as React.ReactElement[];\n}\n\nexport function assignRef(ref: React.Ref<HTMLElement>, value: HTMLElement): ReturnType<typeof setRef> {\n  if (ref == null) {\n    return;\n  }\n\n  try {\n    setRef(ref, value);\n  } catch (error) {\n    throw new Error('Cannot assign value to ref');\n  }\n}\n\n/**\n * Combine multiple React refs into a single ref function.\n * This is used mostly when you need to allow consumers forward refs to\n * internal components\n *\n * @param refs refs to assign to value to\n */\nexport function mergeRefs(...refs: Array<ReactRef<HTMLElement> | undefined>) {\n  return (value: HTMLElement) => {\n    refs.forEach((ref) => ref && assignRef(ref, value));\n  };\n}\n\nexport function forwardRefWithAs<Props, DefaultType extends As>(\n  component: React.ForwardRefRenderFunction<any, any>,\n): ComponentWithAs<Props, DefaultType> {\n  return (React.forwardRef(component) as unknown) as ComponentWithAs<Props, DefaultType>;\n}\n","import { isString } from './assertion';\nimport { isSSR } from './ssr';\n\nexport function replaceAll(target: string, search: string | Record<string, string>, replacement?: string): string {\n  if (isString(search)) {\n    return target.split(search).join(replacement);\n  }\n\n  return Object.entries(search).reduce((current, [find, replace]) => replaceAll(current, find, replace), target);\n}\n\n/** Decode any HTML entities in a string */\nexport function decodeHTML(input = ''): string {\n  if (isSSR()) {\n    return input;\n  }\n\n  const txt = document.createElement('textarea');\n  txt.innerHTML = input;\n  return txt.value;\n}\n\nexport function pluralize(input: number, singular: string, plural: string): string {\n  if (input === 1) {\n    return singular;\n  }\n\n  return plural;\n}\n","export default {\n  theme: {\n    backdropFilter: {\n      none: 'none',\n      'blur-1': 'blur(0.25rem)',\n      'blur-2': 'blur(0.5rem)',\n      'blur-3': 'blur(0.75rem)',\n      'blur-4': 'blur(1rem)',\n      'blur-5': 'blur(1.25rem)',\n      'blur-6': 'blur(1.5rem)',\n    },\n    truncate: {\n      lines: {\n        2: '2',\n        3: '3',\n        4: '4',\n        5: '5',\n      },\n    },\n    extend: {\n      backgroundOpacity: {\n        95: 0.95,\n      },\n      borderRadius: {\n        inherit: 'inherit',\n      },\n      boxShadow: {\n        menu: 'inset 0 0 0 1px rgba(0, 0, 0, 0.1), 0 1px 5px rgba(0, 0, 0, 0.1), inset 0 -1px 0 rgba(0, 0, 0, 0.1)',\n      },\n      fontSize: {\n        'code-inline': '0.9375em',\n      },\n      fontFamily: {\n        inherit: 'inherit',\n      },\n      lineHeight: {\n        inherit: 'inherit',\n      },\n      maxWidth: {\n        '7xl': '80rem',\n        'screen-2xl': '1536px',\n      },\n      minWidth: {\n        'max-content': 'max-content',\n      },\n      spacing: {\n        '(screen-8)': 'calc(100vh - 2rem)',\n        '(screen-12)': 'calc(100vh - 3rem)',\n        '(screen-16)': 'calc(100vh - 4rem)',\n        '(screen-20)': 'calc(100vh - 5rem)',\n      },\n    },\n  },\n  plugins: [require('@tailwindcss/ui'), require('tailwindcss-filters'), require('tailwindcss-truncate-multiline')()],\n};\n","import createCache from '@emotion/cache';\n\nimport { replaceAll } from '../string';\n\nconst disablePrefix = ['letter-spacing'];\n\nconst cache = createCache({\n  stylisPlugins: (context, content, selectors) => {\n    const [selector] = selectors;\n\n    switch (context) {\n      case 1:\n        return `${content} !important`;\n\n      case 3:\n        if (selector === '@font-face' || (selector.startsWith('@') && selector.includes('keyframes'))) {\n          return replaceAll(content, ' !important', '');\n        }\n\n        return content;\n\n      default:\n        return content;\n    }\n  },\n  prefix: (key) => !disablePrefix.includes(key),\n});\n\nexport default cache;\n","import { CacheProvider } from '@emotion/core';\nimport { ThemeProvider as EmotionThemeProvider, useTheme as useEmotionTheme } from 'emotion-theming';\nimport * as React from 'react';\nimport { theme as twTheme } from 'twin.macro';\n\nimport { merge } from '../object';\nimport cache from './cache';\n\ntype DeepPartial<T> = {\n  [P in keyof T]?: DeepPartial<T[P]>;\n};\n\nexport interface Theme {\n  color: {\n    primary: {\n      base: string;\n      text: string;\n      active: string;\n    };\n  };\n}\n\nconst defaultTheme: Theme = {\n  color: {\n    primary: {\n      base: twTheme`colors.indigo.500`.toString(),\n      text: twTheme`colors.white`.toString(),\n      active: twTheme`colors.indigo.600`.toString(),\n    },\n  },\n};\n\nexport const useTheme = () => {\n  const theme = useEmotionTheme<Theme>();\n  return merge({ ...defaultTheme }, theme) as Theme;\n};\n\nexport interface ThemeProviderProps {\n  importantStyles?: boolean;\n  theme?: DeepPartial<Theme>;\n}\n\nconst ThemeProvider: React.FC<ThemeProviderProps> = ({ theme = defaultTheme, importantStyles = false, children }) => (\n  <EmotionThemeProvider theme={merge({ ...defaultTheme }, theme)}>\n    {importantStyles ? <CacheProvider value={cache}>{children}</CacheProvider> : children}\n  </EmotionThemeProvider>\n);\n\nexport default ThemeProvider;\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\nexport const __DEV__ = process.env.NODE_ENV !== 'production';\n","export type FunctionArguments<T> = T extends (...args: infer R) => any ? R : never;\n\nexport function callAllHandlers<T extends (event: any) => void>(...fns: (T | undefined)[]) {\n  return (event: FunctionArguments<T>[0]) => {\n    fns.some(fn => {\n      if (fn) {\n        fn(event);\n      }\n      return event && event.defaultPrevented;\n    });\n  };\n}\n","import * as React from 'react';\n\ntype CreateContextReturn<T> = [React.Provider<T>, () => T, React.Context<T>];\n\ninterface CreateContextOptions {\n  /** If `true`, React will throw if context is `null` or `undefined`.\n      In some cases, you might want to support nested context, so you can set it to `false` */\n  strict?: boolean;\n  /** Error message to throw if the context is `undefined` */\n  errorMessage?: string;\n  /** The display name of the context */\n  name?: string;\n}\n\n/**\n * Creates a named context, provider, and hook.\n *\n * @param options create context options\n */\nexport default function createContext<ContextType>(\n  options: CreateContextOptions = {},\n): CreateContextReturn<ContextType> {\n  const { strict = true, errorMessage = 'useContext must be inside a Provider with a value', name } = options;\n  const Context = React.createContext<ContextType | undefined>(undefined);\n\n  Context.displayName = name;\n\n  function useContext() {\n    const context = React.useContext(Context);\n    if (!context && strict) {\n      throw new Error(errorMessage);\n    }\n    return context;\n  }\n\n  return [Context.Provider, useContext, Context] as CreateContextReturn<ContextType>;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { css, SerializedStyles } from '@emotion/core';\nimport isPropValid from '@emotion/is-prop-valid';\nimport { TwStyle } from 'twin.macro';\n\nimport { isNullOrUndefined } from '../assertion';\n\nexport function mapStyles<T = Record<string, (TwStyle | string | SerializedStyles)[]>>(\n  styles: T,\n): Record<keyof T, SerializedStyles> {\n  return Object.entries(styles).reduce((obj, [key, value]) => Object.assign(obj, { [key]: css(value) }), {}) as Record<\n    keyof typeof styles,\n    SerializedStyles\n  >;\n}\n\nexport function getStylesObject<T = Record<string, SerializedStyles>>(\n  styles: T,\n  disableDefaultStyles: boolean,\n): Partial<T> {\n  if (disableDefaultStyles) {\n    return {} as Partial<T>;\n  }\n\n  return styles;\n}\n\nexport function inferStylesObjectKeys<T, K = (TwStyle | string | SerializedStyles)[]>(obj: T): Record<keyof T, K> {\n  return (obj as unknown) as Record<keyof T, K>;\n}\n\nexport function filterProps(props?: Record<string, any>): Record<string, any> {\n  if (isNullOrUndefined(props)) {\n    return {};\n  }\n\n  return Object.entries(props).reduce((current, [key, value]) => {\n    if (isPropValid(key)) {\n      return { ...current, [key]: value };\n    }\n    return current;\n  }, {});\n}\n\nexport { default as styled } from './styled';\nexport { default as tailwindConfig } from './tailwind.config';\nexport { default as ThemeProvider } from './theming';\nexport { ThemeProviderProps, useTheme } from './theming';\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Group an array of objects by a child property\n * @param collection - The collection to iterate over.\n * @param key - The child property to group by.\n */\nexport function groupBy<T = Record<string, any>>(collection: Array<T>, key: string) {\n  return collection.reduce((out, obj) => ({ ...out, [obj[key]]: (out[obj[key]] || []).concat(obj) }), {});\n}\n","/**\n * Parse a string to URL object\n * @param url\n */\nexport function parseURL(url = '') {\n  try {\n    return new URL(url);\n  } catch (e) {\n    return null;\n  }\n}\n","export * from './array';\nexport * from './assertion';\nexport * from './constant';\nexport { default as createContext } from './context';\nexport * from './debounce';\nexport * from './function';\nexport * from './number';\nexport * from './object';\nexport * from './react-helpers';\nexport * from './ssr';\nexport * from './string';\nexport * from './styles';\nexport const noop = (): void => {};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { useRef } from 'react';\n\nexport function useDebounce<F extends (...args: any[]) => void>(\n  func: F,\n  waitMilliseconds = 50,\n  options = {\n    isImmediate: false,\n  },\n): F {\n  const timeoutIdRef = useRef<ReturnType<typeof setTimeout>>();\n\n  // eslint-disable-next-line func-names\n  return function (this: any, ...args: any[]) {\n    if (timeoutIdRef.current) {\n      clearTimeout(timeoutIdRef.current);\n    }\n\n    const doLater = () => {\n      timeoutIdRef.current = undefined;\n      if (!options.isImmediate) {\n        func.apply(this, args);\n      }\n    };\n\n    const shouldCallNow = options.isImmediate && timeoutIdRef.current === undefined;\n\n    timeoutIdRef.current = setTimeout(doLater, waitMilliseconds);\n\n    if (shouldCallNow) {\n      func.apply(this, args);\n    }\n  } as any;\n}\n"],"names":["isNullOrUndefined","value","isString","isNumber","Number","isNaN","isArray","Array","isObject","type","isPlainObject","undefined","toString","call","getTag","Object","getPrototypeOf","proto","isEmptyArray","length","isEmptyObject","keys","isEmpty","trim","isSSR","window","getDecimalPlaces","match","exec","Math","max","round","input","places","parseFloat","toFixed","formatNumber","options","neutral","language","navigator","rest","Intl","NumberFormat","split","format","MergeOptions","arrayHandling","merge","target","sources","source","shift","forEach","key","targetValue","sourceValue","concat","from","Set","setRef","ref","current","assignRef","error","Error","replaceAll","search","replacement","join","entries","reduce","theme","backdropFilter","none","truncate","lines","extend","backgroundOpacity","borderRadius","inherit","boxShadow","menu","fontSize","fontFamily","lineHeight","maxWidth","minWidth","spacing","plugins","require","disablePrefix","cache","createCache","stylisPlugins","context","content","selectors","selector","startsWith","includes","prefix","defaultTheme","color","primary","base","text","active","importantStyles","children","React","EmotionThemeProvider","CacheProvider","process","fns","event","some","fn","defaultPrevented","min","Children","toArray","filter","child","isValidElement","values","prev","abs","indexOf","strict","errorMessage","name","Context","displayName","Provider","txt","document","createElement","innerHTML","invert","obj","assign","props","isPropValid","price","val","style","prices","map","component","forwardRef","styles","disableDefaultStyles","collection","out","allowRelative","url","URL","e","parseURL","css","refs","singular","plural","step","func","waitMilliseconds","isImmediate","timeoutIdRef","useRef","args","clearTimeout","doLater","apply","_this","shouldCallNow","setTimeout","this","useEmotionTheme"],"mappings":"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"}