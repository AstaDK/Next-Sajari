{"version":3,"file":"string.esm.js","sources":["../src/string.ts"],"sourcesContent":["import { isString } from './assertion';\nimport { isSSR } from './ssr';\n\nexport function replaceAll(target: string, search: string | Record<string, string>, replacement?: string): string {\n  if (isString(search)) {\n    return target.split(search).join(replacement);\n  }\n\n  return Object.entries(search).reduce((current, [find, replace]) => replaceAll(current, find, replace), target);\n}\n\n/** Decode any HTML entities in a string */\nexport function decodeHTML(input = ''): string {\n  if (isSSR()) {\n    return input;\n  }\n\n  const txt = document.createElement('textarea');\n  txt.innerHTML = input;\n  return txt.value;\n}\n\nexport function pluralize(input: number, singular: string, plural: string): string {\n  if (input === 1) {\n    return singular;\n  }\n\n  return plural;\n}\n"],"names":["replaceAll","target","search","replacement","isString","split","join","Object","entries","reduce","current","find","replace","decodeHTML","input","isSSR","txt","document","createElement","innerHTML","value","pluralize","singular","plural"],"mappings":";;;SAGgBA,WAAWC,QAAgBC,QAAyCC;AAClF,MAAIC,QAAQ,CAACF,MAAD,CAAZ,EAAsB;AACpB,WAAOD,MAAM,CAACI,KAAP,CAAaH,MAAb,EAAqBI,IAArB,CAA0BH,WAA1B,CAAP;AACD;;AAED,SAAOI,MAAM,CAACC,OAAP,CAAeN,MAAf,EAAuBO,MAAvB,CAA8B,UAACC,OAAD;AAAA,QAAWC,IAAX;AAAA,QAAiBC,OAAjB;AAAA,WAA8BZ,UAAU,CAACU,OAAD,EAAUC,IAAV,EAAgBC,OAAhB,CAAxC;AAAA,GAA9B,EAAgGX,MAAhG,CAAP;AACD;SAGeY,WAAWC;MAAAA;AAAAA,IAAAA,QAAQ;;;AACjC,MAAIC,KAAK,EAAT,EAAa;AACX,WAAOD,KAAP;AACD;;AAED,MAAME,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAZ;AACAF,EAAAA,GAAG,CAACG,SAAJ,GAAgBL,KAAhB;AACA,SAAOE,GAAG,CAACI,KAAX;AACD;SAEeC,UAAUP,OAAeQ,UAAkBC;AACzD,MAAIT,KAAK,KAAK,CAAd,EAAiB;AACf,WAAOQ,QAAP;AACD;;AAED,SAAOC,MAAP;AACD;;;;"}