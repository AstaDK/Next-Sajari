{"version":3,"file":"object.esm.js","sources":["../src/object.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-param-reassign */\nimport { isPlainObject } from './assertion';\n\n/**\n * Filter an object to keep or remove certain keys\n * @param input Object to filter\n * @param keys Keys that can be kept or removed\n * @param invert Whether the keys are kept (false) or remove (true)\n */\nexport function filterObject(input: Record<string, any>, keys: Array<string>, invert = false): Record<string, any> {\n  return Object.keys(input)\n    .filter((key) => (invert ? !keys.includes(key) : keys.includes(key)))\n    .reduce((obj, key) => Object.assign(obj, { [key]: input[key] }), {});\n}\n\ninterface MergeObject {\n  [k: string]: any;\n}\n\ntype MergeArrayHandling = 'concat' | 'union' | 'replace';\n\nexport class MergeOptions {\n  /**\n   * How arrays should be merged\n   * 'concat' - Concatenate arrays.\n   * 'union' - Union arrays, skipping items that already exist.\n   * 'replace' - Replace all array items.\n   */\n  public arrayHandling: MergeArrayHandling;\n\n  constructor(options?: MergeOptions) {\n    this.arrayHandling = options?.arrayHandling ?? 'concat';\n  }\n}\n\n// Deep extend destination object with N more objects\nexport function merge(\n  options: MergeOptions | MergeObject,\n  target: MergeObject,\n  ...sources: MergeObject[]\n): MergeObject {\n  // If options aren't passed\n  if (isPlainObject(options)) {\n    sources = [target, ...sources];\n    target = options;\n    options = new MergeOptions();\n  }\n\n  if (!isPlainObject(target) || !sources.length) {\n    return target;\n  }\n\n  const { arrayHandling } = options as MergeOptions;\n  const source = sources.shift();\n\n  if (!source || !isPlainObject(source)) {\n    return target;\n  }\n\n  Object.keys(source).forEach((key) => {\n    const targetValue = target[key];\n    const sourceValue = source[key];\n\n    if (Array.isArray(targetValue) && Array.isArray(sourceValue)) {\n      switch (arrayHandling) {\n        case 'concat':\n          target[key] = targetValue.concat(sourceValue);\n          break;\n\n        case 'replace':\n          target[key] = sourceValue;\n          break;\n\n        case 'union':\n          target[key] = Array.from(new Set([...targetValue, ...sourceValue]));\n          break;\n\n        default:\n          break;\n      }\n    } else if (isPlainObject(targetValue) && isPlainObject(sourceValue)) {\n      target[key] = merge(options, { ...targetValue }, sourceValue);\n    } else {\n      target[key] = sourceValue;\n    }\n  });\n\n  return target;\n}\n"],"names":["filterObject","input","keys","invert","Object","filter","key","includes","reduce","obj","assign","MergeOptions","options","arrayHandling","merge","target","sources","isPlainObject","length","source","shift","forEach","targetValue","sourceValue","Array","isArray","concat","from","Set"],"mappings":";;;SAUgBA,aAAaC,OAA4BC,MAAqBC;MAAAA;AAAAA,IAAAA,SAAS;;;AACrF,SAAOC,MAAM,CAACF,IAAP,CAAYD,KAAZ,EACJI,MADI,CACG,UAACC,GAAD;AAAA,WAAUH,MAAM,GAAG,CAACD,IAAI,CAACK,QAAL,CAAcD,GAAd,CAAJ,GAAyBJ,IAAI,CAACK,QAAL,CAAcD,GAAd,CAAzC;AAAA,GADH,EAEJE,MAFI,CAEG,UAACC,GAAD,EAAMH,GAAN;AAAA;;AAAA,WAAcF,MAAM,CAACM,MAAP,CAAcD,GAAd,uCAAsBH,GAAtB,IAA4BL,KAAK,CAACK,GAAD,CAAjC,kBAAd;AAAA,GAFH,EAE4D,EAF5D,CAAP;AAGD;IAQYK,YAAb,GASE,sBAAYC,OAAZ;;;AACE,OAAKC,aAAL,4BAAqBD,OAArB,oBAAqBA,OAAO,CAAEC,aAA9B,oCAA+C,QAA/C;AACD;SAIaC,MACdF,SACAG;oCACGC;AAAAA,IAAAA;;;AAGH,MAAIC,aAAa,CAACL,OAAD,CAAjB,EAA4B;AAC1BI,IAAAA,OAAO,IAAID,MAAJ,SAAeC,OAAf,CAAP;AACAD,IAAAA,MAAM,GAAGH,OAAT;AACAA,IAAAA,OAAO,GAAG,IAAID,YAAJ,EAAV;AACD;;AAED,MAAI,CAACM,aAAa,CAACF,MAAD,CAAd,IAA0B,CAACC,OAAO,CAACE,MAAvC,EAA+C;AAC7C,WAAOH,MAAP;AACD;;iBAEyBH;MAAlBC,yBAAAA;AACR,MAAMM,MAAM,GAAGH,OAAO,CAACI,KAAR,EAAf;;AAEA,MAAI,CAACD,MAAD,IAAW,CAACF,aAAa,CAACE,MAAD,CAA7B,EAAuC;AACrC,WAAOJ,MAAP;AACD;;AAEDX,EAAAA,MAAM,CAACF,IAAP,CAAYiB,MAAZ,EAAoBE,OAApB,CAA4B,UAACf,GAAD;AAC1B,QAAMgB,WAAW,GAAGP,MAAM,CAACT,GAAD,CAA1B;AACA,QAAMiB,WAAW,GAAGJ,MAAM,CAACb,GAAD,CAA1B;;AAEA,QAAIkB,KAAK,CAACC,OAAN,CAAcH,WAAd,KAA8BE,KAAK,CAACC,OAAN,CAAcF,WAAd,CAAlC,EAA8D;AAC5D,cAAQV,aAAR;AACE,aAAK,QAAL;AACEE,UAAAA,MAAM,CAACT,GAAD,CAAN,GAAcgB,WAAW,CAACI,MAAZ,CAAmBH,WAAnB,CAAd;AACA;;AAEF,aAAK,SAAL;AACER,UAAAA,MAAM,CAACT,GAAD,CAAN,GAAciB,WAAd;AACA;;AAEF,aAAK,OAAL;AACER,UAAAA,MAAM,CAACT,GAAD,CAAN,GAAckB,KAAK,CAACG,IAAN,CAAW,IAAIC,GAAJ,WAAYN,WAAZ,EAA4BC,WAA5B,EAAX,CAAd;AACA;AAXJ;AAgBD,KAjBD,MAiBO,IAAIN,aAAa,CAACK,WAAD,CAAb,IAA8BL,aAAa,CAACM,WAAD,CAA/C,EAA8D;AACnER,MAAAA,MAAM,CAACT,GAAD,CAAN,GAAcQ,KAAK,CAACF,OAAD,eAAeU,WAAf,GAA8BC,WAA9B,CAAnB;AACD,KAFM,MAEA;AACLR,MAAAA,MAAM,CAACT,GAAD,CAAN,GAAciB,WAAd;AACD;AACF,GA1BD;AA4BA,SAAOR,MAAP;AACD;;;;"}