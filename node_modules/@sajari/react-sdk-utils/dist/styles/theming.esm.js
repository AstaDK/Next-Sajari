import { extends as _extends } from '../_virtual/_rollupPluginBabelHelpers.js';
import { createElement } from 'react';
import { merge } from '../object.esm.js';
import { CacheProvider } from '@emotion/core';
import { useTheme as useTheme$1, ThemeProvider as ThemeProvider$1 } from 'emotion-theming';
import cache from './cache.esm.js';

var defaultTheme = {
  color: {
    primary: {
      base: /*#__PURE__*/"#667eea".toString(),
      text: /*#__PURE__*/"#fff".toString(),
      active: /*#__PURE__*/"#5a67d8".toString()
    }
  }
};
var useTheme = function useTheme() {
  var theme = useTheme$1();
  return merge(_extends({}, defaultTheme), theme);
};

var ThemeProvider = function ThemeProvider(_ref) {
  var _ref$theme = _ref.theme,
      theme = _ref$theme === void 0 ? defaultTheme : _ref$theme,
      _ref$importantStyles = _ref.importantStyles,
      importantStyles = _ref$importantStyles === void 0 ? false : _ref$importantStyles,
      children = _ref.children;
  return createElement(ThemeProvider$1, {
    theme: merge(_extends({}, defaultTheme), theme)
  }, importantStyles ? createElement(CacheProvider, {
    value: cache
  }, children) : children);
};

export default ThemeProvider;
export { useTheme };
//# sourceMappingURL=theming.esm.js.map
