{"version":3,"file":"react-hooks.cjs.development.js","sources":["../src/ContextProvider/Config.ts","../src/ContextProvider/events.ts","../src/ContextProvider/controllers/Listener.ts","../src/ContextProvider/controllers/analytics/Analytics.ts","../src/ContextProvider/controllers/analytics/GoogleAnalytics.ts","../src/ContextProvider/controllers/filters/FilterBuilder.ts","../src/ContextProvider/controllers/filters/RangeFilterBuilder.ts","../src/ContextProvider/controllers/filters/utils.ts","../src/ContextProvider/controllers/filters/combineFilters.ts","../src/ContextProvider/controllers/Response.ts","../src/ContextProvider/controllers/tracking/Tracking.ts","../src/ContextProvider/controllers/tracking/utils.ts","../src/ContextProvider/controllers/tracking/ClickTracking.ts","../src/ContextProvider/controllers/tracking/NoTracking.ts","../src/ContextProvider/controllers/tracking/PosNegTracking.ts","../src/ContextProvider/controllers/Pipeline.ts","../src/ContextProvider/controllers/Variables.ts","../src/ContextProvider/types.ts","../src/ContextProvider/index.tsx","../src/useAutocomplete/index.ts","../src/utils/mapToObject.ts","../src/utils/response.ts","../src/useFilter/utils.ts","../src/useFilter/index.ts","../src/usePagination/index.ts","../src/useQuery/index.ts","../src/useRangeFilter/index.ts","../src/useResultsPerPage/index.ts","../src/useSearch/index.ts","../src/useSearchContext/index.ts","../src/useSorting/index.ts","../src/useTracking/index.ts","../src/useVariables/index.ts"],"sourcesContent":["export interface Config {\n  qParam: string;\n  qOverrideParam: string;\n  qSuggestionsParam: string;\n  resultsPerPageParam: string;\n  pageParam: string;\n  maxSuggestions: number;\n}\n\nexport const defaultConfig: Config = {\n  qParam: 'q',\n  qOverrideParam: 'q.override',\n  qSuggestionsParam: 'q.suggestions',\n  resultsPerPageParam: 'resultsPerPage',\n  pageParam: 'page',\n  maxSuggestions: 10,\n};\n","export const EVENT_SEARCH_SENT = 'search-sent';\nexport const EVENT_RESPONSE_UPDATED = 'response-updated';\nexport const EVENT_RESULT_CLICKED = 'result-clicked';\n\nexport const EVENT_VALUES_UPDATED = 'values-changed';\n\nexport const EVENT_TRACKING_RESET = 'tracking-reset';\n\nexport const EVENT_ANALYTICS_PAGE_CLOSED = 'page-close-analytics';\nexport const EVENT_ANALYTICS_BODY_RESET = 'body-reset-analytics';\nexport const EVENT_ANALYTICS_RESULT_CLICKED = 'result-clicked-analytics';\n\nexport const EVENT_SELECTION_UPDATED = 'selection-updated';\nexport const EVENT_OPTIONS_UPDATED = 'options-updated';\n\nexport const EVENT_RANGE_UPDATED = 'range-updated';\n","/* eslint-disable @typescript-eslint/no-explicit-any, no-console */\nexport type CallbackFn = (...args: any[]) => void;\nexport type UnlistenFn = () => void;\n\nexport class Listener {\n  private listeners: CallbackFn[];\n\n  /**\n   * Constructs a listener object.\n   */\n  constructor() {\n    this.listeners = [];\n  }\n\n  /**\n   * Adds a callback to the listener.\n   * Returns a function that will unregister the callback from the listener when called.\n   * @param callback The callback to be registered.\n   * @return The unregister function to remove the callback from the listener.\n   */\n  public listen(callback: CallbackFn): UnlistenFn {\n    this.listeners.push(callback);\n    return () => this.unlisten(callback);\n  }\n\n  /**\n   * Removes a callback from the listener.\n   */\n  public unlisten(callback: CallbackFn): void {\n    const index = this.listeners.indexOf(callback);\n    if (index >= 0) {\n      this.listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Notify takes a function and calls it for every listener.\n   * The listener is supplied as the first argument to the function.\n   * @param {function(callback: Function)} fn Function to call each of the callbacks in the listener with.\n   */\n  public notify(fn: (callback: CallbackFn) => void): void {\n    this.listeners.forEach((l) => {\n      try {\n        fn(l);\n      } catch (e) {\n        if (console && console.error) {\n          console.error(e);\n        }\n      }\n    });\n  }\n}\n\nexport type ListenerMap = Map<string, Listener>;\n","import { isSSR } from '@sajari/react-sdk-utils';\n\nimport {\n  EVENT_ANALYTICS_BODY_RESET,\n  EVENT_ANALYTICS_PAGE_CLOSED,\n  EVENT_ANALYTICS_RESULT_CLICKED,\n  EVENT_RESPONSE_UPDATED,\n  EVENT_RESULT_CLICKED,\n  EVENT_TRACKING_RESET,\n} from '../../events';\nimport { CallbackFn, Listener, ListenerMap } from '../Listener';\nimport { Pipeline } from '../Pipeline';\nimport { Response } from '../Response';\nimport { Tracking } from '../tracking';\n\nconst events = [EVENT_ANALYTICS_PAGE_CLOSED, EVENT_ANALYTICS_BODY_RESET, EVENT_ANALYTICS_RESULT_CLICKED];\n\n/**\n * Analytics is an adaptor which listens for events on Pipeline and\n * Tracking and re-emits them as analytics-based events.\n */\nexport class Analytics {\n  private enabled: boolean;\n\n  private body: string;\n\n  private pipeline: Pipeline;\n\n  private tracking: Tracking;\n\n  private listeners: ListenerMap;\n\n  private longestNonAutocompletedBody: string;\n\n  private longestAutocompletedBody: string;\n\n  private bodyLabel: string;\n\n  private bodyAutocompletedLabel: string;\n\n  /**\n   * Constructs an analytics object that operates on the specified pipeline.\n   */\n  constructor(pipeline: Pipeline, tracking: Tracking) {\n    this.enabled = false;\n    this.body = '';\n\n    this.pipeline = pipeline;\n    this.tracking = tracking;\n\n    this.listeners = new Map(\n      Object.entries({\n        [EVENT_ANALYTICS_PAGE_CLOSED]: new Listener(),\n        [EVENT_ANALYTICS_BODY_RESET]: new Listener(),\n        [EVENT_ANALYTICS_RESULT_CLICKED]: new Listener(),\n      }),\n    );\n\n    // longest values are for sending the users last intended query on reset\n    this.longestNonAutocompletedBody = '';\n    this.longestAutocompletedBody = '';\n\n    // default to working with website pipeline values\n    this.bodyLabel = 'q';\n    this.bodyAutocompletedLabel = 'q';\n\n    if (!isSSR()) {\n      window.addEventListener('beforeunload', this.beforeunload);\n    }\n\n    this.pipeline.listen(EVENT_RESPONSE_UPDATED, this.responseUpdated);\n    this.pipeline.listen(EVENT_RESULT_CLICKED, this.resultClicked);\n    this.tracking.listen(EVENT_TRACKING_RESET, this.resetBody);\n  }\n\n  /**\n   * Register a listener for a specific event.\n   * @param event Event to listen for\n   * @param callback Callback to run when the event happens.\n   * @return The unregister function to remove the callback from the listener.\n   */\n  public listen(event: string, callback: CallbackFn) {\n    if (events.indexOf(event) === -1) {\n      throw new Error(`Unknown event type \"${event}\"`);\n    }\n    return (this.listeners.get(event) as Listener).listen(callback);\n  }\n\n  /**\n   * Runs before the page is closed/navigated away from. Can trigger a ga onPageClose call.\n   */\n  public beforeunload = () => {\n    if (this.enabled && this.body) {\n      (this.listeners.get(EVENT_ANALYTICS_PAGE_CLOSED) as Listener).notify((callback) => {\n        callback(this.body);\n      });\n      this.enabled = false; // TODO(tbillington): unload -> disable!!\n    }\n  };\n\n  /**\n   * Resets the currently held parameters. Can trigger a ga onBodyReset call.\n   */\n  public resetBody = () => {\n    if (this.enabled) {\n      (this.listeners.get(EVENT_ANALYTICS_BODY_RESET) as Listener).notify((callback) => {\n        callback(this.body);\n      });\n\n      this.longestNonAutocompletedBody = '';\n      this.longestAutocompletedBody = '';\n      this.enabled = false;\n    }\n  };\n\n  /**\n   * Runs when the response has been updated. Updates the currently held search parameters.\n   */\n  public responseUpdated = (response: Response) => {\n    if (response.isEmpty() || response.isError()) {\n      return;\n    }\n\n    this.enabled = true;\n\n    const originalBody = (response.getQueryValues() as Map<string, string>).get(this.bodyLabel) || '';\n    const responseBody = (response.getValues() as Map<string, string>).get(this.bodyAutocompletedLabel) || originalBody;\n\n    this.body = responseBody;\n\n    // Here we check the lengths of the non-autocompleted bodies.\n    // We do this because while the user is backspacing their query\n    // the new autocompleted body may be longer than their actual input,\n    // but we want to record their input rather than a completion resulting\n    // from them removing chars.\n    if (originalBody.length >= this.longestNonAutocompletedBody.length) {\n      this.longestNonAutocompletedBody = originalBody;\n      this.longestAutocompletedBody = responseBody;\n    }\n  };\n\n  /**\n   * Runs when a result has been clicked. Can trigger a ga onResultClicked call.\n   */\n  public resultClicked = () => {\n    if (this.enabled && this.body) {\n      (this.listeners.get(EVENT_ANALYTICS_RESULT_CLICKED) as Listener).notify((callback) => {\n        callback(this.body);\n      });\n      this.longestNonAutocompletedBody = '';\n      this.longestAutocompletedBody = '';\n      this.enabled = false;\n    }\n  };\n}\n","/* eslint-disable no-restricted-syntax */\nimport { isFunction, isSSR } from '@sajari/react-sdk-utils';\n\nimport { EVENT_ANALYTICS_BODY_RESET, EVENT_ANALYTICS_PAGE_CLOSED, EVENT_ANALYTICS_RESULT_CLICKED } from '../../events';\nimport { UnlistenFn } from '../Listener';\nimport { Analytics } from './Analytics';\n\nenum GoogleAnalyticsObjects {\n  UniversalAnalytics = '_ua',\n  AnalyticsJS = 'ga',\n  GTag = 'gtag',\n}\n\nconst url = {\n  /**\n   * Convert a query string in to an object\n   */\n  decodeUriArgs(queryStr: string) {\n    const args = {} as { [k: string]: string };\n    const a = queryStr.split('&');\n    for (const i in a) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (a.hasOwnProperty(i)) {\n        const b = a[i].split('=');\n        args[decodeURIComponent(b[0])] = decodeURIComponent(b[1]);\n      }\n    }\n    return args;\n  },\n\n  /**\n   * Convert an arguments object in to a query string\n   */\n  encodeUriArgs(args: { [k: string]: string }) {\n    const queryParts: string[] = [];\n    Object.keys(args).forEach((key) => queryParts.push(`${encodeURIComponent(key)}=${encodeURIComponent(args[key])}`));\n    return queryParts.join('&');\n  },\n\n  /**\n   * Merges query strings or objects into a single query string. Accepts a variable number of query string/objects\n   * to merge. The latter overrides the former.\n   */\n  mergeQueryStr(first: string | { [k: string]: string }, ...rest: Array<string | { [k: string]: string }>) {\n    const args = typeof first === 'string' ? this.decodeUriArgs(first) : first;\n    rest.forEach((arg) => {\n      const next = typeof arg === 'string' ? this.decodeUriArgs(arg) : arg;\n      Object.keys(next).forEach((prop) => {\n        args[prop] = next[prop];\n      });\n    });\n    return this.encodeUriArgs(args);\n  },\n\n  /**\n   * Takes an existing URL and merges additional data into the query string\n   */\n  augmentUri(uri: string, args: { [k: string]: string }) {\n    const m = /^([^?]+)\\?(.+)+$/.exec(uri);\n    if (m) {\n      return `${m[1]}?${this.mergeQueryStr(m[2], args)}`;\n    }\n    return `${uri}?${this.encodeUriArgs(args)}`;\n  },\n\n  /**\n   * Get a parameter from the URL\n   */\n  getURLParameter(name: string) {\n    const value = new RegExp(`[?|&]${name}=([^&;]+?)(&|#|;|$)`).exec(window.location.search) || [undefined, ''];\n\n    return decodeURIComponent((value[1] as string).replace(/\\+/g, '%20')) || null;\n  },\n};\n\nexport class GoogleAnalytics {\n  private id: string | null;\n\n  private param: string;\n\n  private unregisterFunctions: UnlistenFn[] = [];\n\n  /**\n   * Constructs a GoogleAnalytics object.\n   * @param {Analytics} analytics The analytics object to attach to.\n   * @param {string} [id=undefined] The name of the ga global object. Defaults to \"ga\" or \"_ua\" if one isn't supplied.\n   * @param {string} [param=\"q\"] The URL parameter to use to indicate a search. Default to \"q\".\n   */\n  constructor(analytics: Analytics, id?: string, param = 'q') {\n    this.unregisterFunctions.push(analytics.listen(EVENT_ANALYTICS_PAGE_CLOSED, this.onPageClose));\n    this.unregisterFunctions.push(analytics.listen(EVENT_ANALYTICS_BODY_RESET, this.onBodyReset));\n    this.unregisterFunctions.push(analytics.listen(EVENT_ANALYTICS_RESULT_CLICKED, this.onResultClicked));\n\n    if (!isSSR()) {\n      if (id !== undefined) {\n        this.id = id;\n      } else if (isFunction(window[GoogleAnalyticsObjects.AnalyticsJS])) {\n        this.id = GoogleAnalyticsObjects.AnalyticsJS;\n      } else if (isFunction(window[GoogleAnalyticsObjects.UniversalAnalytics])) {\n        this.id = GoogleAnalyticsObjects.UniversalAnalytics;\n      } else if (isFunction(window[GoogleAnalyticsObjects.GTag])) {\n        this.id = GoogleAnalyticsObjects.GTag;\n      } else {\n        this.id = null;\n      }\n    } else {\n      this.id = null;\n    }\n    this.param = param;\n  }\n\n  /**\n   * Stops this object listening for events.\n   */\n  public detatch = () => this.unregisterFunctions.forEach((fn) => fn());\n\n  /**\n   * Sends a page view event if ga is found on the page and we're not in dev mode.\n   */\n  public sendGAPageView(body: string) {\n    if (this.id && !isSSR() && isFunction(window[this.id])) {\n      // Merge the body in with the existing query params in the url\n      const pageAddress = url.augmentUri(\n        // Take only the portion of the url following the domain\n        window.location.href.substring(window.location.origin.length),\n        { [this.param]: body },\n      );\n\n      if (this.id === GoogleAnalyticsObjects.GTag) {\n        window[this.id]('event', 'page_view', {\n          page_location: pageAddress,\n        });\n      } else {\n        window[this.id]('send', 'pageview', pageAddress);\n      }\n    }\n  }\n\n  /**\n   * Callback for when the body has been reset. Calls sendGAPageView.\n   */\n  public onBodyReset = (body: string) => this.sendGAPageView(body);\n\n  /**\n   * Callback for when a result has been clicked. Calls sendGAPageView.\n   */\n  public onResultClicked = (body: string) => this.sendGAPageView(body);\n\n  /**\n   * Callback for when the page has been closed. Calls sendGAPageView.\n   */\n  public onPageClose = (body: string) => this.sendGAPageView(body);\n}\n","/* eslint-disable no-param-reassign */\nimport { isEmpty, isFunction, isString, replaceAll } from '@sajari/react-sdk-utils';\n\nimport { EVENT_OPTIONS_UPDATED, EVENT_SELECTION_UPDATED } from '../../events';\nimport { Listener } from '../Listener';\nimport { FilterOptions, JoinOperator, Options } from './types';\n\n// Escape any characters that will break the request\nconst escapeValue = (input = '') => {\n  let escaped = input;\n  const chars = [','];\n\n  chars.forEach((c) => {\n    escaped = replaceAll(input, c, `\\\\${c}`);\n  });\n\n  return escaped;\n};\n\nconst events = [EVENT_SELECTION_UPDATED, EVENT_OPTIONS_UPDATED];\n\n/**\n * Filter is a helper class for building filters from UI components.\n */\nexport default class FilterBuilder {\n  private current: string[];\n\n  private initial: string[];\n\n  private name: string;\n\n  private group: string | undefined;\n\n  private field: string | undefined;\n\n  private options: Options;\n\n  private multi: boolean;\n\n  private count: boolean;\n\n  private array: boolean;\n\n  private joinOperator: JoinOperator;\n\n  private listeners: { [k: string]: Listener };\n\n  /**\n   * Constructs an instance of Filter.\n   *\n   * @example\n   * const filter = new FilterBuilder({});\n   */\n  constructor({\n    initial = [],\n    joinOperator = 'OR',\n    multi = true,\n    options = {},\n    array = false,\n    name,\n    field,\n    group,\n    count = isEmpty(options),\n  }: FilterOptions) {\n    if (isString(initial)) {\n      initial = [initial];\n    }\n\n    /** @private */\n    this.current = initial;\n    /** @private */\n    this.initial = initial;\n    /** @private */\n    this.name = name;\n    /** @private */\n    this.group = group;\n    /** @private */\n    this.field = field;\n    /** @private */\n    this.count = count;\n    /** @private */\n    this.options = options;\n    /** @private */\n    this.multi = multi;\n    /** @private */\n    this.array = array;\n    /** @private */\n    this.joinOperator = joinOperator;\n    /** @private */\n    this.listeners = {\n      [EVENT_SELECTION_UPDATED]: new Listener(),\n      [EVENT_OPTIONS_UPDATED]: new Listener(),\n    };\n  }\n\n  /**\n   * Register a listener for a specific event.\n   */\n  public listen(event: string, callback: (filter: FilterBuilder) => void): () => void {\n    if (!events.includes(event)) {\n      throw new Error(`Unknown event type \"${event}\"`);\n    }\n    return this.listeners[event].listen(callback);\n  }\n\n  /**\n   * Set the state of the filter.\n   */\n  public set(values: string[], merge = false) {\n    if (merge) {\n      const nonDuplicate = values.filter((v) => !this.current.includes(v));\n      this.current = [...this.current, ...nonDuplicate];\n    } else {\n      this.current = values;\n    }\n\n    this.emitSelectionUpdated();\n  }\n\n  /**\n   * Remove a list of values from the current state\n   */\n  public remove(values: string[]) {\n    this.current = this.current.filter((v) => !values.includes(v));\n    this.emitSelectionUpdated();\n  }\n\n  /**\n   * returns whether the filter is set or not.\n   */\n  public isSet(name: string): boolean {\n    return this.current.includes(name);\n  }\n\n  /**\n   * Set or merge filter options.\n   */\n  public setOptions(options: Options, merge = false) {\n    if (merge) {\n      this.options = { ...this.options, ...options };\n    } else {\n      this.options = options;\n    }\n\n    this.emitOptionsUpdated();\n  }\n\n  public getName() {\n    return this.name;\n  }\n\n  public getGroup() {\n    return this.group;\n  }\n\n  public getField() {\n    return this.field;\n  }\n\n  public getCount() {\n    return this.count;\n  }\n\n  public getOptions() {\n    return this.options;\n  }\n\n  public get() {\n    return this.current;\n  }\n\n  public isArray() {\n    return this.array;\n  }\n\n  public isMulti() {\n    return this.multi;\n  }\n\n  /**\n   * Builds up the filter string from the current filter and it's children.\n   */\n  public filter() {\n    const options = this.current\n      .map((c) => {\n        let f = this.options[c];\n        if (isFunction(f)) {\n          f = f();\n        }\n        if (!isEmpty(f)) {\n          f = escapeValue(f);\n        }\n        if (this.count && f === undefined && c) {\n          f = this.array ? `${this.field} ~ [\"${c}\"]` : `${this.field} = \"${c}\"`;\n        }\n        return f;\n      })\n      .filter(Boolean);\n\n    if (options.length < 2) {\n      return options.join('');\n    }\n\n    return options.map((f) => `(${f})`).join(` ${this.joinOperator} `);\n  }\n\n  public getBuckets() {\n    return Object.entries(this.options)\n      .map(([key, value]) => `${this.name}_${key}:${value}`)\n      .join(',');\n  }\n\n  /**\n   * Reset the current filter to the initial one\n   */\n  public reset() {\n    this.current = [...this.initial];\n    this.emitSelectionUpdated();\n  }\n\n  /**\n   * Emits a selection updated event to the selection updated listener.\n   * @private\n   */\n  protected emitSelectionUpdated() {\n    this.listeners[EVENT_SELECTION_UPDATED].notify((listener) => {\n      listener();\n    });\n  }\n\n  /**\n   * Emits an options updated event to the options updated listener.\n   * @private\n   */\n  protected emitOptionsUpdated() {\n    this.listeners[EVENT_OPTIONS_UPDATED].notify((listener) => {\n      listener();\n    });\n  }\n}\n","import { isArray, roundToStep } from '@sajari/react-sdk-utils';\n\nimport { EVENT_RANGE_UPDATED } from '../../events';\nimport { Listener } from '../Listener';\nimport { Range, RangeFilterOptions } from './types';\n\nconst events = [EVENT_RANGE_UPDATED];\n\nexport default class RangeFilterBuilder {\n  private initial: Range | null;\n\n  private range: Range | null;\n\n  private name: string;\n\n  private group: string | undefined;\n\n  private field: string;\n\n  private min: number;\n\n  private max: number;\n\n  private step: number;\n\n  private frozen: boolean;\n\n  private aggregate: boolean;\n\n  private listeners: { [k: string]: Listener };\n\n  private formatter: Required<RangeFilterOptions>['formatter'];\n\n  constructor({\n    field,\n    name,\n    group,\n    aggregate = true,\n    initial,\n    min = 0,\n    max = aggregate ? 0 : 100,\n    step = 1,\n    formatter = (value: Range) => value.map((v) => roundToStep(v, step)) as Range,\n  }: RangeFilterOptions) {\n    if (typeof initial === 'undefined') {\n      this.initial = aggregate ? null : [min, max];\n    } else {\n      this.initial = initial;\n    }\n\n    this.range = this.initial;\n    this.name = name;\n    this.group = group;\n    this.field = field;\n    this.formatter = formatter;\n    this.min = min;\n    this.max = max;\n    this.step = step;\n    this.frozen = false;\n    this.aggregate = aggregate;\n    this.listeners = {\n      [EVENT_RANGE_UPDATED]: new Listener(),\n    };\n  }\n\n  /**\n   * Register a listener for a specific event.\n   */\n  public listen(event: string, callback: (filter: RangeFilterBuilder) => void): () => void {\n    if (!events.includes(event)) {\n      throw new Error(`Unknown event type \"${event}\"`);\n    }\n\n    return this.listeners[event].listen(callback);\n  }\n\n  public get() {\n    return this.range;\n  }\n\n  public set(range: Range | null, emitEvent = true) {\n    if (this.frozen) {\n      return;\n    }\n    this.range = range ? this.formatter(range) : range;\n\n    if (emitEvent) {\n      this.emitRangeUpdated();\n    }\n  }\n\n  public getName() {\n    return this.name;\n  }\n\n  public getGroup() {\n    return this.group;\n  }\n\n  public getField() {\n    return this.field;\n  }\n\n  public getFrozen() {\n    return this.frozen;\n  }\n\n  public setMin(value: number) {\n    if (!this.frozen) {\n      this.min = value;\n    }\n  }\n\n  public setMax(value: number) {\n    if (!this.frozen) {\n      this.max = value;\n    }\n  }\n\n  public getMinMax() {\n    return [this.min, this.max];\n  }\n\n  public getStep() {\n    return this.step;\n  }\n\n  /**\n   * Builds up the filter string from the current state.\n   */\n  public filter() {\n    if (!this.range) {\n      return '';\n    }\n\n    return `${this.field} >= ${this.range[0]} AND ${this.field} <= ${this.range[1]}`;\n  }\n\n  public isAggregate() {\n    return this.aggregate;\n  }\n\n  public setFrozen(frozen: boolean) {\n    this.frozen = frozen;\n  }\n\n  /**\n   * Check if the current range is different to the initial value\n   */\n  public hasChanged() {\n    if (!this.range || !this.initial) {\n      return this.range === this.initial;\n    }\n\n    return this.range[0] !== this.initial[0] || this.range[1] !== this.initial[1];\n  }\n\n  /**\n   * Reset the current state to the initial value\n   */\n  public reset(emitEvent = true) {\n    if (this.frozen) {\n      return;\n    }\n    this.range = isArray(this.initial) ? [...this.initial] : this.initial;\n\n    if (emitEvent) {\n      this.emitRangeUpdated();\n    }\n  }\n\n  public format(value: Range) {\n    return this.formatter(value);\n  }\n\n  /**\n   * Emits a range updated event to the selection updated listener.\n   * @private\n   */\n  protected emitRangeUpdated() {\n    this.listeners[EVENT_RANGE_UPDATED].notify((listener) => {\n      listener(this);\n    });\n  }\n}\n","import { groupBy, isEmpty } from '@sajari/react-sdk-utils';\n\nimport FilterBuilder from './FilterBuilder';\nimport RangeFilterBuilder from './RangeFilterBuilder';\n\ntype Type = 'filter' | 'countFilters';\n\n// Group expressions into an ARRAY_MATCH\nconst buildArrayMatch = (expressions: Array<string>) => {\n  let list = expressions.filter(Boolean);\n\n  if (list.length > 1) {\n    list = list.map((expression) => `(${expression})`);\n  }\n\n  return `ARRAY_MATCH(${list.join(' AND ')})`;\n};\n\n// Group filters together using ARRAY_MATCH\nexport function groupFilters(\n  filters: Array<FilterBuilder | RangeFilterBuilder>,\n  type: Type,\n  joinOperator: string,\n): string {\n  let list = filters.map((f) => ({\n    group: f.getGroup(),\n    field: f.getField(),\n    expression: f.filter(),\n    count: f instanceof FilterBuilder && f.getCount(),\n  }));\n\n  // For filter we only want defined expressions\n  if (type === 'filter') {\n    list = list.filter(({ expression }) => Boolean(expression));\n  }\n\n  // Group and flatten the filter expressions into groups\n  const groups = Object.entries(groupBy(list, 'group'))\n    .filter(([group]) => Boolean(group))\n    .reduce(\n      (out, [key, f]: [string, typeof list]) => ({\n        ...out,\n        [key]: f.map(({ expression }) => expression),\n      }),\n      {},\n    ) as Record<string, Array<string>>;\n\n  // Build filter expression\n  if (type === 'filter') {\n    // Build the list of non grouped filters\n    const basicFilters = list.filter(({ group, count }) => !group && !count).map(({ expression }) => `(${expression})`);\n\n    return Object.entries(groups)\n      .reduce((out, [group, expressions]) => {\n        if (group !== 'undefined' && !isEmpty(expressions)) {\n          return [...out, buildArrayMatch(expressions)];\n        }\n\n        return out;\n      }, [])\n      .concat(...basicFilters)\n      .join(joinOperator);\n  }\n\n  // Build countFilters expression (has to be one item per filter)\n  return list\n    .filter(({ field, count }) => !isEmpty(field) && count)\n    .map(({ group, expression, count }) => {\n      if (group && !isEmpty(groups[group])) {\n        return buildArrayMatch(groups[group]);\n      }\n\n      return count ? expression : null;\n    })\n    .filter((e) => e !== null)\n    .join(joinOperator);\n}\n","import { EVENT_OPTIONS_UPDATED, EVENT_RANGE_UPDATED, EVENT_SELECTION_UPDATED } from '../../events';\nimport { Listener } from '../Listener';\nimport FilterBuilder from './FilterBuilder';\nimport RangeFilterBuilder from './RangeFilterBuilder';\nimport { JoinOperator } from './types';\nimport { groupFilters } from './utils';\n\nconst events = [EVENT_SELECTION_UPDATED, EVENT_OPTIONS_UPDATED, EVENT_RANGE_UPDATED];\n\n/**\n * CombineFilters is a helper for combining multiple Filter instances\n * into one.\n *\n * Whenever any of the combined filters are updated, the events are\n * propagated up to the returned \"root\" filter.\n *\n * @param filters Array of filters to combine.\n * @param  [joinOperator=\"AND\"] Operator to apply between them (\"AND\" | \"OR\").\n * @return The resulting Filter.\n */\nexport default function combineFilters(\n  filters: (FilterBuilder | RangeFilterBuilder)[],\n  joinOperator: JoinOperator = 'AND',\n) {\n  const listeners = {\n    [EVENT_SELECTION_UPDATED]: new Listener(),\n    [EVENT_OPTIONS_UPDATED]: new Listener(),\n    [EVENT_RANGE_UPDATED]: new Listener(),\n  };\n  const removeListenerFuncs: (() => void)[] = [];\n\n  function listen(event: string, callback: (filter: FilterBuilder) => void): () => void {\n    if (events.indexOf(event) === -1) {\n      throw new Error(`Unknown event type \"${event}\"`);\n    }\n    return listeners[event].listen(callback);\n  }\n\n  filters.forEach((f) => {\n    if (f instanceof FilterBuilder) {\n      removeListenerFuncs.push(\n        f.listen(EVENT_SELECTION_UPDATED, () => {\n          listeners[EVENT_SELECTION_UPDATED].notify((listener) => {\n            listener(f);\n          });\n        }),\n        f.listen(EVENT_OPTIONS_UPDATED, () => {\n          listeners[EVENT_OPTIONS_UPDATED].notify((listener) => {\n            listener(f);\n          });\n        }),\n      );\n    }\n    if (f instanceof RangeFilterBuilder) {\n      removeListenerFuncs.push(\n        f.listen(EVENT_RANGE_UPDATED, () => {\n          listeners[EVENT_RANGE_UPDATED].notify((listener) => {\n            listener(f);\n          });\n        }),\n      );\n    }\n  });\n\n  function removeChildFilterListeners() {\n    removeListenerFuncs.forEach((fn) => fn());\n  }\n\n  // Generate filter field from non aggregate count Filter(s) for Variables object\n  const filter = () => groupFilters(filters, 'filter', ` ${joinOperator} `);\n\n  // Generate buckets field from non aggregate count Filter(s) for Variables object\n  const buckets = () =>\n    filters\n      .filter((f) => f instanceof FilterBuilder && !f.getCount())\n      .map((f) => f instanceof FilterBuilder && f.getBuckets())\n      .filter(Boolean)\n      .join(',');\n\n  // Generate countFilters field from aggregate count Filter(s) for Variables object\n  const countFilters = () => groupFilters(filters, 'countFilters', ',');\n\n  // Generate count field from aggregate count Filter(s) for Variables object\n  const count = () =>\n    filters\n      .filter((f) => f instanceof FilterBuilder && f.getCount())\n      .map((f) => f instanceof FilterBuilder && f.getField())\n      .filter(Boolean)\n      .join(',');\n\n  // Generate min field from range Filter(s) for Variables object\n  const min = () =>\n    filters\n      .filter((f) => f instanceof RangeFilterBuilder && f.isAggregate())\n      .map((f) => f.getField())\n      .join(',');\n\n  // Generate max field from range Filter(s) for Variables object\n  const max = () =>\n    filters\n      .filter((f) => f instanceof RangeFilterBuilder && f.isAggregate())\n      .map((f) => f.getField())\n      .join(',');\n\n  return { filter, listen, buckets, countFilters, count, removeChildFilterListeners, max, min };\n}\n","import { Aggregates, RequestError, Result } from '@sajari/sdk-js';\n\nexport type ResponseMap = Map<string, number | Aggregates | Result[]>;\n\nexport class Response {\n  private error: RequestError | null;\n\n  private queryValues?: Map<string, string>;\n\n  private response?: ResponseMap;\n\n  private values?: Map<string, string>;\n\n  /**\n   * Constructs a Response object.\n   * @param error\n   * @param queryValues\n   * @param response\n   * @param values\n   */\n  constructor(\n    error: RequestError | null,\n    queryValues?: Map<string, string>,\n    response?: ResponseMap,\n    values?: Map<string, string>,\n  ) {\n    this.error = error;\n    this.queryValues = queryValues;\n    this.response = response;\n    this.values = values;\n  }\n\n  /**\n   * Is this response empty?\n   */\n  public isEmpty(): boolean {\n    return (\n      this.error === null && this.response === undefined && this.values === undefined && this.queryValues === undefined\n    );\n  }\n\n  /**\n   * Is this response an error?\n   */\n  public isError(): boolean {\n    return this.error !== null;\n  }\n\n  /**\n   * The error associated with this response.\n   */\n  public getError(): RequestError | null {\n    return this.error;\n  }\n\n  /**\n   * Return the query values used in the search which created this response.\n   */\n  public getQueryValues(): Map<string, string> | undefined {\n    return this.queryValues;\n  }\n\n  /**\n   * Returns the response, which includes results and aggregates etc.\n   */\n  public getResponse(): ResponseMap | undefined {\n    return this.response;\n  }\n\n  /**\n   * Return the pipeline values returned by the search.\n   */\n  public getValues(): Map<string, string> | undefined {\n    return this.values;\n  }\n\n  /**\n   * Return results from the response.\n   */\n  public getResults(): Result[] | undefined {\n    return this.response !== undefined ? (this.response.get('results') as Result[]) : undefined;\n  }\n\n  /**\n   * Return the total number of results.\n   */\n  public getTotalResults(): number | undefined {\n    return this.response !== undefined ? (this.response.get('totalResults') as number) : undefined;\n  }\n\n  /**\n   * Return time from the response.\n   */\n  public getTime(): number | undefined {\n    return this.response !== undefined ? (this.response.get('time') as number) : undefined;\n  }\n\n  /**\n   * Return the aggregates in the response.\n   */\n  public getAggregates(): Aggregates | undefined {\n    if (this.response === undefined) {\n      return undefined;\n    }\n\n    const aggregates = this.response.get('aggregates');\n    if (aggregates === undefined) {\n      return undefined;\n    }\n    return aggregates as Aggregates;\n  }\n\n  /**\n   * Return the aggregateFilters in the response.\n   */\n  public getAggregateFilters(): Aggregates | undefined {\n    if (this.response === undefined) {\n      return undefined;\n    }\n\n    const aggregates = this.response.get('aggregateFilters');\n    if (aggregates === undefined) {\n      return undefined;\n    }\n    return aggregates as Aggregates;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable class-methods-use-this */\n/* eslint-disable no-underscore-dangle */\nimport { Session } from '@sajari/sdk-js';\n\nimport { EVENT_TRACKING_RESET } from '../../events';\nimport { CallbackFn, Listener, ListenerMap, UnlistenFn } from '../Listener';\n\nconst events = [EVENT_TRACKING_RESET];\n\nexport type TrackingValues = Record<string, string>;\n\nexport class Tracking {\n  public clientTracking: Session | null = null;\n\n  private listeners: ListenerMap;\n\n  public field: string;\n\n  constructor() {\n    this.listeners = new Map(\n      Object.entries({\n        [EVENT_TRACKING_RESET]: new Listener(),\n      }),\n    );\n  }\n\n  /**\n   * Register a listener for a specific event.\n   * @param event Event to listen for\n   * @param callback Callback to run when the event happens.\n   * @return The unregister function to remove the callback from the listener.\n   */\n  public listen(event: string, callback: CallbackFn): UnlistenFn {\n    if (events.indexOf(event) === -1) {\n      throw new Error(`Unknown event type \"${event}\"`);\n    }\n    return (this.listeners.get(event) as Listener).listen(callback);\n  }\n\n  /**\n   * Emits a tracking reset event to the tracking reset event listener.\n   */\n  private emitTrackingReset(values: TrackingValues) {\n    (this.listeners.get(EVENT_TRACKING_RESET) as Listener).notify((listener) => {\n      listener(values);\n    });\n  }\n\n  /**\n   * Reset the tracking.\n   * @param variables Key-value pair parameters to use in the pipeline.\n   */\n  public reset(variables?: TrackingValues) {\n    (this.clientTracking as Session).reset();\n\n    if (variables !== undefined) {\n      // eslint-disable-next-line no-underscore-dangle\n      this.emitTrackingReset(variables);\n    }\n  }\n\n  /**\n   * Construct a tracking session to be used in a search.\n   * @param variables Key-value pair parameters to use in the pipeline.\n   */\n  public next(variables: TrackingValues) {\n    if (this.clientTracking === null) {\n      throw new Error('clientTracking is null');\n    }\n\n    return this.clientTracking.next(variables);\n  }\n}\n","import Cookies from 'js-cookie';\n\nexport const getTrackingData = () => {\n  const data = {} as { [k: string]: string };\n  const ga = Cookies.get('_ga');\n  if (ga) {\n    data.ga = ga;\n  }\n  const sjID = Cookies.get('sjID');\n  if (sjID) {\n    data.sjID = sjID;\n  }\n  return data;\n};\n","import { DefaultSession, InteractiveSession, TrackingType } from '@sajari/sdk-js';\n\nimport { Tracking } from './Tracking';\nimport { getTrackingData } from './utils';\n\nexport class ClickTracking extends Tracking {\n  /**\n   * Construct a ClickTracking instance.\n   * @param field Field to use for click token generation.\n   * @param qParam Value to use for full-text query param.\n   */\n  constructor(field = 'url', qParam = 'q') {\n    super();\n\n    this.field = field;\n    this.clientTracking = new InteractiveSession(\n      qParam,\n      new DefaultSession(TrackingType.Click, this.field, getTrackingData()),\n    );\n  }\n}\n","import { DefaultSession, TrackingType } from '@sajari/sdk-js';\n\nimport { Tracking } from './Tracking';\nimport { getTrackingData } from './utils';\n\nexport class NoTracking extends Tracking {\n  /**\n   * Construct a NoTracking instance.\n   */\n  constructor() {\n    super();\n\n    this.field = '_id';\n    this.clientTracking = new DefaultSession(TrackingType.None, this.field, getTrackingData());\n  }\n}\n","import { DefaultSession, TrackingType } from '@sajari/sdk-js';\n\nimport { Tracking } from './Tracking';\nimport { getTrackingData } from './utils';\n\nexport class PosNegTracking extends Tracking {\n  /**\n   * Construct a PosNegTracking instance.\n   * @param field Field to use for click token generation.\n   */\n  constructor(field = 'url') {\n    super();\n\n    this.field = field;\n    this.clientTracking = new DefaultSession(TrackingType.PosNeg, this.field, getTrackingData());\n  }\n}\n","/* eslint-disable no-underscore-dangle */\nimport { isSSR, isString } from '@sajari/react-sdk-utils';\nimport { Client } from '@sajari/sdk-js';\n\nimport { EVENT_RESPONSE_UPDATED, EVENT_RESULT_CLICKED, EVENT_SEARCH_SENT } from '../events';\nimport { Analytics, GoogleAnalytics } from './analytics';\nimport { CallbackFn, Listener, ListenerMap, UnlistenFn } from './Listener';\nimport { Response } from './Response';\nimport { ClickTracking, NoTracking, PosNegTracking } from './tracking';\n\nconst events = [EVENT_SEARCH_SENT, EVENT_RESPONSE_UPDATED, EVENT_RESULT_CLICKED];\n\ntype QueryPipeline = ReturnType<Client['pipeline']>;\n\nexport class Pipeline {\n  public config: {\n    account: string;\n    collection: string;\n    endpoint?: string;\n    key?: string;\n    secret?: string;\n  };\n\n  private pipeline: QueryPipeline;\n\n  private client: Client;\n\n  private tracking: ClickTracking | PosNegTracking | NoTracking;\n\n  private listeners: ListenerMap;\n\n  private searchCount: number;\n\n  private response: Response = new Response(null);\n\n  private analytics: Analytics;\n\n  /**\n   * Constructs a Pipeline object.\n   * @param config Account, Collection config\n   * @param name Name of the pipeline.\n   * @param tracking Default tracking to use in searches.\n   * @param analyticsAdapters\n   */\n  constructor(\n    config: {\n      account: string;\n      collection: string;\n      endpoint?: string;\n      key?: string;\n      secret?: string;\n    },\n    name: string | { name: string; version?: string },\n    tracking: ClickTracking | PosNegTracking | NoTracking = new NoTracking(),\n    analyticsAdapters = [GoogleAnalytics],\n  ) {\n    const { account, collection, endpoint, key, secret } = config;\n    this.config = config;\n\n    const p: { name?: string; version?: string } = {\n      name: undefined,\n      version: undefined,\n    };\n    if (isString(name)) {\n      p.name = name;\n    } else if ('name' in name) {\n      p.name = name.name;\n      p.version = name.version;\n    }\n\n    // Only use key/secret in SSR contexts\n    if (isSSR()) {\n      this.client = new Client(account, collection, endpoint, key, secret);\n    } else {\n      this.client = new Client(account, collection, endpoint);\n    }\n\n    this.pipeline = this.client.pipeline(p.name as string, p.version);\n    this.tracking = tracking;\n    this.listeners = new Map([\n      [EVENT_SEARCH_SENT, new Listener()],\n      [EVENT_RESPONSE_UPDATED, new Listener()],\n      [EVENT_RESULT_CLICKED, new Listener()],\n    ]);\n    this.searchCount = 0;\n    this.response = new Response(null);\n\n    this.analytics = new Analytics(this, this.tracking);\n    analyticsAdapters.forEach((Adapter) => {\n      // eslint-disable-next-line no-new\n      new Adapter(this.analytics);\n    });\n  }\n\n  /**\n   * Register a listener for a specific event.\n   * @param event Event to listen for\n   * @param callback Callback to run when the event happens.\n   * @return The unregister function to remove the callback from the listener.\n   */\n  public listen(event: string, callback: CallbackFn): UnlistenFn {\n    if (events.indexOf(event) === -1) {\n      throw new Error(`Unknown event type \"${event}\"`);\n    }\n    return (this.listeners.get(event) as Listener).listen(callback);\n  }\n\n  /**\n   * Emits a search event to the search event listener.\n   * @private\n   */\n  public _emitSearchSent(variables: { [k: string]: string }): void {\n    (this.listeners.get(EVENT_SEARCH_SENT) as Listener).notify((listener) => {\n      listener(variables);\n    });\n  }\n\n  /**\n   * Emits a results event to the results event listener.\n   * @private\n   */\n  public _emitResponseUpdated(response: Response): void {\n    (this.listeners.get(EVENT_RESPONSE_UPDATED) as Listener).notify((listener) => {\n      listener(response);\n    });\n  }\n\n  /**\n   * Emits a result clicked event to the results clicked event listeners.\n   * @param value Value to send to the listeners.\n   */\n  public emitResultClicked(value: string): void {\n    (this.listeners.get(EVENT_RESULT_CLICKED) as Listener).notify((listener) => {\n      listener(value);\n    });\n  }\n\n  /**\n   * Perform a search.\n   * @param variables Key-value parameters to pass to the pipeline.\n   */\n  public search(variables: { [k: string]: string }): void {\n    this.searchCount += 1;\n    const currentSearch = this.searchCount;\n\n    this.pipeline\n      .search(variables, this.tracking.next(variables))\n      .then(([response, responseValues]) => {\n        if (currentSearch < this.searchCount) {\n          return;\n        }\n\n        this.response = new Response(\n          null,\n          new Map(Object.entries(variables)),\n          new Map(Object.entries(response)),\n          new Map(Object.entries(responseValues)),\n        );\n      })\n      .catch((error) => {\n        // TODO: Should we have a debug option to enable console logging?\n        // eslint-disable-next-line no-console\n        console.error(error);\n\n        if (currentSearch < this.searchCount) {\n          return;\n        }\n\n        this.response = new Response(error, new Map(Object.entries(variables)), undefined, undefined);\n      })\n      .finally(() => {\n        this._emitResponseUpdated(this.response);\n      });\n    this._emitSearchSent(variables);\n  }\n\n  /**\n   * Clears the error, response, and response variables from this object.\n   * @param variables Key-value pair parameters.\n   */\n  public clearResponse(variables: { [k: string]: string }): void {\n    this.tracking.next(variables);\n    this.searchCount += 1;\n    this.response = new Response(null);\n    this._emitResponseUpdated(this.response);\n  }\n\n  /**\n   * The current response.\n   */\n  public getResponse(): Response {\n    return this.response;\n  }\n\n  /**\n   * The analytics adaptor connected to this pipeline.\n   */\n  public getAnalytics(): Analytics {\n    return this.analytics;\n  }\n\n  /**\n   * The underlying client\n   */\n  public getClient(): Client {\n    return this.client;\n  }\n\n  /**\n   * The tracking instance\n   */\n  public getTracking(): ClickTracking | PosNegTracking | NoTracking {\n    return this.tracking;\n  }\n}\n","/* eslint-disable no-underscore-dangle */\nimport { defaultConfig } from '../Config';\nimport { EVENT_VALUES_UPDATED } from '../events';\nimport { Listener, ListenerMap } from './Listener';\n\nexport type VariableFn = () => string;\nexport type VariablesMap = Map<string, string | string[] | number | boolean | VariableFn>;\nexport interface VariablesObject {\n  [k: string]: string | string[] | number | boolean | VariableFn | undefined;\n}\nexport type CallbackFn = (variables: VariablesObject, set: (variables: VariablesObject) => void) => void;\n\nexport class Variables {\n  private variables: VariablesMap;\n\n  private listeners: ListenerMap;\n\n  /**\n   * Constructor for Variables object.\n   * @param variables Initial variables.\n   */\n  constructor(variables: { [k: string]: string | string[] | number | boolean | VariableFn } = {}) {\n    this.listeners = new Map([[EVENT_VALUES_UPDATED, new Listener()]]);\n    this.variables = new Map(\n      Object.entries({\n        [defaultConfig.qParam]: '',\n        [defaultConfig.resultsPerPageParam]: 15,\n        ...variables,\n      }),\n    );\n  }\n\n  /**\n   * Register a listener for a specific event.\n   * @param event Event to listen for\n   * @param callback Callback to run when the event happens.\n   */\n  public listen(event: string, callback: CallbackFn) {\n    if (event !== EVENT_VALUES_UPDATED) {\n      throw new Error(`Unknown event type \"${event}\"`);\n    }\n    return (this.listeners.get(event) as Listener).listen(callback);\n  }\n\n  /**\n   * Merge variables into the variable map.\n   *\n   * Set a variable to undefined to remove it.\n   */\n  public set(variables: VariablesObject) {\n    this._set(variables);\n    this._emitUpdated(variables);\n  }\n\n  /**\n   * get returns the current variables.\n   */\n  public get(): { [k: string]: string } {\n    const variables = {} as { [k: string]: string };\n\n    this.variables.forEach((variable, key) => {\n      if (typeof variable === 'function') {\n        variables[key] = variable();\n      } else if (Array.isArray(variable)) {\n        variables[key] = variable.join(',');\n      } else {\n        variables[key] = String(variable);\n      }\n    });\n    return variables;\n  }\n\n  /**\n   * Emits an event to notify listener that the variables have been updated.\n   *\n   * @private\n   */\n  private _emitUpdated(changes: VariablesObject) {\n    (this.listeners.get(EVENT_VALUES_UPDATED) as Listener).notify((listener) =>\n      listener(changes, (variables: VariablesObject) => this._set(variables)),\n    );\n  }\n\n  /**\n   * Sets variables without triggering an event, internal use only.\n   */\n  private _set(variables: VariablesObject) {\n    Object.keys(variables).forEach((key) => {\n      if (variables[key] === undefined) {\n        this.variables.delete(key);\n      } else {\n        this.variables.set(key, variables[key] as string | VariableFn);\n      }\n    });\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Config } from './Config';\nimport { FilterBuilder, Pipeline, RangeFilterBuilder, Response, Variables } from './controllers';\n\nexport type SearchFn = (query?: string, override?: boolean) => void;\nexport type ClearFn = (variables?: { [k: string]: string | undefined }) => void;\nexport type ResultClickedFn = (url: string) => void;\nexport type PaginateFn = (page: number) => void;\n\nexport interface PipelineContextState {\n  variables: Variables;\n  pipeline: Pipeline;\n  response: Response | null;\n  query: string;\n  completion: string;\n  suggestions: string[];\n  config: Config;\n  search: SearchFn;\n  clear: ClearFn;\n  fields?: FieldDictionary;\n  searching: boolean;\n  filters?: (FilterBuilder | RangeFilterBuilder)[];\n}\n\nexport interface ProviderPipelineConfig {\n  pipeline: Pipeline;\n  variables?: Variables;\n  config?: Config;\n  fields?: FieldDictionary;\n  filters?: (FilterBuilder | RangeFilterBuilder)[];\n}\n\nexport interface ProviderPipelineState {\n  response: Response | null;\n  query: string;\n  config: Config;\n  completion: string;\n  suggestions: string[];\n}\n\nexport interface SearchProviderValues {\n  search: ProviderPipelineConfig;\n  autocomplete?: ProviderPipelineConfig;\n  defaultFilter?: string;\n  searchOnLoad?: boolean;\n  initialResponse?: string;\n}\n\nexport interface PipelineProviderState {\n  search: ProviderPipelineState;\n  autocomplete: ProviderPipelineState;\n}\n\nexport interface Context {\n  search: PipelineContextState;\n  autocomplete: PipelineContextState;\n  resultClicked: ResultClickedFn;\n  paginate: PaginateFn;\n}\n\ntype Field = ((data: Record<string, any>) => any) | string | string[] | false;\nexport class FieldDictionary {\n  id?: Field;\n\n  url?: Field;\n\n  title?: Field;\n\n  subtitle?: Field;\n\n  description?: Field;\n\n  image?: Field;\n\n  // e-commerce related fields\n\n  price?: Field;\n\n  originalPrice?: Field;\n\n  rating?: Field;\n\n  constructor(input?: FieldDictionary) {\n    const {\n      id = '_id',\n      url = 'url',\n      title = 'title',\n      subtitle = 'url',\n      description = 'description',\n      image = 'image',\n      price = 'price',\n      originalPrice = 'originalPrice',\n      rating = 'rating',\n    } = input ?? {};\n\n    this.id = id;\n    this.url = url;\n    this.title = title;\n    this.subtitle = subtitle;\n    this.description = description;\n    this.image = image;\n    this.price = price;\n    this.originalPrice = originalPrice;\n    this.rating = rating;\n  }\n}\n","/* eslint-disable import/named */\n/* eslint-disable @typescript-eslint/no-shadow */\nimport { createContext, isEmpty, isString } from '@sajari/react-sdk-utils';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\n\nimport { Config, defaultConfig } from './Config';\nimport {\n  ClickTracking,\n  FilterBuilder,\n  FilterOptions,\n  Pipeline,\n  PosNegTracking,\n  Range,\n  RangeFilterBuilder,\n  RangeFilterOptions,\n  Response,\n  Variables,\n} from './controllers';\nimport combineFilters from './controllers/filters/combineFilters';\nimport { UnlistenFn } from './controllers/Listener';\nimport { EVENT_RANGE_UPDATED, EVENT_RESPONSE_UPDATED, EVENT_SELECTION_UPDATED, EVENT_VALUES_UPDATED } from './events';\nimport {\n  Context,\n  FieldDictionary,\n  PipelineProviderState,\n  ProviderPipelineConfig,\n  ProviderPipelineState,\n  SearchProviderValues,\n} from './types';\n\nconst updateState = (query: string, responseValues: Map<string, string> | undefined, config: Config) => {\n  const completion = query && responseValues ? responseValues.get(config.qParam) || '' : '';\n  let suggestions: string[] = [];\n  if (responseValues) {\n    suggestions = (responseValues.get(config.qSuggestionsParam) || '')\n      .split(',')\n      .filter((s) => s.length > 0)\n      .slice(0, config.maxSuggestions);\n  }\n\n  return {\n    completion,\n    query,\n    suggestions,\n  };\n};\n\nconst responseUpdatedListener = (variables: Variables, config: Config, response: Response) => {\n  const query = variables.get()[config.qParam] || '';\n  const responseValues = response.getValues();\n\n  return updateState(query, responseValues, config);\n};\n\nconst valuesUpdatedListener = (variables: Variables, pipeline: Pipeline, config: Config) => {\n  const query = variables.get()[config.qParam] || '';\n  const responseValues = pipeline.getResponse().getValues();\n\n  return updateState(query, responseValues, config);\n};\n\nconst [Provider, useContext] = createContext<Context>({\n  strict: true,\n  name: 'PipelineContext',\n});\n\nconst defaultState: ProviderPipelineState = {\n  response: null,\n  query: '',\n  completion: '',\n  suggestions: [],\n  config: defaultConfig,\n};\n\n// Map a serialized Response object back into a Response\nconst parseResponse = (initialResponse?: string) => {\n  if (!isString(initialResponse) || isEmpty(initialResponse)) {\n    return null;\n  }\n\n  const { queryValues = {}, response = {}, values = {} } = JSON.parse(initialResponse);\n\n  return new Response(\n    null,\n    new Map(Object.entries(queryValues)),\n    new Map(Object.entries(response)),\n    new Map(Object.entries(values)),\n  );\n};\n\nconst ContextProvider: React.FC<SearchProviderValues> = ({\n  children,\n  search,\n  autocomplete: autocompleteProp,\n  defaultFilter,\n  searchOnLoad,\n  initialResponse: initialResponseProp,\n}) => {\n  const initialResponse = parseResponse(initialResponseProp);\n  const [searching, setSearching] = useState(false);\n  const [autocompleteSearching, setAutocompleteSearching] = useState(false);\n  const [searchState, setSearchState] = useState({ ...defaultState, response: initialResponse });\n  const [autocompleteState, setAutocompleteState] = useState(defaultState);\n  const [configDone, setConfigDone] = useState(false);\n  const searchTimer = useRef<ReturnType<typeof setTimeout>>();\n  const searchAutocompleteTimer = useRef<ReturnType<typeof setTimeout>>();\n  const autocomplete = useRef(autocompleteProp);\n  const variables = useRef(search.variables ?? new Variables());\n  const autocompleteVariables = useRef(autocompleteProp?.variables ?? new Variables());\n  // Map the initial response\n  let response = search.pipeline.getResponse();\n  if (response.isEmpty() && initialResponse !== null) {\n    response = initialResponse;\n  }\n\n  if (!search.variables && !configDone) {\n    // For destructing down below (searchFn, clear, handlePaginate)\n    Object.assign(search, { variables: variables.current });\n  }\n  if (autocompleteProp && !autocompleteProp.variables && !configDone) {\n    // For destructing down below (searchFn, clear, handlePaginate)\n    Object.assign(autocompleteProp, { variables: autocompleteVariables.current });\n  }\n\n  if (!configDone) {\n    const filter = combineFilters(search.filters ?? []);\n    const variablesFilterString = variables.current.get().filter ?? '';\n    const defaultFilterString = defaultFilter?.toString() ?? '';\n\n    variables.current.set({\n      filter: () => {\n        const expression = filter.filter();\n        return [defaultFilterString, variablesFilterString, isEmpty(expression) ? '_id != \"\"' : expression]\n          .filter(Boolean)\n          .join(' AND ');\n      },\n      countFilters: () => filter.countFilters(),\n      buckets: () => filter.buckets(),\n      count: () => filter.count(),\n      min: () => filter.min(),\n      max: () => filter.max(),\n    });\n  }\n\n  const searchFn = useCallback(\n    (key: 'search' | 'autocomplete') => (inputQuery?: string, override = false) => {\n      const func = key === 'autocomplete' ? autocomplete.current : search;\n      const state = key === 'autocomplete' ? autocompleteState : searchState;\n      const setSearchingState = key === 'autocomplete' ? setAutocompleteSearching : setSearching;\n      const timer = key === 'autocomplete' ? searchAutocompleteTimer : searchTimer;\n      setSearchingState(true);\n      setSearchState((state) => ({ ...state, query: inputQuery ?? state.query }));\n      const { pipeline, variables } = func as Required<ProviderPipelineConfig>;\n      const { config } = state;\n\n      const text = {\n        [config.qParam]: inputQuery ?? variables.get()[config.qParam],\n        [config.qOverrideParam]: undefined,\n        [config.pageParam]: undefined,\n      };\n\n      // TODO(tuand): ask the backend the use of this property\n      if (override) {\n        text[config.qOverrideParam] = 'true';\n      }\n\n      variables.set(text);\n\n      if (timer.current) {\n        clearTimeout(timer.current);\n      }\n\n      timer.current = setTimeout(() => {\n        pipeline.search(variables.get());\n      }, 50);\n    },\n    [],\n  );\n\n  useEffect(() => {\n    const mergedConfig = { ...defaultConfig, ...search.config };\n\n    setSearchState((state) => ({\n      ...state,\n      response,\n      query: variables.current.get()[mergedConfig.qParam] || '',\n      config: mergedConfig,\n    }));\n\n    setAutocompleteState((state) => ({\n      ...state,\n      config: { ...defaultConfig, ...search.config },\n    }));\n\n    const unregisterFunctions: UnlistenFn[] = [];\n\n    if (search.filters) {\n      const filter = combineFilters(search.filters);\n\n      unregisterFunctions.push(\n        filter.listen(EVENT_SELECTION_UPDATED, () => searchFn('search')()),\n        filter.listen(EVENT_RANGE_UPDATED, () => searchFn('search')()),\n        filter.removeChildFilterListeners,\n      );\n    }\n\n    let searchRenderTimer: ReturnType<typeof setTimeout>;\n\n    unregisterFunctions.push(\n      search.pipeline.listen(EVENT_RESPONSE_UPDATED, (response: Response) => {\n        clearTimeout(searchRenderTimer);\n\n        searchRenderTimer = setTimeout(\n          () => {\n            setSearching(false);\n            setSearchState((prevState) => ({\n              ...prevState,\n              response,\n              ...responseUpdatedListener(variables.current, prevState.config, response),\n            }));\n          },\n          // Delay slightly longer if no results so if someone is typing they don't get a flash of no results\n          response.getResults()?.length === 0 ? 500 : 20,\n        );\n      }),\n    );\n\n    unregisterFunctions.push(\n      variables.current.listen(EVENT_VALUES_UPDATED, () =>\n        setSearchState((prevState) => ({\n          ...prevState,\n          ...valuesUpdatedListener(variables.current, search.pipeline, prevState.config),\n        })),\n      ),\n    );\n\n    if (!autocomplete.current) {\n      const { account, collection, endpoint } = search.pipeline.config;\n      autocomplete.current = {\n        pipeline: new Pipeline({ account, collection, endpoint }, 'autocomplete'),\n        variables: autocompleteVariables.current,\n      };\n    }\n\n    unregisterFunctions.push(\n      autocomplete.current.pipeline.listen(EVENT_RESPONSE_UPDATED, (response: Response) => {\n        setAutocompleteSearching(false);\n        setAutocompleteState((prevState) => ({\n          ...prevState,\n          response,\n          ...responseUpdatedListener(autocompleteVariables.current, prevState.config, response),\n        }));\n      }),\n    );\n\n    unregisterFunctions.push(\n      autocompleteVariables.current.listen(EVENT_VALUES_UPDATED, () =>\n        setAutocompleteState((prevState) => ({\n          ...prevState,\n          ...valuesUpdatedListener(\n            autocompleteVariables.current,\n            (autocomplete.current as ProviderPipelineConfig).pipeline,\n            prevState.config,\n          ),\n        })),\n      ),\n    );\n\n    if (searchOnLoad) {\n      search.pipeline.search(variables.current.get());\n    }\n\n    setConfigDone(true);\n\n    return () => {\n      unregisterFunctions.forEach((fn) => fn());\n    };\n  }, []);\n\n  const clear = useCallback(\n    (key: 'search' | 'autocomplete') => (vals?: { [k: string]: string | undefined }) => {\n      const func = key === 'autocomplete' ? autocomplete.current : search;\n      const { pipeline, variables } = func as Required<ProviderPipelineConfig>;\n\n      if (vals !== undefined) {\n        variables.set(vals);\n      }\n      pipeline.clearResponse(variables.get());\n    },\n    [],\n  );\n\n  const handlePaginate = useCallback(\n    (page: number) => {\n      const { pipeline, variables } = search as Required<ProviderPipelineConfig>;\n      const { config } = searchState;\n\n      variables.set({ [config.pageParam]: String(page) });\n      setSearching(true);\n      pipeline.search(variables.get());\n    },\n    [search.pipeline, search.variables, searchState.config],\n  );\n\n  const handleResultClicked = useCallback((url: string) => search.pipeline.emitResultClicked(url), []);\n\n  const getContext = (state: PipelineProviderState) =>\n    ({\n      ...state,\n      search: {\n        ...state.search,\n        variables: variables.current,\n        filters: search.filters,\n        pipeline: search.pipeline,\n        search: searchFn('search'),\n        clear: clear('search'),\n        fields: search.fields,\n        searching,\n      },\n      autocomplete: {\n        ...state.autocomplete,\n        variables: autocompleteVariables.current,\n        filters: search.filters,\n        pipeline: autocomplete.current?.pipeline,\n        search: searchFn('autocomplete'),\n        clear: clear('autocomplete'),\n        fields: autocomplete.current?.fields,\n        searching: autocompleteSearching,\n      },\n      resultClicked: handleResultClicked,\n      paginate: handlePaginate,\n    } as Context);\n\n  return <Provider value={getContext({ autocomplete: autocompleteState, search: searchState })}>{children}</Provider>;\n};\n\nexport default ContextProvider;\nexport {\n  ClickTracking,\n  combineFilters,\n  Config,\n  FieldDictionary,\n  FilterBuilder,\n  FilterOptions,\n  Pipeline,\n  PosNegTracking,\n  Range,\n  RangeFilterBuilder,\n  RangeFilterOptions,\n  Response,\n  useContext,\n  Variables,\n};\nexport type { SearchProviderValues };\n","import { useContext } from '../ContextProvider';\n\nfunction useAutocomplete() {\n  const {\n    autocomplete: { suggestions, search, completion, searching },\n  } = useContext();\n\n  return {\n    suggestions,\n    search,\n    completion,\n    searching,\n  };\n}\n\nexport default useAutocomplete;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nexport function mapToObject<T = Record<string, string | number>>(map: Map<string, any> | undefined): T {\n  const obj = {} as T;\n  if (map) {\n    map.forEach((v, k) => {\n      if (typeof v === 'string' || typeof v === 'number') {\n        obj[k] = v;\n      }\n    });\n  }\n\n  return obj;\n}\n","import { isNumber } from '@sajari/react-sdk-utils';\nimport { CountAggregate } from '@sajari/sdk-js';\n\nimport { Response } from '../ContextProvider';\n\nexport function getBucketCount(response: Response | null, value: string): number | null {\n  if (!response || response?.isEmpty()) {\n    return null;\n  }\n\n  let count: number | CountAggregate = 0;\n  const aggregates = response.getAggregates();\n  const aggregateFilters = response.getAggregateFilters();\n\n  if (aggregateFilters && Object.keys(aggregateFilters.buckets?.count ?? {}).includes(value)) {\n    ({ count } = aggregateFilters.buckets);\n  } else if (aggregates && Object.keys(aggregates.buckets?.count ?? {}).includes(value)) {\n    ({ count } = aggregates.buckets);\n  }\n\n  if (isNumber(count)) {\n    return 0;\n  }\n\n  return (count[value] as number) ?? 0;\n}\n","import { isSSR } from '@sajari/react-sdk-utils';\n\nimport { SortType } from './types';\n\nconst priceRangePattern = /\\d+\\s-\\s\\d+/gm;\nconst patternTest = priceRangePattern.test.bind(priceRangePattern);\nconst collator = new Intl.Collator(!isSSR() ? window.navigator.language : 'en-US', {\n  numeric: true,\n});\n\nexport type Item = [string, number | string | (() => string)];\n\n// Add support to sort price range (\"1 - 50\", \"200 - 500\" or \"> 2000\")\nexport const sortItems = (list: Item[], sort: SortType = 'alpha', asc = true) => {\n  if (sort === 'none') {\n    return list;\n  }\n\n  const byLabel = sort !== 'count';\n\n  return [...list].sort(([labelLeft, valueLeft], [labelRight, valueRight]) => {\n    const left = String(byLabel ? labelLeft : valueLeft);\n    const right = String(byLabel ? labelRight : valueRight);\n    // for price range\n    switch (true) {\n      case [left, right].every(patternTest): {\n        const minLeft = left.split(' - ').map(Number)[0];\n        const minRight = right.split(' - ').map(Number)[0];\n        if (asc) {\n          return collator.compare(String(minLeft), String(minRight));\n        }\n        return collator.compare(String(minRight), String(minLeft));\n      }\n      case left.startsWith('>'):\n      case right.startsWith('<'):\n        return asc ? 1 : -1;\n      case left.startsWith('<'):\n      case right.startsWith('>'):\n        return asc ? -1 : 1;\n      default:\n        break;\n    }\n\n    if (asc) {\n      return collator.compare(String(left), String(right));\n    }\n    return collator.compare(String(right), String(left));\n  });\n};\n","import { useEffect, useMemo, useState } from 'react';\n\nimport { FilterBuilder, useContext } from '../ContextProvider';\nimport { EVENT_SELECTION_UPDATED } from '../ContextProvider/events';\nimport { getBucketCount } from '../utils';\nimport { FilterItem, SortType } from './types';\nimport { sortItems } from './utils';\n\nfunction useFilter(name: string, params: { sort?: SortType; sortAscending?: boolean } = {}) {\n  const {\n    search: { filters = [], response },\n  } = useContext();\n\n  const filter = useMemo(\n    () => filters.filter((f) => f instanceof FilterBuilder && f.getName() === name)[0] as FilterBuilder,\n    [],\n  );\n\n  if (!filter) {\n    throw new Error(`Filter \"${name}\" doesn't exist.`);\n  }\n\n  const [selected, setInternalSelected] = useState(filter.get());\n\n  useEffect(() => {\n    const removeListener = filter.listen(EVENT_SELECTION_UPDATED, () => {\n      setInternalSelected(filter.get());\n    });\n\n    return () => {\n      removeListener();\n    };\n  }, []);\n\n  const setSelected = (value: string[], merge = false) => {\n    filter.set(value, merge);\n  };\n\n  const reset = () => {\n    filter.reset();\n  };\n\n  const { sort = 'alpha', sortAscending = sort !== 'count' } = params;\n\n  const options: FilterItem[] = useMemo(() => {\n    if (!response || response?.isEmpty()) {\n      return [];\n    }\n\n    const aggregates = response.getAggregates();\n    const aggregateFilters = response.getAggregateFilters();\n    const isCount = filter.getCount();\n    const field = filter.getField();\n\n    if (isCount && field) {\n      const array = filter.isArray();\n      let count = {};\n      ({ count } = (aggregateFilters || {})[field] || {});\n      if (!count) {\n        ({ count = {} } = (aggregates || {})[field] || {});\n      }\n\n      const temp = sortItems(Object.entries(count), sort, sortAscending)\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        .map(([label, count]: [string, number]) => ({\n          label,\n          count,\n          value: array ? `${field} ~ [\"${label}\"]` : `${field} = \"${label}\"`,\n        }));\n\n      filter.setOptions(temp.reduce((a, c) => ({ ...a, [c.label]: c.value }), {}));\n\n      return temp;\n    }\n\n    return sortItems(Object.entries(filter.getOptions()), sort, sortAscending).map(([label, value]) => {\n      const id = `${name}_${label}`;\n      const count = getBucketCount(response, id);\n\n      return { label, value, count } as FilterItem;\n    });\n  }, [JSON.stringify(response?.getResults())]);\n\n  return {\n    options,\n    setSelected,\n    selected,\n    reset,\n    multi: filter.isMulti(),\n  };\n}\n\nexport default useFilter;\nexport * from './types';\n","import { useCallback, useMemo } from 'react';\n\nimport { useContext } from '../ContextProvider';\nimport { UsePaginationResult } from './types';\n\nfunction usePagination(key: 'search' | 'autocomplete' = 'search'): UsePaginationResult {\n  const context = useContext();\n  const { paginate } = context;\n  const { response, config } = context[key];\n  const queryValues = response?.getQueryValues();\n  const page = queryValues?.get(config.pageParam) ? parseInt(queryValues.get(config.pageParam) as string, 10) : 1;\n  const resultsPerPage = queryValues?.get(config.resultsPerPageParam)\n    ? parseInt(queryValues?.get(config.resultsPerPageParam) as string, 10)\n    : 15;\n  const totalResults = response?.getTotalResults() || 0;\n  const totalPages = Math.ceil(totalResults / resultsPerPage);\n  const hasNext = useMemo(() => page < totalPages, [page, totalPages]);\n  const hasPrevious = useMemo(() => page > 1, [page]);\n  const nextPage = useCallback(() => hasNext && paginate(page + 1), [paginate, hasNext]);\n  const previousPage = useCallback(() => hasPrevious && paginate(page - 1), [paginate, hasPrevious]);\n\n  return {\n    page,\n    pageCount: totalPages,\n    totalResults,\n    setPage: paginate,\n    resultsPerPage,\n    hasNext,\n    hasPrevious,\n    nextPage,\n    previousPage,\n  };\n}\n\nexport default usePagination;\nexport * from './types';\n","import * as React from 'react';\n\nimport { useContext } from '../ContextProvider';\n\nfunction useQuery() {\n  const {\n    search: { search, variables, query },\n  } = useContext();\n\n  const setQuery = React.useCallback(\n    (q: string) => {\n      variables.set({ q });\n      search(q);\n    },\n    [search, variables],\n  );\n\n  return { query, setQuery };\n}\n\nexport default useQuery;\n","import { isNullOrUndefined } from '@sajari/react-sdk-utils';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\nimport { RangeFilterBuilder, useContext } from '../ContextProvider';\nimport { Range } from '../ContextProvider/controllers/filters/types';\nimport { EVENT_RANGE_UPDATED } from '../ContextProvider/events';\n\nfunction useRangeFilter(name: string) {\n  const {\n    search: { filters = [], response, query },\n  } = useContext();\n\n  const prevQuery = useRef<string | null>(null);\n  const selectionUpdated = useRef<boolean>(false);\n  const filter = useMemo(\n    () => filters.filter((f) => f instanceof RangeFilterBuilder && f.getName() === name)[0] as RangeFilterBuilder,\n    [],\n  );\n  const isAggregate = filter.isAggregate();\n  const limit = filter.getMinMax();\n\n  if (!filter) {\n    throw new Error(`Filter \"${name}\" doesn't exist.`);\n  }\n\n  const [range, setInternalRange] = useState(filter.get());\n  const [min, setMin] = useState<number>(limit[0]);\n  const [max, setMax] = useState<number>(limit[1]);\n\n  useEffect(() => {\n    // Ignore the componentDidMount trigger, only call after the query was changed\n    if (isAggregate && prevQuery.current !== null) {\n      filter.reset(false);\n    }\n  }, [query]);\n\n  useEffect(() => {\n    const removeListener = filter.listen(EVENT_RANGE_UPDATED, () => {\n      setInternalRange(filter.get());\n    });\n\n    return () => {\n      removeListener();\n    };\n  }, []);\n\n  const setRange = useCallback((value: Range) => {\n    filter.set(value);\n  }, []);\n\n  const showReset = useMemo(() => {\n    if (!range) {\n      return false;\n    }\n    if (isAggregate) {\n      return range[0] !== min || range[1] !== max;\n    }\n\n    return filter.hasChanged();\n  }, [range, min, max]);\n\n  const reset = () => {\n    if (isAggregate) {\n      filter.set([...filter.getMinMax()] as Range);\n    } else {\n      filter.reset();\n    }\n  };\n\n  useEffect(() => {\n    if (!isAggregate || prevQuery.current === query || filter.getFrozen()) {\n      prevQuery.current = query;\n      return;\n    }\n\n    if (!response || response?.isEmpty()) {\n      setMin(range ? range[0] : limit[0]);\n      setMax(range ? range[1] : limit[1]);\n      selectionUpdated.current = false;\n      return;\n    }\n\n    const field = filter.getField();\n    const aggregates = response.getAggregates();\n    const aggregateFilters = response.getAggregateFilters();\n    let newMin = 0;\n    let newMax = 0;\n    const aggregate = (aggregates || {})[field] || {};\n    const aggregateFilter = (aggregateFilters || {})[field] || {};\n\n    if (!isNullOrUndefined(aggregateFilter.min)) {\n      newMin = aggregateFilter.min as number;\n    } else if (!isNullOrUndefined(aggregate.min)) {\n      newMin = aggregate.min as number;\n    }\n\n    if (!isNullOrUndefined(aggregateFilter.max)) {\n      newMax = aggregateFilter.max as number;\n    } else if (!isNullOrUndefined(aggregate.max)) {\n      newMax = aggregate.max as number;\n    }\n\n    [newMin, newMax] = filter.format([newMin, newMax]);\n\n    setMin(newMin);\n    setMax(newMax);\n\n    // Set the filter\n    filter.setMin(newMin);\n    filter.setMax(newMax);\n\n    filter.set([newMin, newMax], false);\n    setInternalRange([newMin, newMax]);\n\n    prevQuery.current = query;\n  }, [JSON.stringify(response?.getResults())]);\n\n  return {\n    min,\n    max,\n    step: filter.getStep(),\n    setRange,\n    range,\n    reset,\n    showReset,\n  };\n}\n\nexport default useRangeFilter;\n","import { isNumber } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\n\nimport { useContext } from '../ContextProvider';\nimport { UseResultsPerPageResult } from './types';\n\nfunction useResultsPerPage(): UseResultsPerPageResult {\n  const {\n    search: {\n      search,\n      config: { resultsPerPageParam },\n      variables,\n    },\n  } = useContext();\n\n  const setResultsPerPage = React.useCallback(\n    (size: number) => {\n      variables.set({ [resultsPerPageParam]: size });\n      search();\n    },\n    [variables, search],\n  );\n\n  const resultsPerPage = parseInt(variables.get()[resultsPerPageParam], 10);\n\n  return {\n    resultsPerPage: isNumber(resultsPerPage) ? resultsPerPage : 15,\n    setResultsPerPage,\n  };\n}\n\nexport default useResultsPerPage;\nexport * from './types';\n","/* eslint-disable @typescript-eslint/no-shadow */\nimport { useCallback, useEffect, useState } from 'react';\n\nimport { useContext } from '../ContextProvider';\nimport { defaultConfig } from '../ContextProvider/Config';\nimport { Response } from '../ContextProvider/controllers';\nimport { EVENT_RESPONSE_UPDATED, EVENT_VALUES_UPDATED } from '../ContextProvider/events';\nimport { UseSearchConfig, UseSearchCustomConfig, UseSearchParams, UseSearchResult } from './types';\n\nfunction useCustomSearch({ pipeline, variables }: UseSearchCustomConfig): UseSearchResult {\n  const [searching, setSearching] = useState(false);\n  const searchFn = useCallback(\n    (q?: string) => {\n      setSearching(true);\n\n      if (q === '') {\n        pipeline.clearResponse(variables.get());\n      } else {\n        if (q) {\n          variables.set({ [defaultConfig.qParam]: q });\n        }\n        pipeline.search(variables.get());\n      }\n    },\n    [pipeline, variables],\n  );\n\n  const [searchOutput, setSearchOutput] = useState<Omit<UseSearchResult, 'searching'>>({\n    search: searchFn,\n    error: null,\n  });\n\n  useEffect(() => {\n    searchFn();\n\n    return pipeline.listen(EVENT_RESPONSE_UPDATED, (response: Response) => {\n      setSearching(false);\n\n      setSearchOutput((o) => ({\n        ...o,\n        results: response?.getResults(),\n        latency: response?.getTime(),\n        totalResults: response?.getTotalResults(),\n        error: response?.getError(),\n      }));\n    });\n  }, []);\n\n  useEffect(\n    () =>\n      variables.listen(EVENT_VALUES_UPDATED, () => {\n        searchFn();\n      }),\n    [],\n  );\n\n  return { ...searchOutput, searching };\n}\n\nfunction useNormalSearch({ queryOverride, allowEmptySearch = true }: UseSearchConfig): UseSearchResult {\n  const [error, setError] = useState<Error | null>(null);\n  const {\n    search: { searching, response, search },\n    autocomplete: { search: searchInstantFn, suggestions },\n  } = useContext();\n\n  const results = response?.getResults();\n  const searchInstant = useCallback((q: string) => searchInstantFn(q), []);\n\n  useEffect(() => {\n    if (queryOverride !== undefined) {\n      if (allowEmptySearch || queryOverride !== '') {\n        search(queryOverride);\n      }\n    } else {\n      search();\n    }\n  }, [queryOverride]);\n\n  useEffect(() => {\n    if (response) {\n      switch (true) {\n        case response.isError():\n          setError(response.getError()?.error ?? new Error('Something went wrong. Please try again.'));\n          break;\n\n        case !response.isError():\n          setError(null);\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, [response]);\n\n  return {\n    latency: response?.getTime(),\n    totalResults: response?.getTotalResults(),\n    suggestions: suggestions ?? [],\n    results,\n    search,\n    searchInstant,\n    searching,\n    error,\n  };\n}\n\nfunction useSearch(params?: UseSearchParams) {\n  if (typeof params === 'object' && 'pipeline' in params && 'variables' in params) {\n    return useCustomSearch(params);\n  }\n\n  return useNormalSearch(params ?? {});\n}\n\nexport default useSearch;\nexport * from './types';\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isNullOrUndefined } from '@sajari/react-sdk-utils';\n\nimport { useContext } from '../ContextProvider';\nimport usePagination from '../usePagination';\nimport { mapToObject } from '../utils';\n\nfunction useSearchContext() {\n  const {\n    search: { config, response, search, searching, fields = {}, clear },\n  } = useContext();\n  const { page, resultsPerPage, totalResults, pageCount, setPage } = usePagination('search');\n  const mapResponse = mapToObject(response?.getResponse() as Map<string, any> | undefined);\n  const results = response?.getResults();\n\n  return {\n    empty: response?.isEmpty() ?? false,\n    error: response?.getError(),\n    queryValues: response?.getQueryValues(),\n    latency: response?.getTime(),\n    page,\n    resultsPerPage,\n    totalResults,\n    pageCount,\n    setPage,\n    search,\n    results,\n    response: mapResponse,\n    searching,\n    searched: !isNullOrUndefined(results),\n    fields,\n    config,\n    clear,\n  };\n}\n\nexport default useSearchContext;\n","import { useCallback } from 'react';\n\nimport { useContext } from '../ContextProvider';\nimport { UseSortingResult } from './types';\n\nfunction useSorting(): UseSortingResult {\n  const {\n    search: { search, variables },\n  } = useContext();\n\n  const setSorting = useCallback(\n    (order: string) => {\n      variables.set({ sort: order });\n      search();\n    },\n    [variables, search],\n  );\n\n  return {\n    sorting: variables.get().sort ?? '',\n    setSorting,\n  };\n}\n\nexport default useSorting;\nexport * from './types';\n","import { useContext } from '../ContextProvider';\nimport { UseTrackingResult } from './types';\n\nfunction useTracking(): UseTrackingResult {\n  const {\n    resultClicked,\n    search: { pipeline },\n  } = useContext();\n  const client = pipeline.getClient();\n  return {\n    consumeInteractionToken: client.interactionConsume,\n    handleResultClicked: resultClicked,\n  };\n}\n\nexport default useTracking;\nexport * from './types';\n","import { useContext } from '../ContextProvider';\nimport { UseVariablesResult } from './types';\n\nfunction useVariables(): UseVariablesResult {\n  const {\n    search: { variables },\n  } = useContext();\n  return { variables };\n}\n\nexport default useVariables;\nexport * from './types';\n"],"names":["defaultConfig","qParam","qOverrideParam","qSuggestionsParam","resultsPerPageParam","pageParam","maxSuggestions","EVENT_SEARCH_SENT","EVENT_RESPONSE_UPDATED","EVENT_RESULT_CLICKED","EVENT_VALUES_UPDATED","EVENT_TRACKING_RESET","EVENT_ANALYTICS_PAGE_CLOSED","EVENT_ANALYTICS_BODY_RESET","EVENT_ANALYTICS_RESULT_CLICKED","EVENT_SELECTION_UPDATED","EVENT_OPTIONS_UPDATED","EVENT_RANGE_UPDATED","Listener","listeners","listen","callback","push","unlisten","index","indexOf","splice","notify","fn","forEach","l","e","console","error","events","Analytics","pipeline","tracking","enabled","body","get","longestNonAutocompletedBody","longestAutocompletedBody","response","isEmpty","isError","originalBody","getQueryValues","bodyLabel","responseBody","getValues","bodyAutocompletedLabel","length","Map","Object","entries","isSSR","window","addEventListener","beforeunload","responseUpdated","resultClicked","resetBody","event","Error","GoogleAnalyticsObjects","url","decodeUriArgs","queryStr","args","a","split","i","hasOwnProperty","b","decodeURIComponent","encodeUriArgs","queryParts","keys","key","encodeURIComponent","join","mergeQueryStr","first","rest","arg","next","prop","augmentUri","uri","m","exec","getURLParameter","name","value","RegExp","location","search","undefined","replace","GoogleAnalytics","analytics","id","param","unregisterFunctions","sendGAPageView","onPageClose","onBodyReset","onResultClicked","isFunction","AnalyticsJS","UniversalAnalytics","GTag","pageAddress","href","substring","origin","page_location","escapeValue","input","escaped","chars","c","replaceAll","FilterBuilder","initial","joinOperator","multi","options","array","field","group","count","isString","current","includes","set","values","merge","nonDuplicate","filter","v","emitSelectionUpdated","remove","isSet","setOptions","emitOptionsUpdated","getName","getGroup","getField","getCount","getOptions","isArray","isMulti","map","f","Boolean","getBuckets","reset","listener","RangeFilterBuilder","aggregate","min","max","step","formatter","roundToStep","range","frozen","emitEvent","emitRangeUpdated","getFrozen","setMin","setMax","getMinMax","getStep","isAggregate","setFrozen","hasChanged","format","buildArrayMatch","expressions","list","expression","groupFilters","filters","type","groups","groupBy","reduce","out","basicFilters","concat","combineFilters","removeListenerFuncs","removeChildFilterListeners","buckets","countFilters","Response","queryValues","getError","getResponse","getResults","getTotalResults","getTime","getAggregates","aggregates","getAggregateFilters","Tracking","emitTrackingReset","variables","clientTracking","getTrackingData","data","ga","Cookies","sjID","ClickTracking","InteractiveSession","DefaultSession","TrackingType","Click","NoTracking","None","PosNegTracking","PosNeg","Pipeline","config","analyticsAdapters","account","collection","endpoint","secret","p","version","client","Client","searchCount","Adapter","_emitSearchSent","_emitResponseUpdated","emitResultClicked","currentSearch","then","responseValues","clearResponse","getAnalytics","getClient","getTracking","Variables","_set","_emitUpdated","variable","Array","String","changes","FieldDictionary","title","subtitle","description","image","price","originalPrice","rating","updateState","query","completion","suggestions","s","slice","responseUpdatedListener","valuesUpdatedListener","createContext","strict","Provider","useContext","defaultState","parseResponse","initialResponse","JSON","parse","ContextProvider","children","autocompleteProp","autocomplete","defaultFilter","searchOnLoad","initialResponseProp","useState","searching","setSearching","autocompleteSearching","setAutocompleteSearching","searchState","setSearchState","autocompleteState","setAutocompleteState","configDone","setConfigDone","searchTimer","useRef","searchAutocompleteTimer","autocompleteVariables","assign","variablesFilterString","defaultFilterString","toString","searchFn","useCallback","inputQuery","override","func","state","setSearchingState","timer","text","clearTimeout","setTimeout","useEffect","mergedConfig","searchRenderTimer","prevState","clear","vals","handlePaginate","page","handleResultClicked","getContext","fields","paginate","React","useAutocomplete","mapToObject","obj","k","getBucketCount","aggregateFilters","isNumber","priceRangePattern","patternTest","test","bind","collator","Intl","Collator","navigator","language","numeric","sortItems","sort","asc","byLabel","labelLeft","valueLeft","labelRight","valueRight","left","right","every","minLeft","Number","minRight","compare","startsWith","useFilter","params","useMemo","selected","setInternalSelected","removeListener","setSelected","sortAscending","isCount","temp","label","stringify","usePagination","context","parseInt","resultsPerPage","totalResults","totalPages","Math","ceil","hasNext","hasPrevious","nextPage","previousPage","pageCount","setPage","useQuery","setQuery","q","useRangeFilter","prevQuery","selectionUpdated","limit","setInternalRange","setRange","showReset","newMin","newMax","aggregateFilter","isNullOrUndefined","useResultsPerPage","setResultsPerPage","size","useCustomSearch","searchOutput","setSearchOutput","o","results","latency","useNormalSearch","queryOverride","allowEmptySearch","setError","searchInstantFn","searchInstant","useSearch","useSearchContext","mapResponse","empty","searched","useSorting","setSorting","order","sorting","useTracking","consumeInteractionToken","interactionConsume","useVariables"],"mappings":"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"}