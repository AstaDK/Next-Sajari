{"version":3,"file":"index.esm.js","sources":["../../src/usePagination/index.ts"],"sourcesContent":["import { useCallback, useMemo } from 'react';\n\nimport { useContext } from '../ContextProvider';\nimport { UsePaginationResult } from './types';\n\nfunction usePagination(key: 'search' | 'autocomplete' = 'search'): UsePaginationResult {\n  const context = useContext();\n  const { paginate } = context;\n  const { response, config } = context[key];\n  const queryValues = response?.getQueryValues();\n  const page = queryValues?.get(config.pageParam) ? parseInt(queryValues.get(config.pageParam) as string, 10) : 1;\n  const resultsPerPage = queryValues?.get(config.resultsPerPageParam)\n    ? parseInt(queryValues?.get(config.resultsPerPageParam) as string, 10)\n    : 15;\n  const totalResults = response?.getTotalResults() || 0;\n  const totalPages = Math.ceil(totalResults / resultsPerPage);\n  const hasNext = useMemo(() => page < totalPages, [page, totalPages]);\n  const hasPrevious = useMemo(() => page > 1, [page]);\n  const nextPage = useCallback(() => hasNext && paginate(page + 1), [paginate, hasNext]);\n  const previousPage = useCallback(() => hasPrevious && paginate(page - 1), [paginate, hasPrevious]);\n\n  return {\n    page,\n    pageCount: totalPages,\n    totalResults,\n    setPage: paginate,\n    resultsPerPage,\n    hasNext,\n    hasPrevious,\n    nextPage,\n    previousPage,\n  };\n}\n\nexport default usePagination;\nexport * from './types';\n"],"names":["usePagination","key","context","useContext","paginate","response","config","queryValues","getQueryValues","page","get","pageParam","parseInt","resultsPerPage","resultsPerPageParam","totalResults","getTotalResults","totalPages","Math","ceil","hasNext","useMemo","hasPrevious","nextPage","useCallback","previousPage","pageCount","setPage"],"mappings":";;;AAKA,SAASA,aAAT,CAAuBC,GAAvB;MAAuBA;AAAAA,IAAAA,MAAiC;;;AACtD,MAAMC,OAAO,GAAGC,UAAU,EAA1B;MACQC,WAAaF,QAAbE;qBACqBF,OAAO,CAACD,GAAD;MAA5BI,wBAAAA;MAAUC,sBAAAA;AAClB,MAAMC,WAAW,GAAGF,QAAH,oBAAGA,QAAQ,CAAEG,cAAV,EAApB;AACA,MAAMC,IAAI,GAAG,CAAAF,WAAW,QAAX,YAAAA,WAAW,CAAEG,GAAb,CAAiBJ,MAAM,CAACK,SAAxB,KAAqCC,QAAQ,CAACL,WAAW,CAACG,GAAZ,CAAgBJ,MAAM,CAACK,SAAvB,CAAD,EAA8C,EAA9C,CAA7C,GAAiG,CAA9G;AACA,MAAME,cAAc,GAAG,CAAAN,WAAW,QAAX,YAAAA,WAAW,CAAEG,GAAb,CAAiBJ,MAAM,CAACQ,mBAAxB,KACnBF,QAAQ,CAACL,WAAD,oBAACA,WAAW,CAAEG,GAAb,CAAiBJ,MAAM,CAACQ,mBAAxB,CAAD,EAAyD,EAAzD,CADW,GAEnB,EAFJ;AAGA,MAAMC,YAAY,GAAG,CAAAV,QAAQ,QAAR,YAAAA,QAAQ,CAAEW,eAAV,OAA+B,CAApD;AACA,MAAMC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUJ,YAAY,GAAGF,cAAzB,CAAnB;AACA,MAAMO,OAAO,GAAGC,OAAO,CAAC;AAAA,WAAMZ,IAAI,GAAGQ,UAAb;AAAA,GAAD,EAA0B,CAACR,IAAD,EAAOQ,UAAP,CAA1B,CAAvB;AACA,MAAMK,WAAW,GAAGD,OAAO,CAAC;AAAA,WAAMZ,IAAI,GAAG,CAAb;AAAA,GAAD,EAAiB,CAACA,IAAD,CAAjB,CAA3B;AACA,MAAMc,QAAQ,GAAGC,WAAW,CAAC;AAAA,WAAMJ,OAAO,IAAIhB,QAAQ,CAACK,IAAI,GAAG,CAAR,CAAzB;AAAA,GAAD,EAAsC,CAACL,QAAD,EAAWgB,OAAX,CAAtC,CAA5B;AACA,MAAMK,YAAY,GAAGD,WAAW,CAAC;AAAA,WAAMF,WAAW,IAAIlB,QAAQ,CAACK,IAAI,GAAG,CAAR,CAA7B;AAAA,GAAD,EAA0C,CAACL,QAAD,EAAWkB,WAAX,CAA1C,CAAhC;AAEA,SAAO;AACLb,IAAAA,IAAI,EAAJA,IADK;AAELiB,IAAAA,SAAS,EAAET,UAFN;AAGLF,IAAAA,YAAY,EAAZA,YAHK;AAILY,IAAAA,OAAO,EAAEvB,QAJJ;AAKLS,IAAAA,cAAc,EAAdA,cALK;AAMLO,IAAAA,OAAO,EAAPA,OANK;AAOLE,IAAAA,WAAW,EAAXA,WAPK;AAQLC,IAAAA,QAAQ,EAARA,QARK;AASLE,IAAAA,YAAY,EAAZA;AATK,GAAP;AAWD;;;;"}