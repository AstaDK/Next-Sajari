import { FilterOptions, Options } from './types';
export default class FilterBuilder {
    private current;
    private initial;
    private name;
    private group;
    private field;
    private options;
    private multi;
    private count;
    private array;
    private joinOperator;
    private listeners;
    constructor({ initial, joinOperator, multi, options, array, name, field, group, count, }: FilterOptions);
    listen(event: string, callback: (filter: FilterBuilder) => void): () => void;
    set(values: string[], merge?: boolean): void;
    remove(values: string[]): void;
    isSet(name: string): boolean;
    setOptions(options: Options, merge?: boolean): void;
    getName(): string;
    getGroup(): string | undefined;
    getField(): string | undefined;
    getCount(): boolean;
    getOptions(): Record<string, string | import("./types").OptionsFn>;
    get(): string[];
    isArray(): boolean;
    isMulti(): boolean;
    filter(): string;
    getBuckets(): string;
    reset(): void;
    protected emitSelectionUpdated(): void;
    protected emitOptionsUpdated(): void;
}
