import { EVENT_TRACKING_RESET } from '../../events.esm.js';
import { Listener } from '../Listener.esm.js';

var events = [EVENT_TRACKING_RESET];
var Tracking = /*#__PURE__*/function () {
  function Tracking() {
    var _Object$entries;

    this.clientTracking = null;
    this.listeners = new Map(Object.entries((_Object$entries = {}, _Object$entries[EVENT_TRACKING_RESET] = new Listener(), _Object$entries)));
  }

  var _proto = Tracking.prototype;

  _proto.listen = function listen(event, callback) {
    if (events.indexOf(event) === -1) {
      throw new Error("Unknown event type \"" + event + "\"");
    }

    return this.listeners.get(event).listen(callback);
  };

  _proto.emitTrackingReset = function emitTrackingReset(values) {
    this.listeners.get(EVENT_TRACKING_RESET).notify(function (listener) {
      listener(values);
    });
  };

  _proto.reset = function reset(variables) {
    this.clientTracking.reset();

    if (variables !== undefined) {
      this.emitTrackingReset(variables);
    }
  };

  _proto.next = function next(variables) {
    if (this.clientTracking === null) {
      throw new Error('clientTracking is null');
    }

    return this.clientTracking.next(variables);
  };

  return Tracking;
}();

export { Tracking };
//# sourceMappingURL=Tracking.esm.js.map
