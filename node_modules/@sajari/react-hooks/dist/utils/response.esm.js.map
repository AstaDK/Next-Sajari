{"version":3,"file":"response.esm.js","sources":["../../src/utils/response.ts"],"sourcesContent":["import { isNumber } from '@sajari/react-sdk-utils';\nimport { CountAggregate } from '@sajari/sdk-js';\n\nimport { Response } from '../ContextProvider';\n\nexport function getBucketCount(response: Response | null, value: string): number | null {\n  if (!response || response?.isEmpty()) {\n    return null;\n  }\n\n  let count: number | CountAggregate = 0;\n  const aggregates = response.getAggregates();\n  const aggregateFilters = response.getAggregateFilters();\n\n  if (aggregateFilters && Object.keys(aggregateFilters.buckets?.count ?? {}).includes(value)) {\n    ({ count } = aggregateFilters.buckets);\n  } else if (aggregates && Object.keys(aggregates.buckets?.count ?? {}).includes(value)) {\n    ({ count } = aggregates.buckets);\n  }\n\n  if (isNumber(count)) {\n    return 0;\n  }\n\n  return (count[value] as number) ?? 0;\n}\n"],"names":["getBucketCount","response","value","isEmpty","count","aggregates","getAggregates","aggregateFilters","getAggregateFilters","Object","keys","buckets","includes","isNumber"],"mappings":";;SAKgBA,eAAeC,UAA2BC;;;AACxD,MAAI,CAACD,QAAD,KAAaA,QAAb,oBAAaA,QAAQ,CAAEE,OAAV,EAAb,CAAJ,EAAsC;AACpC,WAAO,IAAP;AACD;;AAED,MAAIC,KAAK,GAA4B,CAArC;AACA,MAAMC,UAAU,GAAGJ,QAAQ,CAACK,aAAT,EAAnB;AACA,MAAMC,gBAAgB,GAAGN,QAAQ,CAACO,mBAAT,EAAzB;;AAEA,MAAID,gBAAgB,IAAIE,MAAM,CAACC,IAAP,oDAAYH,gBAAgB,CAACI,OAA7B,qBAAY,uBAA0BP,KAAtC,oCAA+C,EAA/C,EAAmDQ,QAAnD,CAA4DV,KAA5D,CAAxB,EAA4F;AACvFE,IAAAA,KADuF,GAC7EG,gBAAgB,CAACI,OAD4D,CACvFP,KADuF;AAE3F,GAFD,MAEO,IAAIC,UAAU,IAAII,MAAM,CAACC,IAAP,iDAAYL,UAAU,CAACM,OAAvB,qBAAY,oBAAoBP,KAAhC,oCAAyC,EAAzC,EAA6CQ,QAA7C,CAAsDV,KAAtD,CAAlB,EAAgF;AAClFE,IAAAA,KADkF,GACxEC,UAAU,CAACM,OAD6D,CAClFP,KADkF;AAEtF;;AAED,MAAIS,QAAQ,CAACT,KAAD,CAAZ,EAAqB;AACnB,WAAO,CAAP;AACD;;AAED,yBAAQA,KAAK,CAACF,KAAD,CAAb,2BAAmC,CAAnC;AACD;;;;"}