import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose, extends as _extends } from '../_virtual/_rollupPluginBabelHelpers.js';

var fillTemplate = function fillTemplate(template, variables) {
  return template.replace(/\${(.*?)}/g, function (_, g) {
    return variables[g].toString();
  });
};

function mapFields(values, fields) {
  if (fields === void 0) {
    fields = {};
  }

  return Object.entries(fields).reduce(function (mapped, _ref) {
    var _extends2;

    var to = _ref[0],
        from = _ref[1];
    var value;

    if (from === false) {
      value = null;
    } else if (Array.isArray(from)) {
      var match = from.find(function (f) {
        return Object.keys(values).includes(f);
      });
      value = values[match];
    } else if (typeof from === 'function') {
      value = from(values);
    } else if (/\${.+}/.test(from)) {
      value = fillTemplate(from, values);
    } else if (from.startsWith('!function')) {
      var functionBody = from.replace('!function', '');
      var func = new Function('data', functionBody);
      value = func(values);
    } else {
      value = values[from];
    }

    return _extends({}, mapped, (_extends2 = {}, _extends2[to] = value, _extends2));
  }, _extends({}, values));
}
function mapResultFields(results, fields) {
  return results.map(function (_ref2) {
    var values = _ref2.values,
        rest = _objectWithoutPropertiesLoose(_ref2, ["values"]);

    return _extends({}, rest, {
      values: mapFields(values, fields)
    });
  });
}

export default mapResultFields;
export { mapFields };
//# sourceMappingURL=mapResultFields.esm.js.map
