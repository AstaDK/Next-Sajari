{"version":3,"file":"react-search-ui.cjs.production.min.js","sources":["../src/i18n/index.ts","../src/i18n/locale/en.ts","../src/ContextProvider/index.tsx","../src/Filter/utils.ts","../src/Filter/Header.tsx","../src/Filter/Box.tsx","../src/Filter/ColorFilter.tsx","../src/Filter/ListFilter.tsx","../src/Filter/RangeFilter.tsx","../src/Filter/RatingFilter.tsx","../src/Filter/SelectFilter.tsx","../src/Filter/TabFilter.tsx","../src/hooks/useClickTracking.ts","../src/utils/mapResultFields.ts","../src/Input/index.tsx","../src/Pagination/index.tsx","../src/Results/components/Message/index.tsx","../src/Results/components/Message/styles.ts","../src/Results/components/Result/index.tsx","../src/Results/components/Result/styles.ts","../src/Results/styles.ts","../src/ViewOption/index.tsx","../src/ViewOption/styles.ts","../src/ResultsPerPage/index.tsx","../src/Sorting/index.tsx","../src/Filter/index.tsx","../src/Results/index.tsx","../src/Summary/index.tsx","../src/ViewType/index.tsx"],"sourcesContent":["import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport en from './locale/en';\n\ni18n.use(LanguageDetector).init({\n  resources: {\n    en,\n  },\n  fallbackLng: 'en',\n  interpolation: {\n    escapeValue: false,\n  },\n  react: {\n    wait: true,\n  },\n});\n\nexport default i18n;\n","export default {\n  common: {\n    result: 'Result',\n    results: 'Results',\n    items: 'Items',\n    item: 'Item',\n    loading: 'Loading',\n    error: 'Error',\n  },\n  errors: {\n    authorization: 'Authorization for this request failed. Please try again.',\n    connection: 'Please check your network connection and try again.',\n    generic: 'Something went wrong. Please try again.',\n  },\n  filter: {\n    all: 'All',\n    rangeOver: 'Over {{value}}',\n    rangeUnder: 'Under {{value}}',\n    reset: 'Reset',\n    select: 'Select a filter',\n    selected: '{{count}} filters selected',\n    showLess: 'Show less',\n    showMore: 'Show more',\n  },\n  input: {\n    placeholder: 'Search',\n  },\n  resultsPerPage: {\n    label: 'Show',\n  },\n  pagination: {\n    label: 'Pagination',\n    previous: 'Previous',\n    next: 'Next',\n    page: 'Page {{page}}',\n    current: 'Page {{page}}, current page',\n  },\n  results: {\n    empty: {\n      title: 'No results',\n      body: 'No matches were found for \"{{query}}\".',\n    },\n  },\n  sorting: {\n    label: 'Sort',\n  },\n  summary: {\n    results: '{{count}} {{object}} for \"{{query}}\"',\n    noQueryResults: '{{count}} {{object}}',\n    latency: '({{time}} secs)',\n    alternative: 'Search instead for',\n  },\n  viewType: {\n    label: 'View',\n    grid: 'Grid',\n    list: 'List',\n  },\n};\n","import { SearchProvider } from '@sajari/react-hooks';\nimport { createContext, ThemeProvider } from '@sajari/react-sdk-utils';\nimport React, { useEffect, useState } from 'react';\nimport { LiveAnnouncer } from 'react-aria-live';\nimport { I18nextProvider } from 'react-i18next';\n\nimport i18n from '../i18n';\nimport { ContextProviderValues, ResultViewType, SearchUIContextProviderValues } from './types';\n\nconst [Provider, useSearchUIContext] = createContext<Required<SearchUIContextProviderValues> & { language?: string }>({\n  strict: true,\n  name: 'PipelineContext',\n});\n\nconst ContextProvider: React.FC<ContextProviderValues> = ({\n  children,\n  search,\n  autocomplete,\n  defaultFilter,\n  searchOnLoad,\n  initialResponse,\n  ratingMax = 5,\n  currency = 'USD',\n  theme,\n  importantStyles,\n  disableDefaultStyles = false,\n  customClassNames = {},\n  viewType: viewTypeProp = 'list',\n}) => {\n  const [language, setLanguage] = useState(i18n.language);\n  const [viewType, setViewType] = useState<ResultViewType>(viewTypeProp);\n\n  useEffect(() => {\n    const event = 'languageChanged';\n    i18n.on(event, setLanguage);\n\n    return () => {\n      i18n.off(event);\n    };\n  }, []);\n\n  useEffect(() => {\n    setViewType(viewTypeProp);\n  }, [viewTypeProp]);\n\n  return (\n    <Provider\n      value={{\n        tracking: search.pipeline.getTracking(),\n        disableDefaultStyles,\n        currency,\n        customClassNames,\n        language,\n        ratingMax,\n        viewType,\n        setViewType,\n      }}\n    >\n      <SearchProvider\n        search={search}\n        autocomplete={autocomplete}\n        defaultFilter={defaultFilter}\n        searchOnLoad={searchOnLoad}\n        initialResponse={initialResponse}\n      >\n        <LiveAnnouncer>\n          <I18nextProvider i18n={i18n}>\n            <ThemeProvider theme={theme} importantStyles={importantStyles}>\n              {children}\n            </ThemeProvider>\n          </I18nextProvider>\n        </LiveAnnouncer>\n      </SearchProvider>\n    </Provider>\n  );\n};\n\nexport default ContextProvider;\nexport { useSearchUIContext };\nexport type { ContextProviderValues, ResultViewType };\n","import { FilterItem } from '@sajari/react-hooks';\nimport { formatNumber } from '@sajari/react-sdk-utils';\nimport { TFunction } from 'i18next';\n\n/**\n * Pin items in an array to the start\n * @param {Array} list\n * @param {String} pinned - Items to pin in the array\n * @param {String} prop - Property of child object to get comparation in pinned array\n */\nexport function pinItems(list: FilterItem[], pinned: string[] = [], prop: string) {\n  return [...list].sort((a, b) => pinned.indexOf(b[prop]) - pinned.indexOf(a[prop]));\n}\n\n/**\n * Get the header ID for a name\n * @param name - The filter's unique name\n */\nexport function getHeaderId(name: string) {\n  return `filter-${name}-label`;\n}\n\ninterface FormatValueParams {\n  format?: 'default' | 'price';\n  currency?: string;\n  t: TFunction;\n}\n\n/**\n * Format a value to be presented in the UI\n * @param input - the value to format\n * @param params - formatting options\n */\nexport function formatLabel(input: string, params: FormatValueParams) {\n  const { format = 'default', currency = 'USD', t } = params;\n  const formatPrice = (v: number) => formatNumber(v, { style: 'currency', currency }).replace('.00', '');\n\n  switch (format) {\n    case 'price':\n      switch (true) {\n        case /\\d+\\s-\\s\\d+/gm.test(input): {\n          const [min, max] = input.split(' - ').map(Number).map(formatPrice);\n          return `${min} - ${max}`;\n        }\n        case input.startsWith('>'):\n          return t('rangeOver', { value: formatPrice(Number(input.substring(2))) });\n        case input.startsWith('<'):\n          return t('rangeUnder', { value: formatPrice(Number(input.substring(2))) });\n        default:\n          return input;\n      }\n\n    case 'default':\n    default:\n      // Return unchanged if it's default\n      return input;\n  }\n}\n","import { Box, Button, Heading } from '@sajari/react-components';\nimport { getStylesObject, isString } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport tw from 'twin.macro';\n\nimport { useSearchUIContext } from '../ContextProvider';\nimport { HeaderProps } from './types';\nimport { getHeaderId } from './utils';\n\nconst Header = ({ title, name, onReset, showReset }: HeaderProps) => {\n  const { t } = useTranslation('filter');\n  const { disableDefaultStyles = false, customClassNames } = useSearchUIContext();\n\n  const styles = getStylesObject(\n    {\n      container: [tw`flex items-center justify-between mb-2 leading-none`],\n      heading: [tw`leading-snug`],\n    },\n    disableDefaultStyles,\n  );\n\n  return (\n    <Box css={styles.container} className={customClassNames.filter?.header}>\n      <Heading\n        as=\"h2\"\n        size=\"xs\"\n        css={styles.heading}\n        disableDefaultStyles={disableDefaultStyles}\n        className={customClassNames.filter?.title}\n        id={isString(name) ? getHeaderId(name) : undefined}\n      >\n        {title}\n      </Heading>\n\n      {showReset ? (\n        <Button\n          appearance=\"link\"\n          size=\"xs\"\n          spacing=\"none\"\n          onClick={onReset}\n          css={tw`uppercase`}\n          disableDefaultStyles={disableDefaultStyles}\n          className={customClassNames.filter?.resetButton}\n        >\n          {t('reset')}\n        </Button>\n      ) : null}\n    </Box>\n  );\n};\n\nexport default Header;\n","import { Box as CoreBox } from '@sajari/react-components';\nimport * as React from 'react';\n\nimport { useSearchUIContext } from '../ContextProvider';\nimport Header from './Header';\nimport { BoxProps } from './types';\n\nconst Box = React.forwardRef(({ children, ...headerProps }: BoxProps, ref: React.Ref<HTMLDivElement>) => {\n  const { customClassNames } = useSearchUIContext();\n\n  return (\n    <CoreBox ref={ref} className={customClassNames.filter?.box}>\n      <Header {...headerProps} />\n      {children}\n    </CoreBox>\n  );\n});\n\nexport default Box;\n","import { Swatch } from '@sajari/react-components';\nimport { useFilter } from '@sajari/react-hooks';\nimport { isEmpty } from '@sajari/react-sdk-utils';\nimport React, { useMemo } from 'react';\n\nimport { useSearchUIContext } from '../ContextProvider';\nimport Box from './Box';\nimport { ColorFilterProps } from './types';\n\nconst { colorKeys } = Swatch;\n\nconst ColorFilter = ({ name, title }: Omit<ColorFilterProps, 'type'>) => {\n  const { options, selected, setSelected, reset } = useFilter(name);\n  const { customClassNames, disableDefaultStyles = false } = useSearchUIContext();\n  const optionKeys = useMemo(() => options.map((o) => o.label), [JSON.stringify(options)]);\n  const filtered = useMemo(() => colorKeys.filter((c) => optionKeys.some((o) => c.toLowerCase() === o.toLowerCase())), [\n    JSON.stringify(optionKeys),\n  ]);\n\n  const children = useMemo(\n    () =>\n      filtered.map((color) => {\n        const Component = Swatch.Color[color];\n        return <Component key={color} />;\n      }),\n    [JSON.stringify(filtered)],\n  );\n\n  if (isEmpty(filtered) && isEmpty(selected)) {\n    return null;\n  }\n\n  return (\n    <Box title={title} showReset={selected.length > 0} onReset={reset}>\n      <Swatch\n        checkedColors={selected}\n        onChange={setSelected}\n        className={customClassNames.filter?.color?.container}\n        colorClassName={customClassNames.filter?.color?.item}\n        colorCheckedClassName={customClassNames.filter?.color?.itemChecked}\n        disableDefaultStyles={disableDefaultStyles}\n      >\n        {children}\n      </Swatch>\n    </Box>\n  );\n};\n\nexport default ColorFilter;\nexport type { ColorFilterProps };\n","import { Box as CoreBox, Button, Checkbox, CheckboxGroup, Combobox, Radio, RadioGroup } from '@sajari/react-components';\nimport { useFilter, useQuery } from '@sajari/react-hooks';\nimport { getStylesObject, isBoolean, isEmpty, isSSR, noop, useTheme } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport tw from 'twin.macro';\n\nimport { IconSmallChevronDown, IconSmallChevronUp } from '../assets/icons';\nimport { useSearchUIContext } from '../ContextProvider';\nimport Box from './Box';\nimport { ListFilterProps } from './types';\nimport { formatLabel, getHeaderId, pinItems } from './utils';\n\nconst ListFilter = (props: Omit<ListFilterProps, 'type'>) => {\n  const {\n    name,\n    title,\n    limit = 10,\n    sort = 'count',\n    sortAscending = sort !== 'count',\n    itemRender,\n    placeholder = '',\n    format,\n  } = props;\n\n  const filterContainerId = `list-${name}`;\n  const { options, reset, setSelected, selected, multi } = useFilter(name, { sort, sortAscending });\n  // Enable search by default if there's more than the limit\n  const { searchable = options.length > limit } = props;\n  // By default, pin selected items if the option count is over limit\n  let { pinSelected } = props;\n  if (!isBoolean(pinSelected)) {\n    pinSelected = options.length > limit;\n  }\n\n  // Because as the selected list changes the elements are being recreated so the focus is not focusing the correct element anymore\n  const [lastFocusedControl, setLastFocusedControl] = React.useState('');\n  const [query, setQuery] = React.useState('');\n  const { query: q } = useQuery();\n  const [shown, setShown] = React.useState(limit);\n  const { disableDefaultStyles = false, customClassNames, currency, language } = useSearchUIContext();\n  const theme = useTheme();\n  const { t } = useTranslation('filter');\n\n  const styles = getStylesObject(\n    {\n      innerList: [tw`flex items-center justify-between`],\n      count: [tw`ml-2 text-xs text-gray-400`],\n      checkbox: [tw`text-sm`],\n      searchWrapper: [tw`mb-2`],\n      toggleButtonWrapper: [tw`mt-1`],\n      toggleIcon: [tw`ml-2`, `color: ${theme.color.primary.base}`],\n    },\n    disableDefaultStyles,\n  );\n\n  // Reset internal query on global query change\n  React.useEffect(() => {\n    setQuery('');\n  }, [q]);\n\n  // Reset shown number when filtering via internal or external query change\n  React.useEffect(() => {\n    setShown(limit);\n  }, [query, q]);\n\n  // On user interaction, get the last element being interacted with BEFORE the list is rerendered and focus that element\n  React.useEffect(() => {\n    if (!isSSR() && pinSelected) {\n      const input = document\n        .querySelector(`#${filterContainerId}`)\n        ?.querySelector(`input[value=\"${lastFocusedControl}\"]`) as HTMLInputElement | null;\n\n      input?.focus();\n    }\n  }, [JSON.stringify(selected)]);\n\n  const Control = multi ? Checkbox : Radio;\n  const filtered = searchable ? options.filter((o) => o.label.toLowerCase().includes(query.toLowerCase())) : options;\n  const slice = filtered.length > limit;\n\n  const transformedItems = React.useMemo(() => {\n    if (!isSSR() && pinSelected) {\n      setLastFocusedControl(`${(document.activeElement as HTMLInputElement).value}`);\n    }\n    let list = filtered;\n\n    if (pinSelected) {\n      list = pinItems(list, selected, 'label');\n    }\n\n    return list;\n  }, [JSON.stringify(filtered), JSON.stringify(selected), pinSelected]);\n\n  const items = slice ? transformedItems.slice(0, shown) : transformedItems;\n  const allShown = shown >= filtered.length;\n  const Icon = allShown ? IconSmallChevronUp : IconSmallChevronDown;\n  const showMore = React.useCallback(() => {\n    if (allShown) {\n      setShown(limit);\n    } else {\n      setShown((s) => s + 20);\n    }\n  }, [allShown]);\n\n  const innerList = React.useMemo(\n    () =>\n      items.map(({ label, count }) => (\n        <CoreBox css={styles.innerList} key={`${label}-${count}`}>\n          <Control\n            value={label}\n            checked={selected.includes(label)}\n            onChange={noop}\n            css={styles.checkbox}\n            disableDefaultStyles={disableDefaultStyles}\n          >\n            {typeof itemRender === 'function' ? itemRender(label) : formatLabel(label, { format, currency, t })}\n          </Control>\n          <span css={styles.count}>{count.toLocaleString(language)}</span>\n        </CoreBox>\n      )),\n    [JSON.stringify(items), itemRender, selected],\n  );\n\n  const filterSearchOnChange = React.useCallback((value) => {\n    setQuery(value || '');\n  }, []);\n\n  if (isEmpty(options) && isEmpty(selected)) {\n    return null;\n  }\n\n  return (\n    <Box title={title} name={name} showReset={selected.length > 0 && multi} onReset={reset}>\n      {searchable ? (\n        <CoreBox css={styles.searchWrapper}>\n          <Combobox\n            value={query}\n            size=\"sm\"\n            className={customClassNames.filter?.list?.searchFilter}\n            placeholder={placeholder}\n            onChange={filterSearchOnChange}\n            disableDefaultStyles={disableDefaultStyles}\n          />\n        </CoreBox>\n      ) : null}\n\n      <CoreBox id={filterContainerId} className={customClassNames.filter?.list?.container}>\n        {multi ? (\n          <CheckboxGroup\n            value={selected}\n            onChange={setSelected}\n            className={customClassNames.filter?.list?.checkboxGroup}\n            disableDefaultStyles={disableDefaultStyles}\n            aria-labelledby={getHeaderId(name)}\n          >\n            {innerList}\n          </CheckboxGroup>\n        ) : (\n          <RadioGroup\n            value={selected[0]}\n            onChange={(e) => setSelected([e.target.value])}\n            className={customClassNames.filter?.list?.radioGroup}\n            disableDefaultStyles={disableDefaultStyles}\n            aria-labelledby={getHeaderId(name)}\n          >\n            {innerList}\n          </RadioGroup>\n        )}\n      </CoreBox>\n\n      {slice ? (\n        <CoreBox css={styles.toggleButtonWrapper}>\n          <Button\n            appearance=\"link\"\n            onClick={showMore}\n            aria-controls={filterContainerId}\n            size=\"sm\"\n            spacing=\"none\"\n            className={customClassNames.filter?.list?.toggleButton}\n            disableDefaultStyles={disableDefaultStyles}\n          >\n            {t(allShown ? 'showLess' : 'showMore')}\n            <Icon css={styles.toggleIcon} />\n          </Button>\n        </CoreBox>\n      ) : null}\n    </Box>\n  );\n};\n\nexport default ListFilter;\nexport type { ListFilterProps };\n","import { RangeInput } from '@sajari/react-components';\nimport { useRangeFilter } from '@sajari/react-hooks';\nimport * as React from 'react';\n\nimport { useSearchUIContext } from '../ContextProvider';\nimport Box from './Box';\nimport { RangeFilterProps } from './types';\nimport { getHeaderId } from './utils';\n\nconst RangeFilter = (props: Omit<RangeFilterProps, 'type' | 'step'>) => {\n  const { name, title, format, showInputs, steps, tick, ticks } = props;\n  const { min, max, range, setRange, reset, showReset, step } = useRangeFilter(name);\n  const { disableDefaultStyles = false, customClassNames, currency, language } = useSearchUIContext();\n\n  if (!range || max === 0) {\n    return null;\n  }\n\n  return (\n    <Box title={title} name={name} showReset={showReset} onReset={reset}>\n      <RangeInput\n        language={language}\n        format={format}\n        currency={currency}\n        min={min}\n        max={max}\n        value={range}\n        step={step}\n        steps={steps}\n        tick={tick}\n        ticks={ticks}\n        showInputs={showInputs}\n        onChange={setRange}\n        disableDefaultStyles={disableDefaultStyles}\n        className={customClassNames.filter?.range?.container}\n        fillClassName={customClassNames.filter?.range?.fill}\n        handleClassName={customClassNames.filter?.range?.handle}\n        handleActiveClassName={customClassNames.filter?.range?.handleActive}\n        inputClassName={customClassNames.filter?.range?.input}\n        trackClassName={customClassNames.filter?.range?.track}\n        aria-labelledby={getHeaderId(name)}\n      />\n    </Box>\n  );\n};\n\nexport default RangeFilter;\nexport type { RangeFilterProps };\n","import { Rating } from '@sajari/react-components';\nimport React, { useCallback } from 'react';\n\nimport { useSearchUIContext } from '../ContextProvider';\nimport ListFilter from './ListFilter';\nimport { RatingFilterProps } from './types';\n\nconst RatingFilter = ({ name, title }: Omit<RatingFilterProps, 'type'>) => {\n  const { ratingMax, disableDefaultStyles, customClassNames } = useSearchUIContext();\n\n  const renderRating = useCallback(\n    (v: string) => (\n      <Rating\n        max={ratingMax}\n        className={customClassNames.filter?.rating?.container}\n        activeRatingItemClassName={customClassNames.filter?.rating?.activeRatingItem}\n        activeHalfRatingItemClassName={customClassNames.filter?.rating?.activeHalfRatingItem}\n        value={Number(v)}\n        disableDefaultStyles={disableDefaultStyles}\n      />\n    ),\n    [ratingMax, JSON.stringify(customClassNames.filter?.rating), disableDefaultStyles],\n  );\n\n  return <ListFilter name={name} title={title} sort=\"none\" pinSelected={false} itemRender={renderRating} />;\n};\n\nexport default RatingFilter;\nexport type { RatingFilterProps };\n","import { Option, Select } from '@sajari/react-components';\nimport { useFilter } from '@sajari/react-hooks';\nimport { isArray, isEmpty } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { useSearchUIContext } from '../ContextProvider';\nimport Box from './Box';\nimport { SelectFilterProps } from './types';\nimport { formatLabel } from './utils';\n\nconst SelectFilter = (props: Omit<SelectFilterProps, 'type'>) => {\n  const { name, title, sort = 'count', sortAscending = sort !== 'count', format } = props;\n  const { options, reset, setSelected, selected, multi } = useFilter(name, { sort, sortAscending });\n  const { disableDefaultStyles = false, customClassNames, currency } = useSearchUIContext();\n  const { t } = useTranslation('filter');\n\n  if (isEmpty(options) && isEmpty(selected)) {\n    return null;\n  }\n\n  const getSelectText = (labels: Array<string | number>) => {\n    if (!labels.length) {\n      return t('select');\n    }\n\n    if (labels.length === 1) {\n      const [first] = labels;\n      return first;\n    }\n\n    return t('selected', { count: labels.length.toLocaleString() as never });\n  };\n\n  return (\n    <Box title={title} name={name} showReset={selected.length > 0 && multi} onReset={reset}>\n      {!isEmpty(options) && (\n        <Select\n          multiple={multi}\n          onChange={(value) => setSelected(isArray(value) ? value : [value])}\n          value={selected}\n          disableDefaultStyles={disableDefaultStyles}\n          size=\"sm\"\n          text={getSelectText}\n          className={customClassNames.filter?.select?.container}\n          buttonClassName={customClassNames.filter?.select?.button}\n          dropdownClassName={customClassNames.filter?.select?.dropdown}\n          optionClassName={customClassNames.filter?.select?.option}\n        >\n          {options.map(({ value, label, count }) => (\n            <Option value={label} key={value} label={count.toLocaleString()}>\n              {formatLabel(label, { format, currency, t })}\n            </Option>\n          ))}\n        </Select>\n      )}\n    </Box>\n  );\n};\n\nexport default SelectFilter;\nexport type { SelectFilterProps };\n","import { Box, Tab, TabList, Tabs } from '@sajari/react-components';\nimport { useFilter } from '@sajari/react-hooks';\nimport { isEmpty, useTheme } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport tw from 'twin.macro';\n\nimport { useSearchUIContext } from '../ContextProvider';\nimport { TabFilterProps } from './types';\nimport { formatLabel } from './utils';\n\nconst TabFilter = (props: Omit<TabFilterProps, 'type'>) => {\n  const { name, title, limit = 15, sort = 'count', sortAscending = sort !== 'count', format } = props;\n  const { t } = useTranslation('filter');\n  const theme = useTheme();\n  const { options, setSelected, selected } = useFilter(name, { sort, sortAscending });\n  const sliced = limit && options.length > limit ? options.slice(0, limit) : options;\n  const { disableDefaultStyles = false, customClassNames, currency, language } = useSearchUIContext();\n\n  if (isEmpty(sliced)) {\n    return null;\n  }\n\n  const selectedIndex = sliced.findIndex(({ label }) => label === selected[0]);\n\n  return (\n    <Tabs\n      aria-label={title}\n      onChange={(index) => setSelected(index !== 0 ? [sliced[index - 1].label] : [])}\n      index={selectedIndex < 0 ? 0 : selectedIndex + 1}\n      disableDefaultStyles={disableDefaultStyles}\n      className={customClassNames.filter?.tabs?.container}\n    >\n      <TabList className={customClassNames.filter?.tabs?.list}>\n        <Tab\n          className={customClassNames.filter?.tabs?.tab}\n          selectedClassName={customClassNames.filter?.tabs?.selectedTab}\n        >\n          {t('all')}\n        </Tab>\n        {sliced.map(({ label, count, value }, index) => (\n          <Tab\n            key={value}\n            className={customClassNames.filter?.tabs?.tab}\n            selectedClassName={customClassNames.filter?.tabs?.selectedTab}\n          >\n            {`${formatLabel(label, { format, currency, t })}`}\n            <Box\n              as=\"span\"\n              css={[\n                tw`py-0.5 px-1 rounded ml-3 text-xs leading-tight transition-colors`,\n                index === selectedIndex\n                  ? { backgroundColor: theme.color.primary.active, color: theme.color.primary.text }\n                  : tw`text-gray-500 bg-gray-100`,\n              ]}\n            >\n              {count.toLocaleString(language)}\n            </Box>\n          </Tab>\n        ))}\n      </TabList>\n    </Tabs>\n  );\n};\n\nexport default TabFilter;\nexport type { TabFilterProps };\n","import { ClickTracking, PosNegTracking, Token } from '@sajari/react-hooks';\nimport { isEmpty, isFunction, isString, isValidURL, noop } from '@sajari/react-sdk-utils';\n\nimport { ResultValues } from '../Results/types';\n\ninterface UseClickTrackingParams {\n  token: Token | undefined;\n  tracking: ClickTracking | PosNegTracking | undefined;\n  values: ResultValues;\n  onClick?: (url: string) => void;\n}\n\nfunction useClickTracking(params: UseClickTrackingParams) {\n  const { onClick, token, tracking, values } = params;\n  const { url } = values;\n\n  if (!tracking) {\n    return {\n      href: url,\n      onClick: noop,\n    };\n  }\n\n  // Get the click token from the response\n  const clickToken = token && 'click' in token ? token.click : undefined;\n  // Determine if the field used for the token is a valid URL (then it can redirect)\n  const useToken =\n    !isEmpty(clickToken) && Object.keys(values).includes(tracking.field) && isValidURL(values[tracking.field]);\n  // Determine href to use for links\n  const href = useToken ? clickToken : url;\n\n  const onClickHandler = () => {\n    if (isFunction(onClick)) {\n      onClick(url);\n    }\n\n    // Fire the click token using sendBeacon if we didn't use it for the href\n    if (!useToken && isString(clickToken) && isFunction(navigator?.sendBeacon)) {\n      navigator.sendBeacon(clickToken);\n    }\n  };\n\n  return {\n    href,\n    onClick: onClickHandler,\n  };\n}\n\nexport default useClickTracking;\n","import { FieldDictionary } from '@sajari/react-hooks';\nimport { Result } from '@sajari/sdk-js';\n\n// TODO: Handle mapping arrays in templates\n// e.g. `https://x.com/path/${name}` where name is an array (e.g. ['x', 'y']) should return ['https://x.com/path/x', 'https://x.com/path/y']\nconst fillTemplate = <T = Record<string, string | string[]>>(template: string, variables: T) =>\n  template.replace(/\\${(.*?)}/g, (_, g: string) => variables[g].toString());\n\nexport function mapFields<T = Record<string, string | string[] | null>>(values: T, fields: FieldDictionary = {}) {\n  return Object.entries(fields).reduce(\n    (mapped, [to, from]) => {\n      let value: string | null;\n      if (from === false) {\n        value = null;\n      } else if (Array.isArray(from)) {\n        const match = from.find((f) => Object.keys(values).includes(f)) as string;\n        value = values[match];\n      } else if (typeof from === 'function') {\n        value = from(values);\n      } else if (/\\${.+}/.test(from)) {\n        value = fillTemplate<T>(from, values);\n      } else if (from.startsWith('!function')) {\n        const functionBody = from.replace('!function', '');\n        // eslint-disable-next-line @typescript-eslint/no-implied-eval\n        const func = new Function('data', functionBody);\n        value = func(values);\n      } else {\n        value = values[from];\n      }\n\n      return {\n        ...mapped,\n        [to]: value,\n      };\n    },\n    { ...values },\n  );\n}\n\nexport default function mapResultFields<T = Record<string, string | string[]>>(\n  results: Result[],\n  fields: FieldDictionary,\n) {\n  return results.map(({ values, ...rest }) => ({\n    ...rest,\n    values: mapFields<T>((values as unknown) as T, fields),\n  }));\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Combobox } from '@sajari/react-components';\nimport { useAutocomplete, useQuery, useSearchContext } from '@sajari/react-hooks';\nimport { __DEV__, isArray } from '@sajari/react-sdk-utils';\nimport React, { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { useSearchUIContext } from '../ContextProvider';\nimport { useClickTracking } from '../hooks';\nimport { ResultValues } from '../Results/types';\nimport mapResultFields from '../utils/mapResultFields';\nimport { InputProps } from './types';\n\nconst Input = React.forwardRef((props: InputProps<any>, ref: React.Ref<HTMLInputElement>) => {\n  const { t } = useTranslation('input');\n  const { placeholder = t('placeholder'), mode = 'instant', onSelect, onChange, ...rest } = props;\n  const { results: rawResults, search, searching, fields } = useSearchContext();\n  const results = React.useMemo(() => mapResultFields<ResultValues>(rawResults ?? [], fields), [rawResults]);\n  const { search: searchAutocomplete, completion, suggestions } = useAutocomplete();\n  const { customClassNames, disableDefaultStyles = false, tracking } = useSearchUIContext();\n  const { query } = useQuery();\n  let items: Array<any> = [];\n\n  if (mode === 'suggestions') {\n    items = suggestions;\n  } else if (mode === 'results') {\n    // Only display 5 items\n    items = results.splice(0, 5).map((result) => {\n      const { values, token } = result;\n      const { description, image, title } = values;\n      const { href, onClick } = useClickTracking({ tracking, values, token });\n\n      return {\n        title,\n        url: href,\n        onClick,\n        description,\n        image: isArray(image) ? image[0] : image,\n      };\n    });\n  }\n\n  const onChangeMemoized = useCallback(\n    (value) => {\n      if (onChange) {\n        onChange(value);\n      }\n\n      if (mode === 'suggestions' || mode === 'typeahead') {\n        if (searchAutocomplete) {\n          searchAutocomplete(value);\n        }\n      } else if (mode === 'instant' || mode === 'results') {\n        search(value);\n      }\n    },\n    [onChange, mode, search],\n  );\n\n  const onKeyDownMemoized = useCallback(\n    (e) => {\n      if (e.key === 'Enter' && (mode === 'typeahead' || mode === 'suggestions' || mode === 'standard')) {\n        search((e.target as HTMLInputElement).value);\n      }\n    },\n    [mode, search],\n  );\n\n  const onSelectMemoized = useCallback(\n    (item) => {\n      if (onSelect) {\n        onSelect(item);\n      }\n      if (mode === 'suggestions') {\n        search(item as string);\n      }\n    },\n    [mode, search],\n  );\n\n  return (\n    <Combobox\n      {...rest}\n      ref={ref}\n      placeholder={placeholder}\n      mode={mode as Exclude<InputProps<any>['mode'], 'instant'>}\n      items={items}\n      completion={mode === 'typeahead' ? completion : ''}\n      value={query}\n      loading={searching}\n      onChange={onChangeMemoized}\n      onKeyDown={onKeyDownMemoized}\n      onSelect={onSelectMemoized}\n      className={customClassNames.input?.container}\n      dropdownClassName={customClassNames.input?.dropdown}\n      dropdownFooterClassName={customClassNames.input?.dropdownFooter}\n      dropdownHighlightItemClassName={customClassNames.input?.dropdownHighlightItem}\n      dropdownSelectedItemClassName={customClassNames.input?.dropdownSelectedItem}\n      dropdownItemClassName={customClassNames.input?.dropdownItem}\n      dropdownListClassName={customClassNames.input?.dropdownList}\n      inputClassName={customClassNames.input?.input}\n      inputContainerClassName={customClassNames.input?.inputContainer}\n      resultClassName={customClassNames.input?.result}\n      resultImageContainerClassName={customClassNames.input?.resultImageContainer}\n      resultTextContainerClassName={customClassNames.input?.resultTextContainer}\n      selectedResultClassName={customClassNames.input?.selectedResult}\n      typeaheadClassName={customClassNames.input?.typeahead}\n      voiceInputClassName={customClassNames.input?.voiceInput}\n      disableDefaultStyles={disableDefaultStyles}\n    />\n  );\n});\n\nif (__DEV__) {\n  Input.displayName = 'Input';\n}\n\nexport default Input;\nexport type { InputProps };\n","import { Pagination as PurePagination } from '@sajari/react-components';\nimport { usePagination } from '@sajari/react-hooks';\nimport { __DEV__ } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { useSearchUIContext } from '../ContextProvider';\nimport { PaginationProps } from './types';\n\nconst Pagination = (props: PaginationProps) => {\n  const { t } = useTranslation('pagination');\n  const { page, setPage, pageCount, resultsPerPage, totalResults } = usePagination('search');\n  const { customClassNames, disableDefaultStyles, language } = useSearchUIContext();\n\n  return (\n    <PurePagination\n      language={language}\n      page={page}\n      resultsPerPage={resultsPerPage}\n      totalResults={totalResults}\n      pageCount={pageCount}\n      onChange={setPage}\n      i18n={{\n        label: t('label'),\n        previous: t('previous'),\n        next: t('next'),\n        page: (params) => t('page', params),\n        current: (params) => t('current', params),\n      }}\n      className={customClassNames?.pagination?.container}\n      buttonClassName={customClassNames?.pagination?.button}\n      activeClassName={customClassNames?.pagination?.active}\n      prevClassName={customClassNames?.pagination?.prev}\n      nextClassName={customClassNames?.pagination?.next}\n      spacerEllipsisClassName={customClassNames?.pagination?.spacerEllipsis}\n      statusClassName={customClassNames?.pagination?.status}\n      disableDefaultStyles={disableDefaultStyles}\n      {...props}\n    />\n  );\n};\n\nif (__DEV__) {\n  Pagination.displayName = 'Pagination';\n}\n\nexport default Pagination;\nexport type { PaginationProps };\n","import { Box, Heading, Spinner, Text } from '@sajari/react-components';\nimport { getStylesObject } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\n\nimport useMessageStyles from './styles';\nimport { MessageProps } from './types';\n\nconst Message = (props: MessageProps) => {\n  const { title, body, appearance, styles: stylesProp, disableDefaultStyles = false, ...rest } = props;\n  const styles = getStylesObject(useMessageStyles(), disableDefaultStyles);\n\n  const render = () => {\n    switch (appearance) {\n      case 'loading':\n        return (\n          <Box css={styles.loadingWrapper}>\n            <Spinner css={styles.loadingSpinner} disableDefaultStyles={disableDefaultStyles} />\n            {title && <Text css={styles.loadingText} disableDefaultStyles={disableDefaultStyles}>{`${title}...`}</Text>}\n          </Box>\n        );\n\n      case 'error':\n        return (\n          <React.Fragment>\n            <Heading size=\"3xl\" css={styles.errorHeading} disableDefaultStyles={disableDefaultStyles}>\n              {title}\n            </Heading>\n            {body && (\n              <Text css={styles.errorText} disableDefaultStyles={disableDefaultStyles}>\n                {body}\n              </Text>\n            )}\n          </React.Fragment>\n        );\n\n      default:\n      case 'default':\n        return (\n          <React.Fragment>\n            <Heading size=\"3xl\" disableDefaultStyles={disableDefaultStyles}>\n              {title}\n            </Heading>\n            {body && (\n              <Text\n                css={styles.defaultText}\n                disableDefaultStyles={disableDefaultStyles}\n                dangerouslySetInnerHTML={{\n                  __html: body,\n                }}\n              />\n            )}\n          </React.Fragment>\n        );\n    }\n  };\n\n  return (\n    <Box css={[styles.container, stylesProp]} {...rest}>\n      {render()}\n    </Box>\n  );\n};\n\nexport default Message;\n","import { mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nexport default function useMessageStyles() {\n  const styles = {\n    container: [tw`w-full px-6 py-20 text-center md:py-40 md:px-12`],\n    loadingWrapper: [tw`text-gray-500`],\n    loadingSpinner: [tw`inline-block w-6 h-6`],\n    loadingText: [tw`mt-3`],\n    errorHeading: [tw`text-red-500`],\n    errorText: [tw`text-gray-500`],\n    defaultText: [tw`text-gray-500`],\n  };\n\n  return mapStyles(styles);\n}\n","/* eslint-disable react/jsx-no-target-blank */\nimport { Box, Heading, Image, ImageProps, Link, Rating, Text } from '@sajari/react-components';\nimport {\n  __DEV__,\n  decodeHTML,\n  formatPrice,\n  getStylesObject,\n  isArray,\n  isNumber,\n  isString,\n  isValidURL,\n} from '@sajari/react-sdk-utils';\nimport React, { useMemo } from 'react';\n\nimport { useSearchUIContext } from '../../../ContextProvider';\nimport { useClickTracking } from '../../../hooks';\nimport useResultStyles from './styles';\nimport { ResultProps } from './types';\n\nconst Result = React.memo(\n  (props: ResultProps) => {\n    const {\n      appearance = 'list',\n      imageAspectRatio: imageAspectRatioProp = 1,\n      imageObjectFit: imageObjectFitProp = 'contain',\n      values,\n      token,\n      forceImage,\n      headingClassName,\n      priceClassName,\n      originalPriceClassName,\n      subTitleClassName,\n      ratingClassName,\n      descriptionClassName,\n      disableDefaultStyles = false,\n      onClick: onClickProp,\n      styles: stylesProp,\n      ...rest\n    } = props;\n    const { currency, language, ratingMax, tracking } = useSearchUIContext();\n    const { href, onClick } = useClickTracking({ token, tracking, values, onClick: onClickProp });\n    const { title, description, subtitle, image, price, originalPrice } = values;\n    const rating = Number(values.rating);\n\n    // Determine if the result is on sale\n    const isOnSale = React.useMemo(() => {\n      if (!price || !originalPrice) {\n        return false;\n      }\n\n      const parsePrices = (input: string | Array<string>) => (isArray(input) ? input : [input]).map(Number);\n      const prices = parsePrices(price);\n      const originalPrices = parsePrices(originalPrice);\n\n      if (originalPrices.length >= prices.length) {\n        return prices.some((p, index) => isNumber(p) && isNumber(originalPrices[index]) && p < originalPrices[index]);\n      }\n\n      if (originalPrices.length === 1 && prices.length > 1) {\n        const [original] = originalPrices;\n\n        if (!isNumber(original)) {\n          return false;\n        }\n\n        return prices.some((p) => isNumber(p) && p < original);\n      }\n\n      return false;\n    }, [JSON.stringify(price), JSON.stringify(originalPrice)]);\n\n    const styles = getStylesObject(useResultStyles({ ...props, appearance, isOnSale }), disableDefaultStyles);\n\n    const imageAspectRatio: ImageProps['aspectRatio'] = useMemo(() => {\n      const aspectRatio = imageAspectRatioProp;\n\n      if (isNumber(aspectRatio) || aspectRatio === null) {\n        return aspectRatio;\n      }\n\n      return aspectRatio[appearance];\n    }, [appearance, imageAspectRatioProp]);\n\n    const imageObjectFit: ImageProps['objectFit'] = useMemo(() => {\n      const objectFit = imageObjectFitProp;\n\n      if (isString(objectFit) || objectFit === null) {\n        return objectFit;\n      }\n\n      return objectFit[appearance];\n    }, [appearance, imageObjectFitProp]);\n\n    const imageSrc = isArray(image) ? image[0] : image;\n    const imageHoverSrc = isArray(image) ? image[1] : undefined;\n\n    const renderTitle = () => (\n      <Heading as=\"h1\" size=\"base\" css={styles.title} className={headingClassName}>\n        <Link href={href} onClick={onClick}>\n          {decodeHTML(title)}\n        </Link>\n      </Heading>\n    );\n\n    const renderSubtitle = () => {\n      if (!subtitle) return null;\n\n      if (isValidURL(subtitle)) {\n        return (\n          <Link\n            href={href}\n            onClick={onClick}\n            css={styles.subtitle}\n            disableDefaultStyles={disableDefaultStyles}\n            className={subTitleClassName}\n          >\n            {subtitle}\n          </Link>\n        );\n      }\n\n      return (\n        <Text css={styles.subtitle} disableDefaultStyles={disableDefaultStyles} className={subTitleClassName}>\n          {subtitle}\n        </Text>\n      );\n    };\n\n    const renderPrice = () => {\n      if (!price) return null;\n\n      return (\n        <Box css={styles.priceContainer}>\n          <Text css={styles.price} className={priceClassName} disableDefaultStyles={disableDefaultStyles}>\n            {formatPrice(price, { currency, language })}\n          </Text>\n\n          {originalPrice && isOnSale && (\n            <Text\n              css={styles.originalPrice}\n              className={originalPriceClassName}\n              disableDefaultStyles={disableDefaultStyles}\n            >\n              {formatPrice(\n                isArray(originalPrice)\n                  ? originalPrice\n                      .map(Number)\n                      .filter((p) => isNumber(p) && p !== 0)\n                      .map(String)\n                  : originalPrice,\n                {\n                  currency,\n                  language,\n                },\n              )}\n            </Text>\n          )}\n        </Box>\n      );\n    };\n\n    return (\n      <Box as=\"article\" {...rest} css={[styles.container, stylesProp]}>\n        {(isValidURL(imageSrc, true) || forceImage) && (\n          <Link\n            href={href}\n            onClick={onClick}\n            onContextMenu={onClick}\n            css={styles.imageContainer}\n            disableDefaultStyles={disableDefaultStyles}\n          >\n            <Image\n              src={imageSrc}\n              hoverSrc={imageHoverSrc}\n              css={styles.image}\n              aspectRatio={imageAspectRatio}\n              objectFit={imageObjectFit}\n              disableDefaultStyles={disableDefaultStyles}\n            />\n          </Link>\n        )}\n\n        <Box css={styles.content}>\n          {appearance === 'list' && (\n            <Box css={styles.header}>\n              <Box>\n                {renderTitle()}\n                {renderSubtitle()}\n              </Box>\n\n              <Box>{renderPrice()}</Box>\n            </Box>\n          )}\n\n          {appearance === 'grid' && (\n            <>\n              {renderTitle()}\n              {renderSubtitle()}\n            </>\n          )}\n\n          {isNumber(rating) && (\n            <Rating\n              value={rating}\n              max={ratingMax}\n              className={ratingClassName}\n              disableDefaultStyles={disableDefaultStyles}\n            />\n          )}\n\n          {appearance === 'list' && description && (\n            <Text truncate={2} css={styles.description} className={descriptionClassName}>\n              {decodeHTML(description)}\n            </Text>\n          )}\n\n          {appearance === 'grid' && renderPrice()}\n        </Box>\n      </Box>\n    );\n  },\n  (prev, next) => JSON.stringify(prev) === JSON.stringify(next),\n);\n\nif (__DEV__) {\n  Result.displayName = 'Result';\n}\n\nexport default Result;\nexport type { ResultProps };\n","import { inferStylesObjectKeys, mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nimport { ResultProps } from './types';\n\ninterface UseResultStylesParams extends ResultProps {\n  isOnSale?: boolean;\n}\n\nexport default function useResultStyles(props: UseResultStylesParams) {\n  const { appearance, isOnSale } = props;\n\n  const styles = inferStylesObjectKeys({\n    container: [],\n    imageContainer: [],\n    image: [tw`rounded-md`],\n    content: [tw`flex-1 min-w-0`],\n    header: [tw`flex items-start justify-between`],\n    title: [tw`font-medium`],\n    subtitle: [tw`text-xs text-gray-400`],\n    description: [tw`mt-1 text-sm text-gray-500`],\n    rating: [tw`mt-1 space-y-1 text-center`],\n    priceContainer: [],\n    price: [isOnSale ? tw`font-medium text-red-500` : ''],\n    originalPrice: [tw`text-xs text-gray-400 line-through`],\n  });\n\n  switch (appearance) {\n    case 'grid':\n      styles.container.push(tw`text-center`);\n      styles.imageContainer.push(tw`block mb-4`);\n      styles.priceContainer.push(tw`flex items-baseline justify-center space-x-1`);\n      break;\n\n    default:\n    case 'list':\n      styles.container.push(tw`flex items-center w-full`);\n      styles.imageContainer.push(tw`w-24 mr-6`);\n      styles.priceContainer.push(tw`text-right`);\n      break;\n  }\n\n  return mapStyles(styles);\n}\n","import { clamp, inferStylesObjectKeys, isNumber, isObject, mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\nimport { ColumnValue, GapValue, ResultsProps } from './types';\n\ninterface Props extends ResultsProps {\n  width: number;\n}\n\nfunction findBreakpoint<T>(breakpoints: Record<number, T>, target: number): T | null {\n  const match = Object.keys(breakpoints)\n    .map(Number)\n    .sort((a, b) => b - a)\n    .find((s) => s <= target);\n\n  return match ? breakpoints[match] : null;\n}\n\nexport default function useResultsStyles({\n  appearance = 'list',\n  columnMinWidth = 240,\n  columns: columnsProp,\n  gap: gapProp = appearance === 'list' ? { 0: 4, 640: 8 } : undefined,\n  width,\n}: Props) {\n  const styles = inferStylesObjectKeys({\n    container: [],\n  });\n\n  if (appearance === 'list') {\n    styles.container.push(tw`flex flex-col`);\n    let spaceY: GapValue = 4;\n\n    if (gapProp) {\n      if (isNumber(gapProp)) {\n        spaceY = gapProp;\n      } else if (isObject(gapProp)) {\n        const match = findBreakpoint<GapValue>(gapProp, width);\n        if (match) {\n          spaceY = match;\n        }\n      }\n\n      switch (spaceY) {\n        case 1:\n          styles.container.push(tw`space-y-1`);\n          break;\n        case 2:\n          styles.container.push(tw`space-y-2`);\n          break;\n        case 3:\n          styles.container.push(tw`space-y-3`);\n          break;\n        case 4:\n          styles.container.push(tw`space-y-4`);\n          break;\n        case 5:\n          styles.container.push(tw`space-y-5`);\n          break;\n        case 6:\n          styles.container.push(tw`space-y-6`);\n          break;\n        case 7:\n          styles.container.push(tw`space-y-7`);\n          break;\n        case 8:\n          styles.container.push(tw`space-y-8`);\n          break;\n        case 9:\n          styles.container.push(tw`space-y-9`);\n          break;\n        case 10:\n          styles.container.push(tw`space-y-10`);\n          break;\n        case 11:\n          styles.container.push(tw`space-y-11`);\n          break;\n        case 12:\n          styles.container.push(tw`space-y-12`);\n          break;\n        default:\n          styles.container.push(tw`space-y-4`);\n          break;\n      }\n    }\n  } else if (appearance === 'grid') {\n    styles.container.push(tw`grid`);\n\n    // TODO: These sort of helpers should go in utils ideally, or find a better way to handle this\n    let columns: ColumnValue = 1;\n    let gap: GapValue = 8;\n\n    if (columnsProp) {\n      if (isNumber(columnsProp)) {\n        columns = columnsProp;\n      } else if (isObject(columnsProp)) {\n        const match = findBreakpoint<ColumnValue>(columnsProp, width);\n        if (match) {\n          columns = match;\n        }\n      }\n    } else if (isNumber(columnMinWidth)) {\n      columns = clamp(Math.floor(width / columnMinWidth), 1, 12) as ColumnValue;\n    }\n\n    if (gapProp) {\n      if (isNumber(gapProp)) {\n        gap = gapProp;\n      } else if (isObject(gapProp)) {\n        const match = findBreakpoint<GapValue>(gapProp, width);\n        if (match) {\n          gap = match;\n        }\n      }\n    }\n\n    switch (columns) {\n      case 1:\n        styles.container.push(tw`grid-cols-1`);\n        break;\n      case 2:\n        styles.container.push(tw`grid-cols-2`);\n        break;\n      case 3:\n        styles.container.push(tw`grid-cols-3`);\n        break;\n      case 4:\n        styles.container.push(tw`grid-cols-4`);\n        break;\n      case 5:\n        styles.container.push(tw`grid-cols-5`);\n        break;\n      case 6:\n        styles.container.push(tw`grid-cols-6`);\n        break;\n      case 7:\n        styles.container.push(tw`grid-cols-7`);\n        break;\n      case 8:\n        styles.container.push(tw`grid-cols-8`);\n        break;\n      case 9:\n        styles.container.push(tw`grid-cols-9`);\n        break;\n      case 10:\n        styles.container.push(tw`grid-cols-10`);\n        break;\n      case 11:\n        styles.container.push(tw`grid-cols-11`);\n        break;\n      case 12:\n        styles.container.push(tw`grid-cols-12`);\n        break;\n      default:\n        styles.container.push(tw`grid-cols-1`);\n        break;\n    }\n\n    switch (gap) {\n      case 1:\n        styles.container.push(tw`gap-1`);\n        break;\n      case 2:\n        styles.container.push(tw`gap-2`);\n        break;\n      case 3:\n        styles.container.push(tw`gap-3`);\n        break;\n      case 4:\n        styles.container.push(tw`gap-4`);\n        break;\n      case 5:\n        styles.container.push(tw`gap-5`);\n        break;\n      case 6:\n        styles.container.push(tw`gap-6`);\n        break;\n      case 7:\n        styles.container.push(tw`gap-7`);\n        break;\n      case 8:\n        styles.container.push(tw`gap-8`);\n        break;\n      case 9:\n        styles.container.push(tw`gap-9`);\n        break;\n      case 10:\n        styles.container.push(tw`gap-10`);\n        break;\n      case 11:\n        styles.container.push(tw`gap-11`);\n        break;\n      case 12:\n        styles.container.push(tw`gap-12`);\n        break;\n      default:\n        styles.container.push(tw`gap-8`);\n        break;\n    }\n  }\n\n  return mapStyles(styles);\n}\n","import { Box, Label, Text } from '@sajari/react-components';\nimport { useSearchContext } from '@sajari/react-hooks';\nimport { getStylesObject } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\n\nimport { useSearchUIContext } from '../ContextProvider';\nimport useViewOptionStyles from './styles';\nimport { ViewOptionProps } from './types';\n\nconst ViewOption = (props: ViewOptionProps) => {\n  const { disableDefaultStyles = false } = useSearchUIContext();\n  const {\n    id,\n    inline = true,\n    renderAsLabel: input,\n    label,\n    size,\n    styles: stylesProp,\n    children,\n    className,\n    labelClassName,\n    ...rest\n  } = props;\n  const labelId = `${id}-label`;\n  const { searched } = useSearchContext();\n  const styles = getStylesObject(useViewOptionStyles({ inline }), disableDefaultStyles);\n\n  if (!searched) {\n    return null;\n  }\n\n  const labelProps = {\n    id: labelId,\n    css: styles.label,\n    size,\n    disableDefaultStyles,\n    className: labelClassName,\n  };\n\n  return (\n    <Box css={[styles.container, stylesProp]} aria-labelledby={labelId} {...rest} className={className}>\n      {input ? (\n        <Label htmlFor={id} {...labelProps}>\n          {label}\n        </Label>\n      ) : (\n        <Text {...labelProps}>{label}</Text>\n      )}\n\n      {children}\n    </Box>\n  );\n};\n\nexport default ViewOption;\nexport type { ViewOptionProps };\n","import { mapStyles } from '@sajari/react-sdk-utils';\nimport tw from 'twin.macro';\n\ninterface UseViewOptionStyleParams {\n  inline?: boolean;\n}\n\nexport default function useViewOptionStyles(params: UseViewOptionStyleParams) {\n  const { inline } = params;\n  const styles = {\n    container: [tw`min-w-0`, inline ? tw`flex items-center space-x-2` : tw`space-y-1`],\n    label: [tw`text-gray-500`],\n  };\n\n  return mapStyles(styles);\n}\n","import { useId } from '@react-aria/utils';\nimport { Option, Select } from '@sajari/react-components';\nimport { useResultsPerPage, useSearchContext } from '@sajari/react-hooks';\nimport { isArray } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { useSearchUIContext } from '../ContextProvider';\nimport ViewOption from '../ViewOption';\nimport { ResultsPerPageProps } from './types';\n\nconst defaultOptions = [15, 25, 50, 100];\n\nconst ResultsPerPage = (props: ResultsPerPageProps) => {\n  const { t } = useTranslation('resultsPerPage');\n  const { customClassNames, disableDefaultStyles = false } = useSearchUIContext();\n  const { label = t('label'), options = defaultOptions, styles: stylesProp, size, ...rest } = props;\n  const { resultsPerPage, setResultsPerPage } = useResultsPerPage();\n  const { totalResults } = useSearchContext();\n  const id = `page-size-${useId()}`;\n  const optionsSorted = options.sort((a, b) => a - b);\n  const [min] = optionsSorted;\n\n  if (totalResults === 0 || min > totalResults) {\n    return null;\n  }\n\n  return (\n    <ViewOption\n      id={id}\n      label={label}\n      size={size}\n      className={customClassNames.sorting?.container}\n      labelClassName={customClassNames.sorting?.label}\n      renderAsLabel\n      {...rest}\n    >\n      <Select\n        id={id}\n        value={`${resultsPerPage}`}\n        onChange={(value) => setResultsPerPage(Number(isArray(value) ? value[0] : value))}\n        size={size}\n        disableDefaultStyles={disableDefaultStyles}\n        className={customClassNames.resultsPerPage?.select}\n      >\n        {optionsSorted.map((s) => (\n          <Option key={s} value={s}>\n            {s}\n          </Option>\n        ))}\n      </Select>\n    </ViewOption>\n  );\n};\n\nexport default ResultsPerPage;\nexport type { ResultsPerPageProps };\n","import { useId } from '@react-aria/utils';\nimport { Option, Select } from '@sajari/react-components';\nimport { useSorting } from '@sajari/react-hooks';\nimport { isArray } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { useSearchUIContext } from '../ContextProvider';\nimport ViewOption from '../ViewOption';\nimport { SortingProps, SortOption } from './types';\n\nconst defaultOptions: SortOption[] = [{ name: 'Most relevant', value: '' }];\n\nconst Sorting = (props: SortingProps) => {\n  const { t } = useTranslation('sorting');\n  const { label = t('label'), options = defaultOptions, size, styles: stylesProp, ...rest } = props;\n  const { disableDefaultStyles = false, customClassNames } = useSearchUIContext();\n  const { sorting, setSorting } = useSorting();\n  const id = `sorting-${useId()}`;\n\n  return (\n    <ViewOption\n      id={id}\n      label={label}\n      size={size}\n      className={customClassNames.sorting?.container}\n      labelClassName={customClassNames.sorting?.label}\n      renderAsLabel\n      {...rest}\n    >\n      <Select\n        id={id}\n        value={sorting}\n        onChange={(value) => setSorting(isArray(value) ? value[0] : value)}\n        size={size}\n        disableDefaultStyles={disableDefaultStyles}\n        className={customClassNames.sorting?.select}\n      >\n        {options.map((s) => (\n          <Option key={s.value} value={s.value}>\n            {s.name}\n          </Option>\n        ))}\n      </Select>\n    </ViewOption>\n  );\n};\n\nexport default Sorting;\nexport type { SortingProps };\n","import * as React from 'react';\n\nimport ColorFilter from './ColorFilter';\nimport ListFilter from './ListFilter';\nimport RangeFilter from './RangeFilter';\nimport RatingFilter from './RatingFilter';\nimport SelectFilter from './SelectFilter';\nimport TabFilter from './TabFilter';\nimport { FilterProps } from './types';\n\nconst Filter = ({ type = 'list', ...rest }: FilterProps) => {\n  if (type === 'color') {\n    return <ColorFilter {...rest} />;\n  }\n\n  if (type === 'range') {\n    return <RangeFilter {...rest} />;\n  }\n\n  if (type === 'rating') {\n    return <RatingFilter {...rest} />;\n  }\n\n  if (type === 'select') {\n    return <SelectFilter {...rest} />;\n  }\n\n  if (type === 'tabs') {\n    return <TabFilter {...rest} />;\n  }\n\n  return <ListFilter {...rest} />;\n};\n\nexport default Filter;\nexport * from './types';\n","import { ResizeObserver } from '@sajari/react-components';\nimport { useQuery, useSearchContext, useTracking } from '@sajari/react-hooks';\nimport { getStylesObject, isEmpty, isNullOrUndefined } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { useSearchUIContext } from '../ContextProvider';\nimport mapResultFields from '../utils/mapResultFields';\nimport Message from './components/Message';\nimport Result from './components/Result';\nimport useResultsStyles from './styles';\nimport { ResultsProps, ResultValues } from './types';\n\nconst Results = (props: ResultsProps) => {\n  const { results: rawResults, searching, fields, error } = useSearchContext();\n  const results = React.useMemo(() => (rawResults ? mapResultFields<ResultValues>(rawResults, fields) : undefined), [\n    rawResults,\n  ]);\n  const { disableDefaultStyles = false, customClassNames, viewType, setViewType } = useSearchUIContext();\n  const { query } = useQuery();\n  const { defaultAppearance, appearance = viewType, styles: stylesProp, ...rest } = props;\n  const [width, setWidth] = React.useState(0);\n  const { handleResultClicked } = useTracking();\n  const hasImages = React.useMemo(() => results?.some((r) => r.values?.image), [results]);\n  const styles = getStylesObject(useResultsStyles({ ...props, appearance, width }), disableDefaultStyles);\n  const { t } = useTranslation(['common', 'errors', 'result']);\n\n  React.useEffect(() => {\n    if (defaultAppearance) {\n      setViewType(defaultAppearance);\n    }\n  }, []);\n\n  if (error) {\n    let body = t('errors:generic');\n\n    if (error.statusCode === 403) {\n      body = t('errors:authorization');\n    } else if (error.name === 'NetworkError' || error.message.startsWith('NetworkError')) {\n      body = t('errors:connection');\n    }\n\n    return <Message title={t('common:error')} body={body} className={customClassNames.results?.errorMessage} />;\n  }\n\n  // We've not searched yet\n  if (isNullOrUndefined(results)) {\n    return (\n      <Message\n        title={t('common:loading')}\n        appearance=\"loading\"\n        disableDefaultStyles={disableDefaultStyles}\n        className={customClassNames.results?.searchingMessage}\n      />\n    );\n  }\n\n  // There's genuinely no results\n  // Show a loader if we're refreshing from no results\n  if (isEmpty(results)) {\n    if (searching) {\n      return (\n        <Message\n          title={t('common:loading')}\n          appearance=\"loading\"\n          disableDefaultStyles={disableDefaultStyles}\n          className={customClassNames.results?.searchingMessage}\n        />\n      );\n    }\n\n    return (\n      <Message\n        title={t('results:empty.title')}\n        body={t('results:empty.body', { query: `<strong>${query}</strong>` })}\n        disableDefaultStyles={disableDefaultStyles}\n        className={customClassNames.results?.emptyMessage}\n      />\n    );\n  }\n\n  return (\n    <ResizeObserver\n      onResize={(rect) => setWidth(rect.width)}\n      css={[styles.container, stylesProp]}\n      className={customClassNames.results?.container}\n    >\n      {results?.map(({ values, token }, i) => (\n        <Result\n          onClick={handleResultClicked}\n          token={token}\n          // eslint-disable-next-line no-underscore-dangle\n          key={values._id ?? i}\n          values={values}\n          appearance={appearance}\n          forceImage={hasImages}\n          disableDefaultStyles={disableDefaultStyles}\n          className={customClassNames.results?.item}\n          headingClassName={customClassNames.results?.heading}\n          descriptionClassName={customClassNames.results?.description}\n          priceClassName={customClassNames.results?.price}\n          ratingClassName={customClassNames.results?.rating}\n          subTitleClassName={customClassNames.results?.subTitle}\n          {...rest}\n        />\n      ))}\n    </ResizeObserver>\n  );\n};\n\nexport default Results;\nexport type { ResultsProps };\n","/* eslint-disable react/jsx-one-expression-per-line */\nimport { Box, Button, Text } from '@sajari/react-components';\nimport { useAutocomplete, useSearchContext } from '@sajari/react-hooks';\nimport { pluralize } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\nimport { LiveMessage } from 'react-aria-live';\nimport { useTranslation } from 'react-i18next';\n\nimport { useSearchUIContext } from '../ContextProvider';\nimport { SummaryProps } from './types';\n\nconst Summary = (props: SummaryProps) => {\n  const { latency, totalResults, search, queryValues, searched } = useSearchContext();\n  const { disableDefaultStyles, language } = useSearchUIContext();\n  const { suggest = false, showLatency = false, ...rest } = props;\n  const query = queryValues?.get('q') ?? '';\n  const { completion } = useAutocomplete();\n  const { t } = useTranslation(['common', 'summary']);\n\n  if (!searched) {\n    return null;\n  }\n\n  return (\n    <React.Fragment>\n      <LiveMessage\n        message={\n          query === ''\n            ? t('summary:noQueryResults', {\n                count: totalResults,\n                object: pluralize(totalResults, t('common:item'), t('common:items')),\n              })\n            : t('summary:results', {\n                count: totalResults,\n                object: pluralize(totalResults, t('common:result'), t('common:results')),\n                query,\n              })\n        }\n        aria-live=\"polite\"\n      />\n\n      <Text {...rest} disableDefaultStyles={disableDefaultStyles}>\n        <Box\n          as=\"span\"\n          dangerouslySetInnerHTML={{\n            __html:\n              query === ''\n                ? t('summary:noQueryResults', {\n                    count: totalResults.toLocaleString(language),\n                    object: pluralize(totalResults, t('common:item'), t('common:items')).toLowerCase(),\n                  } as Record<string, string>)\n                : t('summary:results', {\n                    count: totalResults.toLocaleString(language),\n                    object: pluralize(totalResults, t('common:result'), t('common:results')).toLowerCase(),\n                    query: `<strong>${query}</strong>`,\n                  } as Record<string, string>),\n          }}\n        />\n        {showLatency ? ` ${t('summary:latency', { time: latency })}` : ''}\n        {completion && completion !== query.trim() && suggest ? (\n          <React.Fragment>\n            {`. ${t('summary:alternative')} `}\n            <Button\n              onClick={() => search(completion)}\n              spacing=\"none\"\n              appearance=\"link\"\n              disableDefaultStyles={disableDefaultStyles}\n            >\n              {completion}\n            </Button>\n            .\n          </React.Fragment>\n        ) : null}\n      </Text>\n    </React.Fragment>\n  );\n};\n\nexport default Summary;\nexport type { SummaryProps };\n","import { useId } from '@react-aria/utils';\nimport { Button, ButtonGroup } from '@sajari/react-components';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { IconSmallGrid, IconSmallList } from '../assets/icons';\nimport { useSearchUIContext } from '../ContextProvider';\nimport ViewOption from '../ViewOption';\nimport { ViewTypeProps } from './types';\n\nconst ViewType = (props: ViewTypeProps) => {\n  const { t } = useTranslation('viewType');\n  const { customClassNames, disableDefaultStyles = false } = useSearchUIContext();\n  const { label = t('label'), size, styles: stylesProp, ...rest } = props;\n  const id = `view-type-${useId()}`;\n  const { viewType, setViewType } = useSearchUIContext();\n\n  return (\n    <ViewOption\n      id={id}\n      label={label}\n      size={size}\n      className={customClassNames.sorting?.container}\n      labelClassName={customClassNames.sorting?.label}\n      {...rest}\n    >\n      <ButtonGroup\n        attached\n        disableDefaultStyles={disableDefaultStyles}\n        className={customClassNames.viewType?.buttonGroup}\n      >\n        <Button\n          onClick={() => setViewType('grid')}\n          size={size}\n          appearance={viewType === 'grid' ? 'primary' : undefined}\n          aria-label={t('grid')}\n        >\n          &#8203;\n          <IconSmallGrid />\n        </Button>\n        <Button\n          onClick={() => setViewType('list')}\n          size={size}\n          appearance={viewType === 'list' ? 'primary' : undefined}\n          aria-label={t('list')}\n        >\n          &#8203;\n          <IconSmallList />\n        </Button>\n      </ButtonGroup>\n    </ViewOption>\n  );\n};\n\nexport default ViewType;\nexport type { ViewTypeProps };\n"],"names":["i18n","use","LanguageDetector","init","resources","en","common","result","results","items","item","loading","error","errors","authorization","connection","generic","filter","all","rangeOver","rangeUnder","reset","select","selected","showLess","showMore","input","placeholder","resultsPerPage","label","pagination","previous","next","page","current","empty","title","body","sorting","summary","noQueryResults","latency","alternative","viewType","grid","list","fallbackLng","interpolation","escapeValue","react","wait","createContext","strict","name","Provider","useSearchUIContext","getHeaderId","formatLabel","params","format","currency","t","formatPrice","v","formatNumber","style","replace","test","split","map","Number","startsWith","value","substring","Header","onReset","showReset","useTranslation","disableDefaultStyles","customClassNames","styles","getStylesObject","container","heading","_jsxs","Box","css","className","_customClassNames$fil","header","_jsx","Heading","as","size","_customClassNames$fil2","id","isString","undefined","Button","appearance","spacing","onClick","_customClassNames$fil3","resetButton","React","ref","children","headerProps","CoreBox","box","colorKeys","Swatch","ColorFilter","useFilter","options","setSelected","optionKeys","useMemo","o","JSON","stringify","filtered","c","some","toLowerCase","color","Color","isEmpty","length","checkedColors","onChange","colorClassName","_customClassNames$fil4","colorCheckedClassName","_customClassNames$fil5","_customClassNames$fil6","itemChecked","ListFilter","props","limit","sort","sortAscending","itemRender","filterContainerId","multi","searchable","pinSelected","isBoolean","lastFocusedControl","setLastFocusedControl","query","setQuery","q","useQuery","shown","setShown","language","theme","useTheme","innerList","count","checkbox","searchWrapper","toggleButtonWrapper","toggleIcon","primary","base","isSSR","document","querySelector","_document$querySelect","focus","Control","Checkbox","Radio","includes","slice","transformedItems","activeElement","pinned","prop","a","b","indexOf","pinItems","allShown","Icon","IconSmallChevronUp","IconSmallChevronDown","s","checked","noop","toLocaleString","filterSearchOnChange","Combobox","searchFilter","CheckboxGroup","checkboxGroup","RadioGroup","e","target","_customClassNames$fil7","_customClassNames$fil8","radioGroup","_customClassNames$fil9","_customClassNames$fil10","toggleButton","RangeFilter","showInputs","steps","tick","ticks","useRangeFilter","min","max","range","setRange","step","RangeInput","fillClassName","fill","handleClassName","handle","handleActiveClassName","handleActive","inputClassName","trackClassName","_customClassNames$fil11","_customClassNames$fil12","track","RatingFilter","ratingMax","renderRating","useCallback","Rating","rating","activeRatingItemClassName","activeRatingItem","activeHalfRatingItemClassName","activeHalfRatingItem","SelectFilter","Select","multiple","isArray","text","labels","buttonClassName","button","dropdownClassName","dropdown","optionClassName","option","Option","TabFilter","sliced","selectedIndex","findIndex","Tabs","index","tabs","TabList","Tab","tab","selectedClassName","selectedTab","backgroundColor","active","useClickTracking","token","tracking","values","url","href","clickToken","click","useToken","Object","keys","field","isValidURL","isFunction","navigator","_navigator","sendBeacon","mapFields","fields","entries","reduce","mapped","variables","to","from","Array","match","find","f","_","g","toString","functionBody","Function","func","mapResultFields","Input","forwardRef","mode","onSelect","rest","useSearchContext","rawResults","search","searching","useAutocomplete","searchAutocomplete","completion","suggestions","splice","description","image","onChangeMemoized","onKeyDownMemoized","key","onSelectMemoized","onKeyDown","_customClassNames$inp","_customClassNames$inp2","dropdownFooterClassName","_customClassNames$inp3","dropdownFooter","dropdownHighlightItemClassName","_customClassNames$inp4","dropdownHighlightItem","dropdownSelectedItemClassName","_customClassNames$inp5","dropdownSelectedItem","dropdownItemClassName","_customClassNames$inp6","dropdownItem","dropdownListClassName","_customClassNames$inp7","dropdownList","_customClassNames$inp8","inputContainerClassName","_customClassNames$inp9","inputContainer","resultClassName","_customClassNames$inp10","resultImageContainerClassName","_customClassNames$inp11","resultImageContainer","resultTextContainerClassName","_customClassNames$inp12","resultTextContainer","selectedResultClassName","_customClassNames$inp13","selectedResult","typeaheadClassName","_customClassNames$inp14","typeahead","voiceInputClassName","_customClassNames$inp15","voiceInput","__DEV__","displayName","Pagination","usePagination","setPage","pageCount","totalResults","PurePagination","_customClassNames$pag","_customClassNames$pag2","activeClassName","_customClassNames$pag3","prevClassName","_customClassNames$pag4","prev","nextClassName","_customClassNames$pag5","spacerEllipsisClassName","_customClassNames$pag6","spacerEllipsis","statusClassName","_customClassNames$pag7","status","Message","stylesProp","mapStyles","loadingWrapper","loadingSpinner","loadingText","errorHeading","errorText","defaultText","Spinner","Text","React.Fragment","dangerouslySetInnerHTML","__html","render","Result","memo","imageAspectRatio","imageAspectRatioProp","imageObjectFit","imageObjectFitProp","forceImage","headingClassName","priceClassName","originalPriceClassName","subTitleClassName","ratingClassName","descriptionClassName","onClickProp","subtitle","price","originalPrice","isOnSale","parsePrices","prices","originalPrices","p","isNumber","original","inferStylesObjectKeys","imageContainer","content","priceContainer","push","useResultStyles","aspectRatio","objectFit","imageSrc","imageHoverSrc","renderTitle","Link","decodeHTML","renderSubtitle","renderPrice","String","onContextMenu","Image","src","hoverSrc","truncate","findBreakpoint","breakpoints","ViewOption","inline","renderAsLabel","labelClassName","labelId","searched","labelProps","Label","htmlFor","defaultOptions","type","setViewType","defaultAppearance","width","setWidth","handleResultClicked","useTracking","hasImages","r","_r$values","columnMinWidth","columnsProp","columns","gap","gapProp","spaceY","isObject","clamp","Math","floor","useResultsStyles","statusCode","message","_customClassNames$res","errorMessage","isNullOrUndefined","_customClassNames$res2","searchingMessage","_customClassNames$res3","_customClassNames$res4","emptyMessage","ResizeObserver","onResize","rect","_customClassNames$res5","i","_customClassNames$res6","_customClassNames$res7","_customClassNames$res8","_customClassNames$res9","_customClassNames$res10","_customClassNames$res11","subTitle","_id","useResultsPerPage","setResultsPerPage","useId","optionsSorted","_customClassNames$sor","_customClassNames$sor2","autocomplete","defaultFilter","searchOnLoad","initialResponse","importantStyles","viewTypeProp","useState","setLanguage","useEffect","on","off","pipeline","getTracking","SearchProvider","LiveAnnouncer","I18nextProvider","ThemeProvider","useSorting","setSorting","_customClassNames$sor3","queryValues","suggest","showLatency","get","LiveMessage","object","pluralize","time","trim","ButtonGroup","attached","_customClassNames$vie","buttonGroup","IconSmallGrid","IconSmallList"],"mappings":"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"}