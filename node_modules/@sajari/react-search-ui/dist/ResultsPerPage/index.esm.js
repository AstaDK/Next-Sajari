import { useResultsPerPage, useSearchContext } from '@sajari/react-hooks';
import { isArray } from '@sajari/react-sdk-utils';
import 'react';
import { useTranslation } from 'react-i18next';
import { jsx } from '@emotion/core/jsx-runtime';
import { useSearchUIContext } from '../ContextProvider/index.esm.js';
import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose, extends as _extends } from '../_virtual/_rollupPluginBabelHelpers.js';
import { Select, Option } from '@sajari/react-components';
import { useId } from '@react-aria/utils';
import ViewOption from '../ViewOption/index.esm.js';

var defaultOptions = [15, 25, 50, 100];

var ResultsPerPage = function ResultsPerPage(props) {
  var _customClassNames$sor, _customClassNames$sor2, _customClassNames$res;

  var _useTranslation = useTranslation('resultsPerPage'),
      t = _useTranslation.t;

  var _useSearchUIContext = useSearchUIContext(),
      customClassNames = _useSearchUIContext.customClassNames,
      _useSearchUIContext$d = _useSearchUIContext.disableDefaultStyles,
      disableDefaultStyles = _useSearchUIContext$d === void 0 ? false : _useSearchUIContext$d;

  var _props$label = props.label,
      label = _props$label === void 0 ? t('label') : _props$label,
      _props$options = props.options,
      options = _props$options === void 0 ? defaultOptions : _props$options,
      size = props.size,
      rest = _objectWithoutPropertiesLoose(props, ["label", "options", "styles", "size"]);

  var _useResultsPerPage = useResultsPerPage(),
      resultsPerPage = _useResultsPerPage.resultsPerPage,
      setResultsPerPage = _useResultsPerPage.setResultsPerPage;

  var _useSearchContext = useSearchContext(),
      totalResults = _useSearchContext.totalResults;

  var id = "page-size-" + useId();
  var optionsSorted = options.sort(function (a, b) {
    return a - b;
  });
  var min = optionsSorted[0];

  if (totalResults === 0 || min > totalResults) {
    return null;
  }

  return jsx(ViewOption, _extends({
    id: id,
    label: label,
    size: size,
    className: (_customClassNames$sor = customClassNames.sorting) == null ? void 0 : _customClassNames$sor.container,
    labelClassName: (_customClassNames$sor2 = customClassNames.sorting) == null ? void 0 : _customClassNames$sor2.label,
    renderAsLabel: true
  }, rest, {
    children: jsx(Select, {
      id: id,
      value: "" + resultsPerPage,
      onChange: function onChange(value) {
        return setResultsPerPage(Number(isArray(value) ? value[0] : value));
      },
      size: size,
      disableDefaultStyles: disableDefaultStyles,
      className: (_customClassNames$res = customClassNames.resultsPerPage) == null ? void 0 : _customClassNames$res.select,
      children: optionsSorted.map(function (s) {
        return jsx(Option, {
          value: s,
          children: s
        }, s);
      })
    })
  }));
};

export default ResultsPerPage;
//# sourceMappingURL=index.esm.js.map
