import { useRangeFilter } from '@sajari/react-hooks';
import 'react';
import { jsx } from '@emotion/core/jsx-runtime';
import { useSearchUIContext } from '../ContextProvider/index.esm.js';
import { RangeInput } from '@sajari/react-components';
import { getHeaderId } from './utils.esm.js';
import Box from './Box.esm.js';

var RangeFilter = function RangeFilter(props) {
  var _customClassNames$fil, _customClassNames$fil2, _customClassNames$fil3, _customClassNames$fil4, _customClassNames$fil5, _customClassNames$fil6, _customClassNames$fil7, _customClassNames$fil8, _customClassNames$fil9, _customClassNames$fil10, _customClassNames$fil11, _customClassNames$fil12;

  var name = props.name,
      title = props.title,
      format = props.format,
      showInputs = props.showInputs,
      steps = props.steps,
      tick = props.tick,
      ticks = props.ticks;

  var _useRangeFilter = useRangeFilter(name),
      min = _useRangeFilter.min,
      max = _useRangeFilter.max,
      range = _useRangeFilter.range,
      setRange = _useRangeFilter.setRange,
      reset = _useRangeFilter.reset,
      showReset = _useRangeFilter.showReset,
      step = _useRangeFilter.step;

  var _useSearchUIContext = useSearchUIContext(),
      _useSearchUIContext$d = _useSearchUIContext.disableDefaultStyles,
      disableDefaultStyles = _useSearchUIContext$d === void 0 ? false : _useSearchUIContext$d,
      customClassNames = _useSearchUIContext.customClassNames,
      currency = _useSearchUIContext.currency,
      language = _useSearchUIContext.language;

  if (!range || max === 0) {
    return null;
  }

  return jsx(Box, {
    title: title,
    name: name,
    showReset: showReset,
    onReset: reset,
    children: jsx(RangeInput, {
      language: language,
      format: format,
      currency: currency,
      min: min,
      max: max,
      value: range,
      step: step,
      steps: steps,
      tick: tick,
      ticks: ticks,
      showInputs: showInputs,
      onChange: setRange,
      disableDefaultStyles: disableDefaultStyles,
      className: (_customClassNames$fil = customClassNames.filter) == null ? void 0 : (_customClassNames$fil2 = _customClassNames$fil.range) == null ? void 0 : _customClassNames$fil2.container,
      fillClassName: (_customClassNames$fil3 = customClassNames.filter) == null ? void 0 : (_customClassNames$fil4 = _customClassNames$fil3.range) == null ? void 0 : _customClassNames$fil4.fill,
      handleClassName: (_customClassNames$fil5 = customClassNames.filter) == null ? void 0 : (_customClassNames$fil6 = _customClassNames$fil5.range) == null ? void 0 : _customClassNames$fil6.handle,
      handleActiveClassName: (_customClassNames$fil7 = customClassNames.filter) == null ? void 0 : (_customClassNames$fil8 = _customClassNames$fil7.range) == null ? void 0 : _customClassNames$fil8.handleActive,
      inputClassName: (_customClassNames$fil9 = customClassNames.filter) == null ? void 0 : (_customClassNames$fil10 = _customClassNames$fil9.range) == null ? void 0 : _customClassNames$fil10.input,
      trackClassName: (_customClassNames$fil11 = customClassNames.filter) == null ? void 0 : (_customClassNames$fil12 = _customClassNames$fil11.range) == null ? void 0 : _customClassNames$fil12.track,
      "aria-labelledby": getHeaderId(name)
    })
  });
};

export default RangeFilter;
//# sourceMappingURL=RangeFilter.esm.js.map
