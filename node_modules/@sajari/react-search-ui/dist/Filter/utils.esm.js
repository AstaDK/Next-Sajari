import { formatNumber } from '@sajari/react-sdk-utils';

function pinItems(list, pinned, prop) {
  if (pinned === void 0) {
    pinned = [];
  }

  return [].concat(list).sort(function (a, b) {
    return pinned.indexOf(b[prop]) - pinned.indexOf(a[prop]);
  });
}
function getHeaderId(name) {
  return "filter-" + name + "-label";
}
function formatLabel(input, params) {
  var _params$format = params.format,
      format = _params$format === void 0 ? 'default' : _params$format,
      _params$currency = params.currency,
      currency = _params$currency === void 0 ? 'USD' : _params$currency,
      t = params.t;

  var formatPrice = function formatPrice(v) {
    return formatNumber(v, {
      style: 'currency',
      currency: currency
    }).replace('.00', '');
  };

  switch (format) {
    case 'price':
      switch (true) {
        case /\d+\s-\s\d+/gm.test(input):
          {
            var _input$split$map$map = input.split(' - ').map(Number).map(formatPrice),
                min = _input$split$map$map[0],
                max = _input$split$map$map[1];

            return min + " - " + max;
          }

        case input.startsWith('>'):
          return t('rangeOver', {
            value: formatPrice(Number(input.substring(2)))
          });

        case input.startsWith('<'):
          return t('rangeUnder', {
            value: formatPrice(Number(input.substring(2)))
          });

        default:
          return input;
      }

    case 'default':
    default:
      return input;
  }
}

export { formatLabel, getHeaderId, pinItems };
//# sourceMappingURL=utils.esm.js.map
