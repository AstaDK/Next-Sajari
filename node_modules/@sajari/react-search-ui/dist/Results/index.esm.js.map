{"version":3,"file":"index.esm.js","sources":["../../src/Results/index.tsx"],"sourcesContent":["import { ResizeObserver } from '@sajari/react-components';\nimport { useQuery, useSearchContext, useTracking } from '@sajari/react-hooks';\nimport { getStylesObject, isEmpty, isNullOrUndefined } from '@sajari/react-sdk-utils';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { useSearchUIContext } from '../ContextProvider';\nimport mapResultFields from '../utils/mapResultFields';\nimport Message from './components/Message';\nimport Result from './components/Result';\nimport useResultsStyles from './styles';\nimport { ResultsProps, ResultValues } from './types';\n\nconst Results = (props: ResultsProps) => {\n  const { results: rawResults, searching, fields, error } = useSearchContext();\n  const results = React.useMemo(() => (rawResults ? mapResultFields<ResultValues>(rawResults, fields) : undefined), [\n    rawResults,\n  ]);\n  const { disableDefaultStyles = false, customClassNames, viewType, setViewType } = useSearchUIContext();\n  const { query } = useQuery();\n  const { defaultAppearance, appearance = viewType, styles: stylesProp, ...rest } = props;\n  const [width, setWidth] = React.useState(0);\n  const { handleResultClicked } = useTracking();\n  const hasImages = React.useMemo(() => results?.some((r) => r.values?.image), [results]);\n  const styles = getStylesObject(useResultsStyles({ ...props, appearance, width }), disableDefaultStyles);\n  const { t } = useTranslation(['common', 'errors', 'result']);\n\n  React.useEffect(() => {\n    if (defaultAppearance) {\n      setViewType(defaultAppearance);\n    }\n  }, []);\n\n  if (error) {\n    let body = t('errors:generic');\n\n    if (error.statusCode === 403) {\n      body = t('errors:authorization');\n    } else if (error.name === 'NetworkError' || error.message.startsWith('NetworkError')) {\n      body = t('errors:connection');\n    }\n\n    return <Message title={t('common:error')} body={body} className={customClassNames.results?.errorMessage} />;\n  }\n\n  // We've not searched yet\n  if (isNullOrUndefined(results)) {\n    return (\n      <Message\n        title={t('common:loading')}\n        appearance=\"loading\"\n        disableDefaultStyles={disableDefaultStyles}\n        className={customClassNames.results?.searchingMessage}\n      />\n    );\n  }\n\n  // There's genuinely no results\n  // Show a loader if we're refreshing from no results\n  if (isEmpty(results)) {\n    if (searching) {\n      return (\n        <Message\n          title={t('common:loading')}\n          appearance=\"loading\"\n          disableDefaultStyles={disableDefaultStyles}\n          className={customClassNames.results?.searchingMessage}\n        />\n      );\n    }\n\n    return (\n      <Message\n        title={t('results:empty.title')}\n        body={t('results:empty.body', { query: `<strong>${query}</strong>` })}\n        disableDefaultStyles={disableDefaultStyles}\n        className={customClassNames.results?.emptyMessage}\n      />\n    );\n  }\n\n  return (\n    <ResizeObserver\n      onResize={(rect) => setWidth(rect.width)}\n      css={[styles.container, stylesProp]}\n      className={customClassNames.results?.container}\n    >\n      {results?.map(({ values, token }, i) => (\n        <Result\n          onClick={handleResultClicked}\n          token={token}\n          // eslint-disable-next-line no-underscore-dangle\n          key={values._id ?? i}\n          values={values}\n          appearance={appearance}\n          forceImage={hasImages}\n          disableDefaultStyles={disableDefaultStyles}\n          className={customClassNames.results?.item}\n          headingClassName={customClassNames.results?.heading}\n          descriptionClassName={customClassNames.results?.description}\n          priceClassName={customClassNames.results?.price}\n          ratingClassName={customClassNames.results?.rating}\n          subTitleClassName={customClassNames.results?.subTitle}\n          {...rest}\n        />\n      ))}\n    </ResizeObserver>\n  );\n};\n\nexport default Results;\nexport type { ResultsProps };\n"],"names":["Results","props","useSearchContext","rawResults","results","searching","fields","error","React","mapResultFields","undefined","useSearchUIContext","disableDefaultStyles","customClassNames","viewType","setViewType","useQuery","query","defaultAppearance","appearance","stylesProp","styles","rest","width","setWidth","useTracking","handleResultClicked","hasImages","some","r","values","image","getStylesObject","useResultsStyles","useTranslation","t","body","statusCode","name","message","startsWith","_jsx","errorMessage","isNullOrUndefined","searchingMessage","isEmpty","emptyMessage","rect","container","map","i","token","item","heading","description","price","rating","subTitle","_id"],"mappings":"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"}